(function webpackUniversalModuleDefinition(root, factory) {
    if(typeof exports === 'object' && typeof module === 'object')
        module.exports = factory();
    else if(typeof define === 'function' && define.amd)
        define([], factory);
    else if(typeof exports === 'object')
        exports["PaazlCheckout"] = factory();
    else
        root["PaazlCheckout"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
    return /******/ (function(modules) { // webpackBootstrap
        /******/ 	// install a JSONP callback for chunk loading
        /******/ 	var parentJsonpFunction = window["webpackJsonp_object_Object_"];
        /******/ 	window["webpackJsonp_object_Object_"] = function webpackJsonpCallback(chunkIds, moreModules, executeModules) {
            /******/ 		// add "moreModules" to the modules object,
            /******/ 		// then flag all "chunkIds" as loaded and fire callback
            /******/ 		var moduleId, chunkId, i = 0, resolves = [], result;
            /******/ 		for(;i < chunkIds.length; i++) {
                /******/ 			chunkId = chunkIds[i];
                /******/ 			if(installedChunks[chunkId]) {
                    /******/ 				resolves.push(installedChunks[chunkId][0]);
                    /******/ 			}
                /******/ 			installedChunks[chunkId] = 0;
                /******/ 		}
            /******/ 		for(moduleId in moreModules) {
                /******/ 			if(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
                    /******/ 				modules[moduleId] = moreModules[moduleId];
                    /******/ 			}
                /******/ 		}
            /******/ 		if(parentJsonpFunction) parentJsonpFunction(chunkIds, moreModules, executeModules);
            /******/ 		while(resolves.length) {
                /******/ 			resolves.shift()();
                /******/ 		}
            /******/
            /******/ 	};
        /******/
        /******/ 	// The module cache
        /******/ 	var installedModules = {};
        /******/
        /******/ 	// objects to store loaded and loading chunks
        /******/ 	var installedChunks = {
            /******/ 		1: 0
            /******/ 	};
        /******/
        /******/ 	// The require function
        /******/ 	function __webpack_require__(moduleId) {
            /******/
            /******/ 		// Check if module is in cache
            /******/ 		if(installedModules[moduleId]) {
                /******/ 			return installedModules[moduleId].exports;
                /******/ 		}
            /******/ 		// Create a new module (and put it into the cache)
            /******/ 		var module = installedModules[moduleId] = {
                /******/ 			i: moduleId,
                /******/ 			l: false,
                /******/ 			exports: {}
                /******/ 		};
            /******/
            /******/ 		// Execute the module function
            /******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
            /******/
            /******/ 		// Flag the module as loaded
            /******/ 		module.l = true;
            /******/
            /******/ 		// Return the exports of the module
            /******/ 		return module.exports;
            /******/ 	}
        /******/
        /******/ 	// This file contains only the entry chunk.
        /******/ 	// The chunk loading function for additional chunks
        /******/ 	__webpack_require__.e = function requireEnsure(chunkId) {
            /******/ 		var installedChunkData = installedChunks[chunkId];
            /******/ 		if(installedChunkData === 0) {
                /******/ 			return new Promise(function(resolve) { resolve(); });
                /******/ 		}
            /******/
            /******/ 		// a Promise means "currently loading".
            /******/ 		if(installedChunkData) {
                /******/ 			return installedChunkData[2];
                /******/ 		}
            /******/
            /******/ 		// setup Promise in chunk cache
            /******/ 		var promise = new Promise(function(resolve, reject) {
                /******/ 			installedChunkData = installedChunks[chunkId] = [resolve, reject];
                /******/ 		});
            /******/ 		installedChunkData[2] = promise;
            /******/
            /******/ 		// start chunk loading
            /******/ 		var head = document.getElementsByTagName('head')[0];
            /******/ 		var script = document.createElement('script');
            /******/ 		script.type = "text/javascript";
            /******/ 		script.charset = 'utf-8';
            /******/ 		script.async = true;
            /******/ 		script.timeout = 120000;
            /******/
            /******/ 		if (__webpack_require__.nc) {
                /******/ 			script.setAttribute("nonce", __webpack_require__.nc);
                /******/ 		}
            /******/ 		script.src = __webpack_require__.p + "" + ({"0":"ie-polyfills"}[chunkId]||chunkId) + ".js";
            /******/ 		var timeout = setTimeout(onScriptComplete, 120000);
            /******/ 		script.onerror = script.onload = onScriptComplete;
            /******/ 		function onScriptComplete() {
                /******/ 			// avoid mem leaks in IE.
                /******/ 			script.onerror = script.onload = null;
                /******/ 			clearTimeout(timeout);
                /******/ 			var chunk = installedChunks[chunkId];
                /******/ 			if(chunk !== 0) {
                    /******/ 				if(chunk) {
                        /******/ 					chunk[1](new Error('Loading chunk ' + chunkId + ' failed.'));
                        /******/ 				}
                    /******/ 				installedChunks[chunkId] = undefined;
                    /******/ 			}
                /******/ 		};
            /******/ 		head.appendChild(script);
            /******/
            /******/ 		return promise;
            /******/ 	};
        /******/
        /******/ 	// expose the modules object (__webpack_modules__)
        /******/ 	__webpack_require__.m = modules;
        /******/
        /******/ 	// expose the module cache
        /******/ 	__webpack_require__.c = installedModules;
        /******/
        /******/ 	// define getter function for harmony exports
        /******/ 	__webpack_require__.d = function(exports, name, getter) {
            /******/ 		if(!__webpack_require__.o(exports, name)) {
                /******/ 			Object.defineProperty(exports, name, {
                    /******/ 				configurable: false,
                    /******/ 				enumerable: true,
                    /******/ 				get: getter
                    /******/ 			});
                /******/ 		}
            /******/ 	};
        /******/
        /******/ 	// getDefaultExport function for compatibility with non-harmony modules
        /******/ 	__webpack_require__.n = function(module) {
            /******/ 		var getter = module && module.__esModule ?
                /******/ 			function getDefault() { return module['default']; } :
                /******/ 			function getModuleExports() { return module; };
            /******/ 		__webpack_require__.d(getter, 'a', getter);
            /******/ 		return getter;
            /******/ 	};
        /******/
        /******/ 	// Object.prototype.hasOwnProperty.call
        /******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
        /******/
        /******/ 	// __webpack_public_path__
        /******/ 	__webpack_require__.p = "//localhost:3000/";
        /******/
        /******/ 	// on error function for async loading
        /******/ 	__webpack_require__.oe = function(err) { console.error(err); throw err; };
        /******/
        /******/ 	// Load entry module and return exports
        /******/ 	return __webpack_require__(__webpack_require__.s = 137);
        /******/ })
        /************************************************************************/
        /******/ ([
            /* 0 */
            /***/ (function(module, __webpack_exports__, __webpack_require__) {

                "use strict";
                Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "h", function() { return h; });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createElement", function() { return h; });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cloneElement", function() { return cloneElement; });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Component", function() { return Component; });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render; });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rerender", function() { return rerender; });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "options", function() { return options; });
                /** Virtual DOM Node */
                function VNode() {}

                /** Global options
                 *	@public
                 *	@namespace options {Object}
                 */
                var options = {

                    /** If `true`, `prop` changes trigger synchronous component updates.
                     *	@name syncComponentUpdates
                     *	@type Boolean
                     *	@default true
                     */
                    //syncComponentUpdates: true,

                    /** Processes all created VNodes.
                     *	@param {VNode} vnode	A newly-created VNode to normalize/process
                     */
                    //vnode(vnode) { }

                    /** Hook invoked after a component is mounted. */
                    // afterMount(component) { }

                    /** Hook invoked after the DOM is updated with a component's latest render. */
                    // afterUpdate(component) { }

                    /** Hook invoked immediately before a component is unmounted. */
                    // beforeUnmount(component) { }
                };

                var stack = [];

                var EMPTY_CHILDREN = [];

                /**
                 * JSX/hyperscript reviver.
                 * @see http://jasonformat.com/wtf-is-jsx
                 * Benchmarks: https://esbench.com/bench/57ee8f8e330ab09900a1a1a0
                 *
                 * Note: this is exported as both `h()` and `createElement()` for compatibility reasons.
                 *
                 * Creates a VNode (virtual DOM element). A tree of VNodes can be used as a lightweight representation
                 * of the structure of a DOM tree. This structure can be realized by recursively comparing it against
                 * the current _actual_ DOM structure, and applying only the differences.
                 *
                 * `h()`/`createElement()` accepts an element name, a list of attributes/props,
                 * and optionally children to append to the element.
                 *
                 * @example The following DOM tree
                 *
                 * `<div id="foo" name="bar">Hello!</div>`
                 *
                 * can be constructed using this function as:
                 *
                 * `h('div', { id: 'foo', name : 'bar' }, 'Hello!');`
                 *
                 * @param {string} nodeName	An element name. Ex: `div`, `a`, `span`, etc.
                 * @param {Object} attributes	Any attributes/props to set on the created element.
                 * @param rest			Additional arguments are taken to be children to append. Can be infinitely nested Arrays.
                 *
                 * @public
                 */
                function h(nodeName, attributes) {
                    var children = EMPTY_CHILDREN,
                        lastSimple,
                        child,
                        simple,
                        i;
                    for (i = arguments.length; i-- > 2;) {
                        stack.push(arguments[i]);
                    }
                    if (attributes && attributes.children != null) {
                        if (!stack.length) stack.push(attributes.children);
                        delete attributes.children;
                    }
                    while (stack.length) {
                        if ((child = stack.pop()) && child.pop !== undefined) {
                            for (i = child.length; i--;) {
                                stack.push(child[i]);
                            }
                        } else {
                            if (typeof child === 'boolean') child = null;

                            if (simple = typeof nodeName !== 'function') {
                                if (child == null) child = '';else if (typeof child === 'number') child = String(child);else if (typeof child !== 'string') simple = false;
                            }

                            if (simple && lastSimple) {
                                children[children.length - 1] += child;
                            } else if (children === EMPTY_CHILDREN) {
                                children = [child];
                            } else {
                                children.push(child);
                            }

                            lastSimple = simple;
                        }
                    }

                    var p = new VNode();
                    p.nodeName = nodeName;
                    p.children = children;
                    p.attributes = attributes == null ? undefined : attributes;
                    p.key = attributes == null ? undefined : attributes.key;

                    // if a "vnode hook" is defined, pass every created VNode to it
                    if (options.vnode !== undefined) options.vnode(p);

                    return p;
                }

                /**
                 *  Copy all properties from `props` onto `obj`.
                 *  @param {Object} obj		Object onto which properties should be copied.
                 *  @param {Object} props	Object from which to copy properties.
                 *  @returns obj
                 *  @private
                 */
                function extend(obj, props) {
                    for (var i in props) {
                        obj[i] = props[i];
                    }return obj;
                }

                /**
                 * Call a function asynchronously, as soon as possible. Makes
                 * use of HTML Promise to schedule the callback if available,
                 * otherwise falling back to `setTimeout` (mainly for IE<11).
                 *
                 * @param {Function} callback
                 */
                var defer = typeof Promise == 'function' ? Promise.resolve().then.bind(Promise.resolve()) : setTimeout;

                /**
                 * Clones the given VNode, optionally adding attributes/props and replacing its children.
                 * @param {VNode} vnode		The virtual DOM element to clone
                 * @param {Object} props	Attributes/props to add when cloning
                 * @param {VNode} rest		Any additional arguments will be used as replacement children.
                 */
                function cloneElement(vnode, props) {
                    return h(vnode.nodeName, extend(extend({}, vnode.attributes), props), arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children);
                }

// DOM properties that should NOT have "px" added when numeric
                var IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|ows|mnc|ntw|ine[ch]|zoo|^ord/i;

                /** Managed queue of dirty components to be re-rendered */

                var items = [];

                function enqueueRender(component) {
                    if (!component._dirty && (component._dirty = true) && items.push(component) == 1) {
                        (options.debounceRendering || defer)(rerender);
                    }
                }

                function rerender() {
                    var p,
                        list = items;
                    items = [];
                    while (p = list.pop()) {
                        if (p._dirty) renderComponent(p);
                    }
                }

                /**
                 * Check if two nodes are equivalent.
                 *
                 * @param {Node} node			DOM Node to compare
                 * @param {VNode} vnode			Virtual DOM node to compare
                 * @param {boolean} [hydrating=false]	If true, ignores component constructors when comparing.
                 * @private
                 */
                function isSameNodeType(node, vnode, hydrating) {
                    if (typeof vnode === 'string' || typeof vnode === 'number') {
                        return node.splitText !== undefined;
                    }
                    if (typeof vnode.nodeName === 'string') {
                        return !node._componentConstructor && isNamedNode(node, vnode.nodeName);
                    }
                    return hydrating || node._componentConstructor === vnode.nodeName;
                }

                /**
                 * Check if an Element has a given nodeName, case-insensitively.
                 *
                 * @param {Element} node	A DOM Element to inspect the name of.
                 * @param {String} nodeName	Unnormalized name to compare against.
                 */
                function isNamedNode(node, nodeName) {
                    return node.normalizedNodeName === nodeName || node.nodeName.toLowerCase() === nodeName.toLowerCase();
                }

                /**
                 * Reconstruct Component-style `props` from a VNode.
                 * Ensures default/fallback values from `defaultProps`:
                 * Own-properties of `defaultProps` not present in `vnode.attributes` are added.
                 *
                 * @param {VNode} vnode
                 * @returns {Object} props
                 */
                function getNodeProps(vnode) {
                    var props = extend({}, vnode.attributes);
                    props.children = vnode.children;

                    var defaultProps = vnode.nodeName.defaultProps;
                    if (defaultProps !== undefined) {
                        for (var i in defaultProps) {
                            if (props[i] === undefined) {
                                props[i] = defaultProps[i];
                            }
                        }
                    }

                    return props;
                }

                /** Create an element with the given nodeName.
                 *	@param {String} nodeName
                 *	@param {Boolean} [isSvg=false]	If `true`, creates an element within the SVG namespace.
                 *	@returns {Element} node
                 */
                function createNode(nodeName, isSvg) {
                    var node = isSvg ? document.createElementNS('http://www.w3.org/2000/svg', nodeName) : document.createElement(nodeName);
                    node.normalizedNodeName = nodeName;
                    return node;
                }

                /** Remove a child node from its parent if attached.
                 *	@param {Element} node		The node to remove
                 */
                function removeNode(node) {
                    var parentNode = node.parentNode;
                    if (parentNode) parentNode.removeChild(node);
                }

                /** Set a named attribute on the given Node, with special behavior for some names and event handlers.
                 *	If `value` is `null`, the attribute/handler will be removed.
                 *	@param {Element} node	An element to mutate
                 *	@param {string} name	The name/key to set, such as an event or attribute name
                 *	@param {any} old	The last value that was set for this name/node pair
                 *	@param {any} value	An attribute value, such as a function to be used as an event handler
                 *	@param {Boolean} isSvg	Are we currently diffing inside an svg?
                 *	@private
                 */
                function setAccessor(node, name, old, value, isSvg) {
                    if (name === 'className') name = 'class';

                    if (name === 'key') {
                        // ignore
                    } else if (name === 'ref') {
                        if (old) old(null);
                        if (value) value(node);
                    } else if (name === 'class' && !isSvg) {
                        node.className = value || '';
                    } else if (name === 'style') {
                        if (!value || typeof value === 'string' || typeof old === 'string') {
                            node.style.cssText = value || '';
                        }
                        if (value && typeof value === 'object') {
                            if (typeof old !== 'string') {
                                for (var i in old) {
                                    if (!(i in value)) node.style[i] = '';
                                }
                            }
                            for (var i in value) {
                                node.style[i] = typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false ? value[i] + 'px' : value[i];
                            }
                        }
                    } else if (name === 'dangerouslySetInnerHTML') {
                        if (value) node.innerHTML = value.__html || '';
                    } else if (name[0] == 'o' && name[1] == 'n') {
                        var useCapture = name !== (name = name.replace(/Capture$/, ''));
                        name = name.toLowerCase().substring(2);
                        if (value) {
                            if (!old) node.addEventListener(name, eventProxy, useCapture);
                        } else {
                            node.removeEventListener(name, eventProxy, useCapture);
                        }
                        (node._listeners || (node._listeners = {}))[name] = value;
                    } else if (name !== 'list' && name !== 'type' && !isSvg && name in node) {
                        setProperty(node, name, value == null ? '' : value);
                        if (value == null || value === false) node.removeAttribute(name);
                    } else {
                        var ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''));
                        if (value == null || value === false) {
                            if (ns) node.removeAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase());else node.removeAttribute(name);
                        } else if (typeof value !== 'function') {
                            if (ns) node.setAttributeNS('http://www.w3.org/1999/xlink', name.toLowerCase(), value);else node.setAttribute(name, value);
                        }
                    }
                }

                /** Attempt to set a DOM property to the given value.
                 *	IE & FF throw for certain property-value combinations.
                 */
                function setProperty(node, name, value) {
                    try {
                        node[name] = value;
                    } catch (e) {}
                }

                /** Proxy an event to hooked event handlers
                 *	@private
                 */
                function eventProxy(e) {
                    return this._listeners[e.type](options.event && options.event(e) || e);
                }

                /** Queue of components that have been mounted and are awaiting componentDidMount */
                var mounts = [];

                /** Diff recursion count, used to track the end of the diff cycle. */
                var diffLevel = 0;

                /** Global flag indicating if the diff is currently within an SVG */
                var isSvgMode = false;

                /** Global flag indicating if the diff is performing hydration */
                var hydrating = false;

                /** Invoke queued componentDidMount lifecycle methods */
                function flushMounts() {
                    var c;
                    while (c = mounts.pop()) {
                        if (options.afterMount) options.afterMount(c);
                        if (c.componentDidMount) c.componentDidMount();
                    }
                }

                /** Apply differences in a given vnode (and it's deep children) to a real DOM Node.
                 *	@param {Element} [dom=null]		A DOM node to mutate into the shape of the `vnode`
                 *	@param {VNode} vnode			A VNode (with descendants forming a tree) representing the desired DOM structure
                 *	@returns {Element} dom			The created/mutated element
                 *	@private
                 */
                function diff(dom, vnode, context, mountAll, parent, componentRoot) {
                    // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)
                    if (!diffLevel++) {
                        // when first starting the diff, check if we're diffing an SVG or within an SVG
                        isSvgMode = parent != null && parent.ownerSVGElement !== undefined;

                        // hydration is indicated by the existing element to be diffed not having a prop cache
                        hydrating = dom != null && !('__preactattr_' in dom);
                    }

                    var ret = idiff(dom, vnode, context, mountAll, componentRoot);

                    // append the element if its a new parent
                    if (parent && ret.parentNode !== parent) parent.appendChild(ret);

                    // diffLevel being reduced to 0 means we're exiting the diff
                    if (! --diffLevel) {
                        hydrating = false;
                        // invoke queued componentDidMount lifecycle methods
                        if (!componentRoot) flushMounts();
                    }

                    return ret;
                }

                /** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */
                function idiff(dom, vnode, context, mountAll, componentRoot) {
                    var out = dom,
                        prevSvgMode = isSvgMode;

                    // empty values (null, undefined, booleans) render as empty Text nodes
                    if (vnode == null || typeof vnode === 'boolean') vnode = '';

                    // Fast case: Strings & Numbers create/update Text nodes.
                    if (typeof vnode === 'string' || typeof vnode === 'number') {

                        // update if it's already a Text node:
                        if (dom && dom.splitText !== undefined && dom.parentNode && (!dom._component || componentRoot)) {
                            /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */
                            if (dom.nodeValue != vnode) {
                                dom.nodeValue = vnode;
                            }
                        } else {
                            // it wasn't a Text node: replace it with one and recycle the old Element
                            out = document.createTextNode(vnode);
                            if (dom) {
                                if (dom.parentNode) dom.parentNode.replaceChild(out, dom);
                                recollectNodeTree(dom, true);
                            }
                        }

                        out['__preactattr_'] = true;

                        return out;
                    }

                    // If the VNode represents a Component, perform a component diff:
                    var vnodeName = vnode.nodeName;
                    if (typeof vnodeName === 'function') {
                        return buildComponentFromVNode(dom, vnode, context, mountAll);
                    }

                    // Tracks entering and exiting SVG namespace when descending through the tree.
                    isSvgMode = vnodeName === 'svg' ? true : vnodeName === 'foreignObject' ? false : isSvgMode;

                    // If there's no existing element or it's the wrong type, create a new one:
                    vnodeName = String(vnodeName);
                    if (!dom || !isNamedNode(dom, vnodeName)) {
                        out = createNode(vnodeName, isSvgMode);

                        if (dom) {
                            // move children into the replacement node
                            while (dom.firstChild) {
                                out.appendChild(dom.firstChild);
                            } // if the previous Element was mounted into the DOM, replace it inline
                            if (dom.parentNode) dom.parentNode.replaceChild(out, dom);

                            // recycle the old element (skips non-Element node types)
                            recollectNodeTree(dom, true);
                        }
                    }

                    var fc = out.firstChild,
                        props = out['__preactattr_'],
                        vchildren = vnode.children;

                    if (props == null) {
                        props = out['__preactattr_'] = {};
                        for (var a = out.attributes, i = a.length; i--;) {
                            props[a[i].name] = a[i].value;
                        }
                    }

                    // Optimization: fast-path for elements containing a single TextNode:
                    if (!hydrating && vchildren && vchildren.length === 1 && typeof vchildren[0] === 'string' && fc != null && fc.splitText !== undefined && fc.nextSibling == null) {
                        if (fc.nodeValue != vchildren[0]) {
                            fc.nodeValue = vchildren[0];
                        }
                    }
                    // otherwise, if there are existing or new children, diff them:
                    else if (vchildren && vchildren.length || fc != null) {
                        innerDiffNode(out, vchildren, context, mountAll, hydrating || props.dangerouslySetInnerHTML != null);
                    }

                    // Apply attributes/props from VNode to the DOM Element:
                    diffAttributes(out, vnode.attributes, props);

                    // restore previous SVG mode: (in case we're exiting an SVG namespace)
                    isSvgMode = prevSvgMode;

                    return out;
                }

                /** Apply child and attribute changes between a VNode and a DOM Node to the DOM.
                 *	@param {Element} dom			Element whose children should be compared & mutated
                 *	@param {Array} vchildren		Array of VNodes to compare to `dom.childNodes`
                 *	@param {Object} context			Implicitly descendant context object (from most recent `getChildContext()`)
                 *	@param {Boolean} mountAll
                 *	@param {Boolean} isHydrating	If `true`, consumes externally created elements similar to hydration
                 */
                function innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {
                    var originalChildren = dom.childNodes,
                        children = [],
                        keyed = {},
                        keyedLen = 0,
                        min = 0,
                        len = originalChildren.length,
                        childrenLen = 0,
                        vlen = vchildren ? vchildren.length : 0,
                        j,
                        c,
                        f,
                        vchild,
                        child;

                    // Build up a map of keyed children and an Array of unkeyed children:
                    if (len !== 0) {
                        for (var i = 0; i < len; i++) {
                            var _child = originalChildren[i],
                                props = _child['__preactattr_'],
                                key = vlen && props ? _child._component ? _child._component.__key : props.key : null;
                            if (key != null) {
                                keyedLen++;
                                keyed[key] = _child;
                            } else if (props || (_child.splitText !== undefined ? isHydrating ? _child.nodeValue.trim() : true : isHydrating)) {
                                children[childrenLen++] = _child;
                            }
                        }
                    }

                    if (vlen !== 0) {
                        for (var i = 0; i < vlen; i++) {
                            vchild = vchildren[i];
                            child = null;

                            // attempt to find a node based on key matching
                            var key = vchild.key;
                            if (key != null) {
                                if (keyedLen && keyed[key] !== undefined) {
                                    child = keyed[key];
                                    keyed[key] = undefined;
                                    keyedLen--;
                                }
                            }
                            // attempt to pluck a node of the same type from the existing children
                            else if (!child && min < childrenLen) {
                                for (j = min; j < childrenLen; j++) {
                                    if (children[j] !== undefined && isSameNodeType(c = children[j], vchild, isHydrating)) {
                                        child = c;
                                        children[j] = undefined;
                                        if (j === childrenLen - 1) childrenLen--;
                                        if (j === min) min++;
                                        break;
                                    }
                                }
                            }

                            // morph the matched/found/created DOM child to match vchild (deep)
                            child = idiff(child, vchild, context, mountAll);

                            f = originalChildren[i];
                            if (child && child !== dom && child !== f) {
                                if (f == null) {
                                    dom.appendChild(child);
                                } else if (child === f.nextSibling) {
                                    removeNode(f);
                                } else {
                                    dom.insertBefore(child, f);
                                }
                            }
                        }
                    }

                    // remove unused keyed children:
                    if (keyedLen) {
                        for (var i in keyed) {
                            if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false);
                        }
                    }

                    // remove orphaned unkeyed children:
                    while (min <= childrenLen) {
                        if ((child = children[childrenLen--]) !== undefined) recollectNodeTree(child, false);
                    }
                }

                /** Recursively recycle (or just unmount) a node and its descendants.
                 *	@param {Node} node						DOM node to start unmount/removal from
                 *	@param {Boolean} [unmountOnly=false]	If `true`, only triggers unmount lifecycle, skips removal
                 */
                function recollectNodeTree(node, unmountOnly) {
                    var component = node._component;
                    if (component) {
                        // if node is owned by a Component, unmount that component (ends up recursing back here)
                        unmountComponent(component);
                    } else {
                        // If the node's VNode had a ref function, invoke it with null here.
                        // (this is part of the React spec, and smart for unsetting references)
                        if (node['__preactattr_'] != null && node['__preactattr_'].ref) node['__preactattr_'].ref(null);

                        if (unmountOnly === false || node['__preactattr_'] == null) {
                            removeNode(node);
                        }

                        removeChildren(node);
                    }
                }

                /** Recollect/unmount all children.
                 *	- we use .lastChild here because it causes less reflow than .firstChild
                 *	- it's also cheaper than accessing the .childNodes Live NodeList
                 */
                function removeChildren(node) {
                    node = node.lastChild;
                    while (node) {
                        var next = node.previousSibling;
                        recollectNodeTree(node, true);
                        node = next;
                    }
                }

                /** Apply differences in attributes from a VNode to the given DOM Element.
                 *	@param {Element} dom		Element with attributes to diff `attrs` against
                 *	@param {Object} attrs		The desired end-state key-value attribute pairs
                 *	@param {Object} old			Current/previous attributes (from previous VNode or element's prop cache)
                 */
                function diffAttributes(dom, attrs, old) {
                    var name;

                    // remove attributes no longer present on the vnode by setting them to undefined
                    for (name in old) {
                        if (!(attrs && attrs[name] != null) && old[name] != null) {
                            setAccessor(dom, name, old[name], old[name] = undefined, isSvgMode);
                        }
                    }

                    // add new & update changed attributes
                    for (name in attrs) {
                        if (name !== 'children' && name !== 'innerHTML' && (!(name in old) || attrs[name] !== (name === 'value' || name === 'checked' ? dom[name] : old[name]))) {
                            setAccessor(dom, name, old[name], old[name] = attrs[name], isSvgMode);
                        }
                    }
                }

                /** Retains a pool of Components for re-use, keyed on component name.
                 *	Note: since component names are not unique or even necessarily available, these are primarily a form of sharding.
                 *	@private
                 */
                var components = {};

                /** Reclaim a component for later re-use by the recycler. */
                function collectComponent(component) {
                    var name = component.constructor.name;
                    (components[name] || (components[name] = [])).push(component);
                }

                /** Create a component. Normalizes differences between PFC's and classful Components. */
                function createComponent(Ctor, props, context) {
                    var list = components[Ctor.name],
                        inst;

                    if (Ctor.prototype && Ctor.prototype.render) {
                        inst = new Ctor(props, context);
                        Component.call(inst, props, context);
                    } else {
                        inst = new Component(props, context);
                        inst.constructor = Ctor;
                        inst.render = doRender;
                    }

                    if (list) {
                        for (var i = list.length; i--;) {
                            if (list[i].constructor === Ctor) {
                                inst.nextBase = list[i].nextBase;
                                list.splice(i, 1);
                                break;
                            }
                        }
                    }
                    return inst;
                }

                /** The `.render()` method for a PFC backing instance. */
                function doRender(props, state, context) {
                    return this.constructor(props, context);
                }

                /** Set a component's `props` (generally derived from JSX attributes).
                 *	@param {Object} props
                 *	@param {Object} [opts]
                 *	@param {boolean} [opts.renderSync=false]	If `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.
                 *	@param {boolean} [opts.render=true]			If `false`, no render will be triggered.
                 */
                function setComponentProps(component, props, opts, context, mountAll) {
                    if (component._disable) return;
                    component._disable = true;

                    if (component.__ref = props.ref) delete props.ref;
                    if (component.__key = props.key) delete props.key;

                    if (!component.base || mountAll) {
                        if (component.componentWillMount) component.componentWillMount();
                    } else if (component.componentWillReceiveProps) {
                        component.componentWillReceiveProps(props, context);
                    }

                    if (context && context !== component.context) {
                        if (!component.prevContext) component.prevContext = component.context;
                        component.context = context;
                    }

                    if (!component.prevProps) component.prevProps = component.props;
                    component.props = props;

                    component._disable = false;

                    if (opts !== 0) {
                        if (opts === 1 || options.syncComponentUpdates !== false || !component.base) {
                            renderComponent(component, 1, mountAll);
                        } else {
                            enqueueRender(component);
                        }
                    }

                    if (component.__ref) component.__ref(component);
                }

                /** Render a Component, triggering necessary lifecycle events and taking High-Order Components into account.
                 *	@param {Component} component
                 *	@param {Object} [opts]
                 *	@param {boolean} [opts.build=false]		If `true`, component will build and store a DOM node if not already associated with one.
                 *	@private
                 */
                function renderComponent(component, opts, mountAll, isChild) {
                    if (component._disable) return;

                    var props = component.props,
                        state = component.state,
                        context = component.context,
                        previousProps = component.prevProps || props,
                        previousState = component.prevState || state,
                        previousContext = component.prevContext || context,
                        isUpdate = component.base,
                        nextBase = component.nextBase,
                        initialBase = isUpdate || nextBase,
                        initialChildComponent = component._component,
                        skip = false,
                        rendered,
                        inst,
                        cbase;

                    // if updating
                    if (isUpdate) {
                        component.props = previousProps;
                        component.state = previousState;
                        component.context = previousContext;
                        if (opts !== 2 && component.shouldComponentUpdate && component.shouldComponentUpdate(props, state, context) === false) {
                            skip = true;
                        } else if (component.componentWillUpdate) {
                            component.componentWillUpdate(props, state, context);
                        }
                        component.props = props;
                        component.state = state;
                        component.context = context;
                    }

                    component.prevProps = component.prevState = component.prevContext = component.nextBase = null;
                    component._dirty = false;

                    if (!skip) {
                        rendered = component.render(props, state, context);

                        // context to pass to the child, can be updated via (grand-)parent component
                        if (component.getChildContext) {
                            context = extend(extend({}, context), component.getChildContext());
                        }

                        var childComponent = rendered && rendered.nodeName,
                            toUnmount,
                            base;

                        if (typeof childComponent === 'function') {
                            // set up high order component link

                            var childProps = getNodeProps(rendered);
                            inst = initialChildComponent;

                            if (inst && inst.constructor === childComponent && childProps.key == inst.__key) {
                                setComponentProps(inst, childProps, 1, context, false);
                            } else {
                                toUnmount = inst;

                                component._component = inst = createComponent(childComponent, childProps, context);
                                inst.nextBase = inst.nextBase || nextBase;
                                inst._parentComponent = component;
                                setComponentProps(inst, childProps, 0, context, false);
                                renderComponent(inst, 1, mountAll, true);
                            }

                            base = inst.base;
                        } else {
                            cbase = initialBase;

                            // destroy high order component link
                            toUnmount = initialChildComponent;
                            if (toUnmount) {
                                cbase = component._component = null;
                            }

                            if (initialBase || opts === 1) {
                                if (cbase) cbase._component = null;
                                base = diff(cbase, rendered, context, mountAll || !isUpdate, initialBase && initialBase.parentNode, true);
                            }
                        }

                        if (initialBase && base !== initialBase && inst !== initialChildComponent) {
                            var baseParent = initialBase.parentNode;
                            if (baseParent && base !== baseParent) {
                                baseParent.replaceChild(base, initialBase);

                                if (!toUnmount) {
                                    initialBase._component = null;
                                    recollectNodeTree(initialBase, false);
                                }
                            }
                        }

                        if (toUnmount) {
                            unmountComponent(toUnmount);
                        }

                        component.base = base;
                        if (base && !isChild) {
                            var componentRef = component,
                                t = component;
                            while (t = t._parentComponent) {
                                (componentRef = t).base = base;
                            }
                            base._component = componentRef;
                            base._componentConstructor = componentRef.constructor;
                        }
                    }

                    if (!isUpdate || mountAll) {
                        mounts.unshift(component);
                    } else if (!skip) {
                        // Ensure that pending componentDidMount() hooks of child components
                        // are called before the componentDidUpdate() hook in the parent.
                        // Note: disabled as it causes duplicate hooks, see https://github.com/developit/preact/issues/750
                        // flushMounts();

                        if (component.componentDidUpdate) {
                            component.componentDidUpdate(previousProps, previousState, previousContext);
                        }
                        if (options.afterUpdate) options.afterUpdate(component);
                    }

                    if (component._renderCallbacks != null) {
                        while (component._renderCallbacks.length) {
                            component._renderCallbacks.pop().call(component);
                        }
                    }

                    if (!diffLevel && !isChild) flushMounts();
                }

                /** Apply the Component referenced by a VNode to the DOM.
                 *	@param {Element} dom	The DOM node to mutate
                 *	@param {VNode} vnode	A Component-referencing VNode
                 *	@returns {Element} dom	The created/mutated element
                 *	@private
                 */
                function buildComponentFromVNode(dom, vnode, context, mountAll) {
                    var c = dom && dom._component,
                        originalComponent = c,
                        oldDom = dom,
                        isDirectOwner = c && dom._componentConstructor === vnode.nodeName,
                        isOwner = isDirectOwner,
                        props = getNodeProps(vnode);
                    while (c && !isOwner && (c = c._parentComponent)) {
                        isOwner = c.constructor === vnode.nodeName;
                    }

                    if (c && isOwner && (!mountAll || c._component)) {
                        setComponentProps(c, props, 3, context, mountAll);
                        dom = c.base;
                    } else {
                        if (originalComponent && !isDirectOwner) {
                            unmountComponent(originalComponent);
                            dom = oldDom = null;
                        }

                        c = createComponent(vnode.nodeName, props, context);
                        if (dom && !c.nextBase) {
                            c.nextBase = dom;
                            // passing dom/oldDom as nextBase will recycle it if unused, so bypass recycling on L229:
                            oldDom = null;
                        }
                        setComponentProps(c, props, 1, context, mountAll);
                        dom = c.base;

                        if (oldDom && dom !== oldDom) {
                            oldDom._component = null;
                            recollectNodeTree(oldDom, false);
                        }
                    }

                    return dom;
                }

                /** Remove a component from the DOM and recycle it.
                 *	@param {Component} component	The Component instance to unmount
                 *	@private
                 */
                function unmountComponent(component) {
                    if (options.beforeUnmount) options.beforeUnmount(component);

                    var base = component.base;

                    component._disable = true;

                    if (component.componentWillUnmount) component.componentWillUnmount();

                    component.base = null;

                    // recursively tear down & recollect high-order component children:
                    var inner = component._component;
                    if (inner) {
                        unmountComponent(inner);
                    } else if (base) {
                        if (base['__preactattr_'] && base['__preactattr_'].ref) base['__preactattr_'].ref(null);

                        component.nextBase = base;

                        removeNode(base);
                        collectComponent(component);

                        removeChildren(base);
                    }

                    if (component.__ref) component.__ref(null);
                }

                /** Base Component class.
                 *	Provides `setState()` and `forceUpdate()`, which trigger rendering.
                 *	@public
                 *
                 *	@example
                 *	class MyFoo extends Component {
                 *		render(props, state) {
                 *			return <div />;
                 *		}
                 *	}
                 */
                function Component(props, context) {
                    this._dirty = true;

                    /** @public
                     *	@type {object}
                     */
                    this.context = context;

                    /** @public
                     *	@type {object}
                     */
                    this.props = props;

                    /** @public
                     *	@type {object}
                     */
                    this.state = this.state || {};
                }

                extend(Component.prototype, {

                    /** Returns a `boolean` indicating if the component should re-render when receiving the given `props` and `state`.
                     *	@param {object} nextProps
                     *	@param {object} nextState
                     *	@param {object} nextContext
                     *	@returns {Boolean} should the component re-render
                     *	@name shouldComponentUpdate
                     *	@function
                     */

                    /** Update component state by copying properties from `state` to `this.state`.
                     *	@param {object} state		A hash of state properties to update with new values
                     *	@param {function} callback	A function to be called once component state is updated
                     */
                    setState: function setState(state, callback) {
                        var s = this.state;
                        if (!this.prevState) this.prevState = extend({}, s);
                        extend(s, typeof state === 'function' ? state(s, this.props) : state);
                        if (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);
                        enqueueRender(this);
                    },


                    /** Immediately perform a synchronous re-render of the component.
                     *	@param {function} callback		A function to be called after component is re-rendered.
                     *	@private
                     */
                    forceUpdate: function forceUpdate(callback) {
                        if (callback) (this._renderCallbacks = this._renderCallbacks || []).push(callback);
                        renderComponent(this, 2);
                    },


                    /** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.
                     *	Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).
                     *	@param {object} props		Props (eg: JSX attributes) received from parent element/component
                     *	@param {object} state		The component's current state
                     *	@param {object} context		Context object (if a parent component has provided context)
                     *	@returns VNode
                     */
                    render: function render() {}
                });

                /** Render JSX into a `parent` Element.
                 *	@param {VNode} vnode		A (JSX) VNode to render
                 *	@param {Element} parent		DOM element to render into
                 *	@param {Element} [merge]	Attempt to re-use an existing DOM tree rooted at `merge`
                 *	@public
                 *
                 *	@example
                 *	// render a div into <body>:
                 *	render(<div id="hello">hello!</div>, document.body);
                 *
                 *	@example
                 *	// render a "Thing" component into #foo:
                 *	const Thing = ({ name }) => <span>{ name }</span>;
                 *	render(<Thing name="one" />, document.querySelector('#foo'));
                 */
                function render(vnode, parent, merge) {
                    return diff(merge, vnode, {}, false, parent, false);
                }

                var preact = {
                    h: h,
                    createElement: h,
                    cloneElement: cloneElement,
                    Component: Component,
                    render: render,
                    rerender: rerender,
                    options: options
                };

                /* harmony default export */ __webpack_exports__["default"] = (preact);

//# sourceMappingURL=preact.esm.js.map


                /***/ }),
            /* 1 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                exports.__esModule=true;var SANDBOX_API_URL=window.PAAZL_CHECKOUT_WIDGET_API_URL;var SANDBOX_RESOURCE_URL=window.PAAZL_CHECKOUT_WIDGET_RESOURCE_URL;var ENV_API_URL="https://api-acc.paazl.com/v1/";var ENV_RESOURCE_URL="https://widget-acc.paazl.com/v1/";var DEV_API_URL="http://localhost:8080/rest-widget/v1";var DEV_RESOURCE_URL="http://localhost:3000";var BASE_URL=exports.BASE_URL=SANDBOX_API_URL||ENV_API_URL||DEV_API_URL;var BASE_WIDGET_CONFIG_URL=exports.BASE_WIDGET_CONFIG_URL="/widget-config";var OPTION_LIST_URL=exports.OPTION_LIST_URL="/shippingoptions";var SERVICE_POINT_LIST_URL=exports.SERVICE_POINT_LIST_URL="/pickuplocations";var SAVE_CHECKOUT_INFO_URL=exports.SAVE_CHECKOUT_INFO_URL="/checkout";var GOOGLE_MAPS_API_KEY_URL=exports.GOOGLE_MAPS_API_KEY_URL=BASE_WIDGET_CONFIG_URL+"/google-maps-api-key";var STORE_LOGO_URL=exports.STORE_LOGO_URL="/store/logo";var CARRIER_LOGO_URL=exports.CARRIER_LOGO_URL="/carrier/logo/";var LOGGING_URL=exports.LOGGING_URL="/logging";var RESOURCE_BASE_URL=exports.RESOURCE_BASE_URL=SANDBOX_RESOURCE_URL||ENV_RESOURCE_URL||DEV_RESOURCE_URL;var STORAGE_CONFIG_KEY=exports.STORAGE_CONFIG_KEY='paazl-previous-config';var STORAGE_TAB_KEY=exports.STORAGE_TAB_KEY='paazl-previous-tab';var STORAGE_DELIVERY_TYPE_KEY=exports.STORAGE_DELIVERY_TYPE_KEY='paazl-previous-delivery-type';var STORAGE_OPTION_KEY=exports.STORAGE_OPTION_KEY='paazl-previous-option';var STORAGE_PREFERRED_DATE_KEY=exports.STORAGE_PREFERRED_DATE_KEY='paazl-previous-preferred-date';var STORAGE_PICKUP_CODE_KEY=exports.STORAGE_PICKUP_CODE_KEY='paazl-previous-pickup-location-code';var GIT_VERSION=exports.GIT_VERSION="21.30";var GIT_COMMIT_HASH=exports.GIT_COMMIT_HASH="8117b7c6d4e6560985dac0003b1dcf99333a7a0b";var GIT_BRANCH=exports.GIT_BRANCH="HEAD";var STYLESHEET_URL=exports.STYLESHEET_URL=RESOURCE_BASE_URL+"/paazl-checkout.min.css?version="+GIT_COMMIT_HASH;var IMAGES_BASE_URL=exports.IMAGES_BASE_URL=RESOURCE_BASE_URL+"/images/";var DECIMAL_COMMA_LOCALE=exports.DECIMAL_COMMA_LOCALE="NL";var DECIMAL_POINT_LOCALE=exports.DECIMAL_POINT_LOCALE="EN";var SEPARATORS_FORMAT=exports.SEPARATORS_FORMAT={DECIMAL_POINT:'DECIMAL_POINT',DECIMAL_COMMA:'DECIMAL_COMMA'};var DELIVERY_FORMATS=exports.DELIVERY_FORMATS={DATE:'DATE',NUMBER:'NUMBER'};var TABS=exports.TABS={DELIVERY:"DELIVERY",PICKUP:"PICKUP",STORE:"STORE"};var TAB_TYPES=exports.TAB_TYPES={TAB:"TAB",BUTTON:"BUTTON"};var DELIVERY_TYPES=exports.DELIVERY_TYPES={ESTIMATED_DATE:"ESTIMATED_DATE",EXACT_DATE:"EXACT_DATE"};var NETWORK=exports.NETWORK={ALL:"ALL",CARRIER:"CARRIER",STORE:"STORE"};var STYLES=exports.STYLES={DEFAULT:"DEFAULT",MINIMAL:"MINIMAL",GREEN:"GREEN",LIGHT_GREEN:"LIGHT_GREEN",BROWN:"BROWN",BLUE:"BLUE",RED:"RED"};var GOOGLE_API_KEY=exports.GOOGLE_API_KEY="AIzaSyCVWGcx8iXWEgjyV_nDMuIKYVsq11ZPXIA"||"AIzaSyD3laAGi3dVttzZu7TOxZt7KNWyubjf1dg";// default is development key;
                var FORMAT_MASKS=exports.FORMAT_MASKS={DEFAULT_DATE:"YYYY-MM-DD",DAY_NAME:"dddd",DAY_MONTH:"DD MMMM",TIME:"HH:mm",DELIVERY_OPTION_DATE_FORMAT:'deliveryOptionDateFormat',DELIVERY_ESTIMATE_DATE_FORMAT:"deliveryEstimateDateFormat",PICKUP_OPTION_DATE_FORMAT:"pickupOptionDateFormat",PICKUP_ESTIMATE_DATE_FORMAT:"pickupEstimateDateFormat"};var TO_LOCAL_DATE_FORMATS=exports.TO_LOCAL_DATE_FORMATS={deliveryOptionDateFormat:{weekday:'short',day:'numeric',month:'short'},deliveryEstimateDateFormat:{weekday:'long',day:'numeric',month:'long'},pickupOptionDateFormat:{weekday:'short',day:'numeric',month:'short'},pickupEstimateDateFormat:{weekday:'long',day:'numeric',month:'long'}};var METER_IN_DEGREE=exports.METER_IN_DEGREE=0.0000089;var TOOLTIP_TOP_MARGIN_IN_PIXEL=exports.TOOLTIP_TOP_MARGIN_IN_PIXEL=50;var MAP_ZOOMS=exports.MAP_ZOOMS=[27693,21282,16355,10064,5540,2909,1485,752,378,190,95,48,24,12,6,3,1.48,0.74,0.37,0.19];var CURRENCY_SYMBOLS=exports.CURRENCY_SYMBOLS={ALL:'Lek',AFN:'؋',ARS:'$',AWG:'ƒ',AUD:'$',AZN:"\u20BC",BSD:'$',BBD:'$',BYN:'Br',BZD:'BZ$',BMD:'$',BOB:'$b',BAM:'KM',BWP:'P',BGN:'лв',BRL:'R$',BND:'$',KHR:'៛',CAD:'$',KYD:'$',CLP:'$',CNY:'¥',COP:'$',CRC:'₡',HRK:'kn',CUP:'₱',CZK:'Kč',DKK:'kr',DOP:'RD$',XCD:'$',EGP:'£',SVC:'$',EUR:'€',FKP:'£',FJD:'$',GHS:'¢',GIP:'£',GTQ:'Q',GGP:'£',GYD:'$',HNL:'L',HKD:'$',HUF:'Ft',ISK:'kr',INR:'₹',IDR:'Rp',IRR:'﷼',IMP:'£',ILS:'₪',JMD:'J$',JPY:'¥',JEP:'£',KZT:'лв',KPW:'₩',KRW:'₩',KGS:'лв',LAK:'₭',LBP:'£',LRD:'$',MKD:'ден',MYR:'RM',MUR:'₨',MXN:'$',MNT:'₮',MZN:'MT',NAD:'$',NPR:'₨',ANG:'ƒ',NZD:'$',NIO:'C$',NGN:'₦',NOK:'kr',OMR:'﷼',PKR:'₨',PAB:'B/.',PYG:'Gs',PEN:'S/.',PHP:'₱',PLN:'zł',QAR:'﷼',RON:'lei',RUB:'₽',SHP:'£',SAR:'﷼',RSD:'Дин.',SCR:'₨',SGD:'$',SBD:'$',SOS:'S',ZAR:'R',LKR:'₨',SEK:'kr',CHF:'CHF',SRD:'$',SYP:'£',TWD:'NT$',THB:'฿',TTD:'TT$',TRY:'₺',TVD:'$',UAH:'₴',GBP:'£',USD:'$',UYU:'$U',UZS:'лв',VEF:'Bs',VND:'₫',YER:'﷼',ZWD:'Z$'};var LOG_LEVEL=exports.LOG_LEVEL={NONE:"NONE",ERROR:"ERROR",DEBUG:"DEBUG",TRACE:"TRACE"};var LOG_EVENT=exports.LOG_EVENT={JAVASCRIPT_ERROR:"JAVASCRIPT_ERROR",ENDPOINT_ERROR:"ENDPOINT_ERROR",LOADING_EVENT:"LOADING_EVENT",ENDPOINT_EVENT:"ENDPOINT_EVENT",WIDGET_API_EVENT:"WIDGET_API_EVENT"};var DEFAULT_CONFIG=exports.DEFAULT_CONFIG={logLevel:LOG_LEVEL.ERROR,loadPaazlBasedData:true,loadCarrierBasedData:false,availableTabs:[TABS.DELIVERY,TABS.PICKUP],defaultTab:TABS.DELIVERY,headerTabType:TAB_TYPES.TAB,shippingOptionsLimit:3,pickupLocationsLimit:20,pickupLocationsPageLimit:10,initialPickupLocations:3,nominatedDateEnabled:false,isPricingEnabled:true,isShowAsExtraCost:false,crossBorderStores:false,language:"eng",deliveryRangeFormat:DELIVERY_FORMATS.DATE,separatorsFormat:"DECIMAL_COMMA",sortingModel:{orderBy:"PRICE",sortOrder:"ASC"}};

                /***/ }),
            /* 2 */
            /***/ (function(module, exports, __webpack_require__) {

                var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  Copyright (c) 2017 Jed Watson.
  Licensed under the MIT License (MIT), see
  http://jedwatson.github.io/classnames
*/
                /* global define */

                (function () {
                    'use strict';

                    var hasOwn = {}.hasOwnProperty;

                    function classNames () {
                        var classes = [];

                        for (var i = 0; i < arguments.length; i++) {
                            var arg = arguments[i];
                            if (!arg) continue;

                            var argType = typeof arg;

                            if (argType === 'string' || argType === 'number') {
                                classes.push(arg);
                            } else if (Array.isArray(arg) && arg.length) {
                                var inner = classNames.apply(null, arg);
                                if (inner) {
                                    classes.push(inner);
                                }
                            } else if (argType === 'object') {
                                for (var key in arg) {
                                    if (hasOwn.call(arg, key) && arg[key]) {
                                        classes.push(key);
                                    }
                                }
                            }
                        }

                        return classes.join(' ');
                    }

                    if (typeof module !== 'undefined' && module.exports) {
                        classNames.default = classNames;
                        module.exports = classNames;
                    } else if (true) {
                        // register as 'classnames', consistent with npm package name
                        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
                            return classNames;
                        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
                        __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
                    } else {
                        window.classNames = classNames;
                    }
                }());


                /***/ }),
            /* 3 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _class,_temp;var _preact=__webpack_require__(0);var _preactI18n=__webpack_require__(82);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TextWrapper=(_temp=_class=function(_Component){_inherits(TextWrapper,_Component);function TextWrapper(props){_classCallCheck(this,TextWrapper);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.shouldComponentUpdate=function(nextProps){return _this.props.id!==nextProps.id||JSON.stringify(_this.props.fields)!==JSON.stringify(nextProps.fields)||_this.props.contentBefore!==nextProps.contentBefore||_this.props.contentAfter!==nextProps.contentAfter;};return _this;}TextWrapper.prototype.render=function render(){var _props=this.props,Tag=_props.Tag,htmlId=_props.htmlId,id=_props.id,fields=_props.fields,notranslate=_props.notranslate,additionalClassName=_props.additionalClassName,spaceBefore=_props.spaceBefore,spaceAfter=_props.spaceAfter,contentBefore=_props.contentBefore,contentAfter=_props.contentAfter,spaceBetweenPrefix=_props.spaceBetweenPrefix,spaceBetweenSuffix=_props.spaceBetweenSuffix,capitalize=_props.capitalize;return h(Tag,{id:htmlId,className:(0,_classnames2.default)(additionalClassName,{notranslate:notranslate,capitalize:capitalize})},spaceBefore&&"\xA0",contentBefore,spaceBetweenPrefix&&"\xA0",!fields?h(_preactI18n.Text,{id:id}):h(_preactI18n.MarkupText,{id:id,fields:fields}),spaceBetweenSuffix&&"\xA0",contentAfter,spaceAfter&&"\xA0");};return TextWrapper;}(_preact.Component),_class.defaultProps={Tag:'span',notranslate:false,additionalClassName:"",spaceBefore:false,spaceAfter:false},_temp);exports.default=TextWrapper;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 4 */
            /***/ (function(module, exports, __webpack_require__) {

                /* WEBPACK VAR INJECTION */(function(global) {var O = 'object';
                    var check = function (it) {
                        return it && it.Math == Math && it;
                    };

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
                    module.exports =
                        // eslint-disable-next-line no-undef
                        check(typeof globalThis == O && globalThis) ||
                        check(typeof window == O && window) ||
                        check(typeof self == O && self) ||
                        check(typeof global == O && global) ||
                        // eslint-disable-next-line no-new-func
                        Function('return this')();

                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(67)))

                /***/ }),
            /* 5 */
            /***/ (function(module, exports, __webpack_require__) {

                var global = __webpack_require__(4);
                var shared = __webpack_require__(34);
                var uid = __webpack_require__(60);
                var NATIVE_SYMBOL = __webpack_require__(123);

                var Symbol = global.Symbol;
                var store = shared('wks');

                module.exports = function (name) {
                    return store[name] || (store[name] = NATIVE_SYMBOL && Symbol[name]
                        || (NATIVE_SYMBOL ? Symbol : uid)('Symbol.' + name));
                };


                /***/ }),
            /* 6 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _class,_temp;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var StringWrapper=(_temp=_class=function(_Component){_inherits(StringWrapper,_Component);function StringWrapper(props){_classCallCheck(this,StringWrapper);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.shouldComponentUpdate=function(nextProps){return _this.props.content!==nextProps.content||_this.props.contentBefore!==nextProps.contentBefore||_this.props.contentAfter!==nextProps.contentAfter;};return _this;}StringWrapper.prototype.render=function render(){var _props=this.props,Tag=_props.Tag,htmlId=_props.htmlId,content=_props.content,notranslate=_props.notranslate,additionalClassName=_props.additionalClassName,spaceBefore=_props.spaceBefore,spaceAfter=_props.spaceAfter,contentBefore=_props.contentBefore,contentAfter=_props.contentAfter,spaceBetweenPrefix=_props.spaceBetweenPrefix,spaceBetweenSuffix=_props.spaceBetweenSuffix,capitalize=_props.capitalize;return h(Tag,{id:htmlId,className:(0,_classnames2.default)(additionalClassName,{notranslate:notranslate,capitalize:capitalize})},spaceBefore&&'\xA0',contentBefore,spaceBetweenPrefix&&'\xA0',content,spaceBetweenSuffix&&'\xA0',contentAfter,spaceAfter&&'\xA0');};return StringWrapper;}(_preact.Component),_class.defaultProps={Tag:'span',notranslate:false,additionalClassName:"",spaceBefore:false,spaceAfter:false},_temp);exports.default=StringWrapper;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 7 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var bind = __webpack_require__(76);
                var isBuffer = __webpack_require__(159);

                /*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

                var toString = Object.prototype.toString;

                /**
                 * Determine if a value is an Array
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is an Array, otherwise false
                 */
                function isArray(val) {
                    return toString.call(val) === '[object Array]';
                }

                /**
                 * Determine if a value is an ArrayBuffer
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is an ArrayBuffer, otherwise false
                 */
                function isArrayBuffer(val) {
                    return toString.call(val) === '[object ArrayBuffer]';
                }

                /**
                 * Determine if a value is a FormData
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is an FormData, otherwise false
                 */
                function isFormData(val) {
                    return (typeof FormData !== 'undefined') && (val instanceof FormData);
                }

                /**
                 * Determine if a value is a view on an ArrayBuffer
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
                 */
                function isArrayBufferView(val) {
                    var result;
                    if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
                        result = ArrayBuffer.isView(val);
                    } else {
                        result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
                    }
                    return result;
                }

                /**
                 * Determine if a value is a String
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is a String, otherwise false
                 */
                function isString(val) {
                    return typeof val === 'string';
                }

                /**
                 * Determine if a value is a Number
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is a Number, otherwise false
                 */
                function isNumber(val) {
                    return typeof val === 'number';
                }

                /**
                 * Determine if a value is undefined
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if the value is undefined, otherwise false
                 */
                function isUndefined(val) {
                    return typeof val === 'undefined';
                }

                /**
                 * Determine if a value is an Object
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is an Object, otherwise false
                 */
                function isObject(val) {
                    return val !== null && typeof val === 'object';
                }

                /**
                 * Determine if a value is a Date
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is a Date, otherwise false
                 */
                function isDate(val) {
                    return toString.call(val) === '[object Date]';
                }

                /**
                 * Determine if a value is a File
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is a File, otherwise false
                 */
                function isFile(val) {
                    return toString.call(val) === '[object File]';
                }

                /**
                 * Determine if a value is a Blob
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is a Blob, otherwise false
                 */
                function isBlob(val) {
                    return toString.call(val) === '[object Blob]';
                }

                /**
                 * Determine if a value is a Function
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is a Function, otherwise false
                 */
                function isFunction(val) {
                    return toString.call(val) === '[object Function]';
                }

                /**
                 * Determine if a value is a Stream
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is a Stream, otherwise false
                 */
                function isStream(val) {
                    return isObject(val) && isFunction(val.pipe);
                }

                /**
                 * Determine if a value is a URLSearchParams object
                 *
                 * @param {Object} val The value to test
                 * @returns {boolean} True if value is a URLSearchParams object, otherwise false
                 */
                function isURLSearchParams(val) {
                    return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
                }

                /**
                 * Trim excess whitespace off the beginning and end of a string
                 *
                 * @param {String} str The String to trim
                 * @returns {String} The String freed of excess whitespace
                 */
                function trim(str) {
                    return str.replace(/^\s*/, '').replace(/\s*$/, '');
                }

                /**
                 * Determine if we're running in a standard browser environment
                 *
                 * This allows axios to run in a web worker, and react-native.
                 * Both environments support XMLHttpRequest, but not fully standard globals.
                 *
                 * web workers:
                 *  typeof window -> undefined
                 *  typeof document -> undefined
                 *
                 * react-native:
                 *  navigator.product -> 'ReactNative'
                 */
                function isStandardBrowserEnv() {
                    if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
                        return false;
                    }
                    return (
                        typeof window !== 'undefined' &&
                        typeof document !== 'undefined'
                    );
                }

                /**
                 * Iterate over an Array or an Object invoking a function for each item.
                 *
                 * If `obj` is an Array callback will be called passing
                 * the value, index, and complete array for each item.
                 *
                 * If 'obj' is an Object callback will be called passing
                 * the value, key, and complete object for each property.
                 *
                 * @param {Object|Array} obj The object to iterate
                 * @param {Function} fn The callback to invoke for each item
                 */
                function forEach(obj, fn) {
                    // Don't bother if no value provided
                    if (obj === null || typeof obj === 'undefined') {
                        return;
                    }

                    // Force an array if not already something iterable
                    if (typeof obj !== 'object') {
                        /*eslint no-param-reassign:0*/
                        obj = [obj];
                    }

                    if (isArray(obj)) {
                        // Iterate over array values
                        for (var i = 0, l = obj.length; i < l; i++) {
                            fn.call(null, obj[i], i, obj);
                        }
                    } else {
                        // Iterate over object keys
                        for (var key in obj) {
                            if (Object.prototype.hasOwnProperty.call(obj, key)) {
                                fn.call(null, obj[key], key, obj);
                            }
                        }
                    }
                }

                /**
                 * Accepts varargs expecting each argument to be an object, then
                 * immutably merges the properties of each object and returns result.
                 *
                 * When multiple objects contain the same key the later object in
                 * the arguments list will take precedence.
                 *
                 * Example:
                 *
                 * ```js
                 * var result = merge({foo: 123}, {foo: 456});
                 * console.log(result.foo); // outputs 456
                 * ```
                 *
                 * @param {Object} obj1 Object to merge
                 * @returns {Object} Result of all merge properties
                 */
                function merge(/* obj1, obj2, obj3, ... */) {
                    var result = {};
                    function assignValue(val, key) {
                        if (typeof result[key] === 'object' && typeof val === 'object') {
                            result[key] = merge(result[key], val);
                        } else {
                            result[key] = val;
                        }
                    }

                    for (var i = 0, l = arguments.length; i < l; i++) {
                        forEach(arguments[i], assignValue);
                    }
                    return result;
                }

                /**
                 * Extends object a by mutably adding to it the properties of object b.
                 *
                 * @param {Object} a The object to be extended
                 * @param {Object} b The object to copy properties from
                 * @param {Object} thisArg The object to bind function to
                 * @return {Object} The resulting value of object a
                 */
                function extend(a, b, thisArg) {
                    forEach(b, function assignValue(val, key) {
                        if (thisArg && typeof val === 'function') {
                            a[key] = bind(val, thisArg);
                        } else {
                            a[key] = val;
                        }
                    });
                    return a;
                }

                module.exports = {
                    isArray: isArray,
                    isArrayBuffer: isArrayBuffer,
                    isBuffer: isBuffer,
                    isFormData: isFormData,
                    isArrayBufferView: isArrayBufferView,
                    isString: isString,
                    isNumber: isNumber,
                    isObject: isObject,
                    isUndefined: isUndefined,
                    isDate: isDate,
                    isFile: isFile,
                    isBlob: isBlob,
                    isFunction: isFunction,
                    isStream: isStream,
                    isURLSearchParams: isURLSearchParams,
                    isStandardBrowserEnv: isStandardBrowserEnv,
                    forEach: forEach,
                    merge: merge,
                    extend: extend,
                    trim: trim
                };


                /***/ }),
            /* 8 */
            /***/ (function(module, exports, __webpack_require__) {

                var isObject = __webpack_require__(16);

                module.exports = function (it) {
                    if (!isObject(it)) {
                        throw TypeError(String(it) + ' is not an object');
                    } return it;
                };


                /***/ }),
            /* 9 */
            /***/ (function(module, exports, __webpack_require__) {

                var DESCRIPTORS = __webpack_require__(19);
                var definePropertyModule = __webpack_require__(24);
                var createPropertyDescriptor = __webpack_require__(33);

                module.exports = DESCRIPTORS ? function (object, key, value) {
                    return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
                } : function (object, key, value) {
                    object[key] = value;
                    return object;
                };


                /***/ }),
            /* 10 */
            /***/ (function(module, exports) {

                var hasOwnProperty = {}.hasOwnProperty;

                module.exports = function (it, key) {
                    return hasOwnProperty.call(it, key);
                };


                /***/ }),
            /* 11 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(__webpack_provided_window_dot_jQuery) {exports.__esModule=true;exports.isStoreOption=exports.findSelectedOptionForPickup=exports.loadStylesheets=exports.isInternetExplorer=exports.checkBrowser=exports.generateId=undefined;var _constants=__webpack_require__(1);var $=__webpack_provided_window_dot_jQuery;var currentSequenceValue=0;var generateId=exports.generateId=function generateId(prefix){currentSequenceValue++;if(!prefix){return currentSequenceValue;}return prefix+'-'+currentSequenceValue;};var checkBrowser=exports.checkBrowser=function checkBrowser(){if('objectFit'in document.documentElement.style===false){$('img.polyfill-object-fit-cover').each(function(){var $this=$(this);var source=void 0,parent=void 0;if('objectFit'in $this[0].style===false){source=$this.attr('src');parent=$this.parent();parent.css('background','url('+source+')');parent.css('background-size','cover');$this.css('display','none');}else{source=$this.attr('src');parent=$this.parent();parent.css('background','url('+source+')');parent.css('background-size','cover');parent.css('background-position','center center');$this.css('display','none');}});$('img.polyfill-object-fit-contain').each(function(){var $this=$(this);if('objectFit'in $this[0].style===false){var source=$this.attr('src');var parent=$this.parent();parent.append("<div class='polyfill-image'></div>");var child=parent.find('.polyfill-image');child.css({width:'100%',height:'100%'});child.css('background','url('+source+')');child.css('background-size','contain');child.css('background-repeat','no-repeat');$this.css('display','none');}});}};var isInternetExplorer=exports.isInternetExplorer=function isInternetExplorer(){var ua=window.navigator.userAgent;var msie=ua.indexOf("MSIE ");return msie>0||!!navigator.userAgent.match(/Trident.*rv:11\./);};var loadStylesheets=exports.loadStylesheets=function loadStylesheets(){var styles=document.createElement('link');styles.rel='stylesheet';styles.type='text/css';styles.media='screen';styles.href=_constants.STYLESHEET_URL;document.getElementsByTagName('head')[0].appendChild(styles);};var findSelectedOptionForPickup=exports.findSelectedOptionForPickup=function findSelectedOptionForPickup(pickupLocation){return pickupLocation&&pickupLocation.shippingOptions&&pickupLocation.shippingOptions.length>0&&pickupLocation.shippingOptions.find(function(o){return o.identifier===pickupLocation.shippingOptionIdentifier;});};var isStoreOption=exports.isStoreOption=function isStoreOption(pickupLocation){var shippingOption=findSelectedOptionForPickup(pickupLocation);return shippingOption&&shippingOption.network===_constants.NETWORK.STORE;};
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(75)))

                /***/ }),
            /* 12 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                exports.__esModule=true;exports.sendLogReport=exports.doPost=exports.doGet=exports.init=undefined;var _axios=__webpack_require__(157);var _axios2=_interopRequireDefault(_axios);var _constants=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}var instance=void 0;var init=exports.init=function init(){if(instance===undefined){instance=_axios2.default.create({baseURL:_constants.BASE_URL,timeout:100000});}return instance;};var doGet=exports.doGet=function doGet(url,config){init();var apiKey=config.apiKey;instance.defaults.headers.common['Authorization']='Bearer '+apiKey;return instance.get(url);};var doPost=function doPost(url,config){init();var apiKey=config.apiKey,postBody=_objectWithoutProperties(config,['apiKey']);instance.defaults.headers.common['Authorization']='Bearer '+apiKey;return instance.post(url,postBody);};exports.doPost=doPost;var sendLogReport=function sendLogReport(_ref){var logLevel=_ref.logLevel,logEvent=_ref.logEvent,message=_ref.message,requestBody=_ref.requestBody,config=_ref.config;init();var apiKey=config.apiKey,apiSecret=config.apiSecret,loggableConfig=_objectWithoutProperties(config,['apiKey','apiSecret']);var loggableRequestBody=void 0;if(requestBody){var _apiKey=requestBody.apiKey,_apiSecret=requestBody.apiSecret,allowedToLogBody=_objectWithoutProperties(requestBody,['apiKey','apiSecret']);loggableRequestBody=allowedToLogBody;}instance.defaults.headers.common['Authorization']='Bearer '+apiKey;return instance.post(_constants.LOGGING_URL+'/'+logLevel.toLowerCase(),{logEvent:logEvent,message:message,requestBody:loggableRequestBody,config:loggableConfig});};exports.sendLogReport=sendLogReport;

                /***/ }),
            /* 13 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                exports.__esModule=true;exports.getDayOfWeek=exports.convertDateString=exports.getDayName=exports.formatMinMaxDays=exports.format=exports.parse=exports.internationalizeDates=exports.setUpDateFormats=exports.TO_DATE_CONTEXT=exports.FROM_DATE_CONTEXT=exports.EXACT_DATE_CONTEXT=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _fecha=__webpack_require__(193);var _fecha2=_interopRequireDefault(_fecha);var _constants=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var i18n=void 0;var language="eng";var EXACT_DATE_CONTEXT=exports.EXACT_DATE_CONTEXT="EXACT_DATE_CONTEXT";var FROM_DATE_CONTEXT=exports.FROM_DATE_CONTEXT="FROM_DATE_CONTEXT";var TO_DATE_CONTEXT=exports.TO_DATE_CONTEXT="TO_DATE_CONTEXT";var setUpDateFormats=exports.setUpDateFormats=function setUpDateFormats(config){var maskConfig={deliveryOptionDateFormat:config.deliveryOptionDateFormat,deliveryEstimateDateFormat:config.deliveryEstimateDateFormat,pickupOptionDateFormat:config.pickupOptionDateFormat,pickupEstimateDateFormat:config.pickupEstimateDateFormat};language=config.language||"eng";Object.keys(maskConfig).forEach(function(key){return maskConfig[key]===undefined?delete maskConfig[key]:'';});_fecha2.default.masks=maskConfig;};var internationalizeDates=exports.internationalizeDates=function internationalizeDates(translations){var defaultI18n={dayNamesShort:['Sun','Mon','Tue','Wed','Thur','Fri','Sat'],dayNames:['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'],monthNamesShort:['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],monthNames:['January','February','March','April','May','June','July','August','September','October','November','December'],amPm:['am','pm'],// D is the day of the month, function returns something like...  3rd or 11th
                    DoFn:function DoFn(D){return D+['th','st','nd','rd'][D%10>3?0:(D-D%10!==10)*D%10];}};i18n=translations.common.calendar;_fecha2.default.i18n=_extends({},defaultI18n,translations.common.calendar);};var parse=exports.parse=function parse(dateString){var format=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_constants.FORMAT_MASKS.DEFAULT_DATE;return _fecha2.default.parse(dateString,format);};var format=exports.format=function format(date,_format,useFormat){if(_fecha2.default.masks[_format]||useFormat){return _fecha2.default.format(date,_format);}return date.toLocaleDateString(language,_constants.TO_LOCAL_DATE_FORMATS[_format]);};var formatMinMaxDays=exports.formatMinMaxDays=function formatMinMaxDays(_ref){var min=_ref.min,max=_ref.max;return min+' - '+max+' '+i18n.days;};var getDayName=exports.getDayName=function getDayName(date){var today=new Date();if(date.toDateString()===today.toDateString()){return i18n.today;}var tomorrow=new Date(today.getFullYear(),today.getMonth(),today.getDate()+1);if(date.toDateString()===tomorrow.toDateString()){return i18n.tomorrow;}return _fecha2.default.format(date,_constants.FORMAT_MASKS.DAY_NAME);};var convertDateString=exports.convertDateString=function convertDateString(dateString,fromFormat,toFormat,context,alwaysFullDate){var date=parse(dateString,fromFormat);if(!alwaysFullDate){var today=new Date();if(date.toDateString()===today.toDateString()){return i18n.today;}var tomorrow=new Date(today.getFullYear(),today.getMonth(),today.getDate()+1);if(date.toDateString()===tomorrow.toDateString()){return i18n.tomorrow;}}var formatted=format(date,toFormat);if(context){return applyContext(formatted,context);}return formatted;};var getDayOfWeek=exports.getDayOfWeek=function getDayOfWeek(dayNumber){if(i18n){return i18n.dayNames[dayNumber];}};var applyContext=function applyContext(dateString,context){if(!i18n){return dateString;}var dayIndex=-1;i18n.dayNames.forEach(function(e,i){if(dateString.indexOf(e)!==-1){dayIndex=i;}});if(context===EXACT_DATE_CONTEXT&&dayIndex!==-1&&i18n.dayNamesExactDayContext){return dateString.replace(i18n.dayNames[dayIndex],i18n.dayNamesExactDayContext[dayIndex]);}if(context===FROM_DATE_CONTEXT&&dayIndex!==-1&&i18n.dayNamesFromDayContext){return dateString.replace(i18n.dayNames[dayIndex],i18n.dayNamesFromDayContext[dayIndex]);}if(context===TO_DATE_CONTEXT&&dayIndex!==-1&&i18n.dayNamesToDayContext){return dateString.replace(i18n.dayNames[dayIndex],i18n.dayNamesToDayContext[dayIndex]);}return dateString;};

                /***/ }),
            /* 14 */
            /***/ (function(module, exports, __webpack_require__) {

                var global = __webpack_require__(4);
                var getOwnPropertyDescriptor = __webpack_require__(40).f;
                var hide = __webpack_require__(9);
                var redefine = __webpack_require__(21);
                var setGlobal = __webpack_require__(48);
                var copyConstructorProperties = __webpack_require__(124);
                var isForced = __webpack_require__(62);

                /*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/
                module.exports = function (options, source) {
                    var TARGET = options.target;
                    var GLOBAL = options.global;
                    var STATIC = options.stat;
                    var FORCED, target, key, targetProperty, sourceProperty, descriptor;
                    if (GLOBAL) {
                        target = global;
                    } else if (STATIC) {
                        target = global[TARGET] || setGlobal(TARGET, {});
                    } else {
                        target = (global[TARGET] || {}).prototype;
                    }
                    if (target) for (key in source) {
                        sourceProperty = source[key];
                        if (options.noTargetGet) {
                            descriptor = getOwnPropertyDescriptor(target, key);
                            targetProperty = descriptor && descriptor.value;
                        } else targetProperty = target[key];
                        FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
                        // contained in target
                        if (!FORCED && targetProperty !== undefined) {
                            if (typeof sourceProperty === typeof targetProperty) continue;
                            copyConstructorProperties(sourceProperty, targetProperty);
                        }
                        // add a flag to not completely full polyfills
                        if (options.sham || (targetProperty && targetProperty.sham)) {
                            hide(sourceProperty, 'sham', true);
                        }
                        // extend global
                        redefine(target, key, sourceProperty, options);
                    }
                };


                /***/ }),
            /* 15 */
            /***/ (function(module, exports) {

                module.exports = function (exec) {
                    try {
                        return !!exec();
                    } catch (error) {
                        return true;
                    }
                };


                /***/ }),
            /* 16 */
            /***/ (function(module, exports) {

                module.exports = function (it) {
                    return typeof it === 'object' ? it !== null : typeof it === 'function';
                };


                /***/ }),
            /* 17 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.findMinPrice=exports.getFreeCostWrapper=exports.getExtraCostSign=exports.getCurrencySymbol=exports.getPickupLocationShippingRate=exports.formatRate=exports.formatPrice=undefined;var _constants=__webpack_require__(1);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _AppUtils=__webpack_require__(11);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var formatPrice=exports.formatPrice=function formatPrice(){var rate=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:_constants.DEFAULT_CONFIG;var additionalClassName=arguments[2];var numeric=arguments[3];var currency=config.currency,isPricingEnabled=config.isPricingEnabled,isShowAsExtraCost=config.isShowAsExtraCost;var currencySymbol=getCurrencySymbol(currency);var extraCostSign=getExtraCostSign(isShowAsExtraCost);var freeCostWrapper=getFreeCostWrapper({config:config,isShowAsExtraCost:isShowAsExtraCost,extraCostSign:extraCostSign,currencySymbol:currencySymbol,additionalClassName:additionalClassName,numeric:numeric});if(!isPricingEnabled){return"";}return!rate?freeCostWrapper:h(_StringWrapper2.default,{content:extraCostSign+currencySymbol+" "+formatRate(rate,config),additionalClassName:additionalClassName,notranslate:true});};var formatRate=exports.formatRate=function formatRate(rate,config){if(!config.separatorsFormat){if(config.language){return rate.toLocaleString(config.language,{minimumFractionDigits:2,maximumFractionDigits:2});}return rate.toLocaleString(_constants.DECIMAL_COMMA_LOCALE,{minimumFractionDigits:2,maximumFractionDigits:2});}if(config.separatorsFormat===_constants.SEPARATORS_FORMAT.DECIMAL_COMMA){return rate.toLocaleString(_constants.DECIMAL_COMMA_LOCALE,{minimumFractionDigits:2,maximumFractionDigits:2});}if(config.separatorsFormat===_constants.SEPARATORS_FORMAT.DECIMAL_POINT){return rate.toLocaleString(_constants.DECIMAL_POINT_LOCALE,{minimumFractionDigits:2,maximumFractionDigits:2});}};var getPickupLocationShippingRate=exports.getPickupLocationShippingRate=function getPickupLocationShippingRate(pickupLocation){var selectedOption=(0,_AppUtils.findSelectedOptionForPickup)(pickupLocation);return selectedOption&&selectedOption.rate||0;};var getCurrencySymbol=exports.getCurrencySymbol=function getCurrencySymbol(currencyCode){currencyCode=currencyCode?currencyCode.toUpperCase():"EUR";var symbol=_constants.CURRENCY_SYMBOLS[currencyCode];return symbol?symbol:_constants.CURRENCY_SYMBOLS["EUR"];};var getExtraCostSign=exports.getExtraCostSign=function getExtraCostSign(isShowAsExtraCost){return isShowAsExtraCost?"+ ":"";};var getFreeCostWrapper=exports.getFreeCostWrapper=function getFreeCostWrapper(_ref){var config=_ref.config,isShowAsExtraCost=_ref.isShowAsExtraCost,extraCostSign=_ref.extraCostSign,currencySymbol=_ref.currencySymbol,additionalClassName=_ref.additionalClassName,numeric=_ref.numeric;if(numeric){var numericFreeCost=config.separatorsFormat===_constants.SEPARATORS_FORMAT.DECIMAL_POINT?"0.-":"0,-";return h(_StringWrapper2.default,{content:numericFreeCost,additionalClassName:additionalClassName,notranslate:true});}return isShowAsExtraCost?h(_TextWrapper2.default,{id:"common.zeroExtra",fields:{currencySymbol:extraCostSign+currencySymbol},additionalClassName:additionalClassName}):h(_TextWrapper2.default,{id:"common.free",additionalClassName:additionalClassName,capitalize:true});};var findMinPrice=exports.findMinPrice=function findMinPrice(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var initialRate=options[0]&&options[0].rate||0;return options.reduce(function(min,o){return o.rate<min?o.rate:min;},initialRate);};
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 18 */
            /***/ (function(module, exports) {

                module.exports = function (it) {
                    if (typeof it != 'function') {
                        throw TypeError(String(it) + ' is not a function');
                    } return it;
                };


                /***/ }),
            /* 19 */
            /***/ (function(module, exports, __webpack_require__) {

                var fails = __webpack_require__(15);

// Thank's IE8 for his funny defineProperty
                module.exports = !fails(function () {
                    return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
                });


                /***/ }),
            /* 20 */
            /***/ (function(module, exports, __webpack_require__) {

                var path = __webpack_require__(45);
                var global = __webpack_require__(4);

                var aFunction = function (variable) {
                    return typeof variable == 'function' ? variable : undefined;
                };

                module.exports = function (namespace, method) {
                    return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace])
                        : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
                };


                /***/ }),
            /* 21 */
            /***/ (function(module, exports, __webpack_require__) {

                var global = __webpack_require__(4);
                var shared = __webpack_require__(34);
                var hide = __webpack_require__(9);
                var has = __webpack_require__(10);
                var setGlobal = __webpack_require__(48);
                var nativeFunctionToString = __webpack_require__(69);
                var InternalStateModule = __webpack_require__(31);

                var getInternalState = InternalStateModule.get;
                var enforceInternalState = InternalStateModule.enforce;
                var TEMPLATE = String(nativeFunctionToString).split('toString');

                shared('inspectSource', function (it) {
                    return nativeFunctionToString.call(it);
                });

                (module.exports = function (O, key, value, options) {
                    var unsafe = options ? !!options.unsafe : false;
                    var simple = options ? !!options.enumerable : false;
                    var noTargetGet = options ? !!options.noTargetGet : false;
                    if (typeof value == 'function') {
                        if (typeof key == 'string' && !has(value, 'name')) hide(value, 'name', key);
                        enforceInternalState(value).source = TEMPLATE.join(typeof key == 'string' ? key : '');
                    }
                    if (O === global) {
                        if (simple) O[key] = value;
                        else setGlobal(key, value);
                        return;
                    } else if (!unsafe) {
                        delete O[key];
                    } else if (!noTargetGet && O[key]) {
                        simple = true;
                    }
                    if (simple) O[key] = value;
                    else hide(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
                })(Function.prototype, 'toString', function toString() {
                    return typeof this == 'function' && getInternalState(this).source || nativeFunctionToString.call(this);
                });


                /***/ }),
            /* 22 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.resolveDateEstimationComponent=exports.findMinDate=exports.TYPE=undefined;var _DateTimeUtils=__webpack_require__(13);var _constants=__webpack_require__(1);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var TYPE=exports.TYPE={DELIVERY_LONG:"DELIVERY_LONG",PICKUP_SHORT:"PICKUP_SHORT",PICKUP_LONG:"PICKUP_LONG"};var findMinDate=exports.findMinDate=function findMinDate(shippingOptions,deliveryRangeFormat){var dates=shippingOptions&&shippingOptions.map(function(o){return getKnownDate(null,o);}).filter(function(d){return d;}).map(function(e){return(0,_DateTimeUtils.parse)(e);}).sort(function(a,b){return a-b;});if(dates&&dates.length){return(0,_DateTimeUtils.getDayName)(dates[0]);}var approximateDates=shippingOptions&&shippingOptions.map(getApproximateDates).filter(function(d){return d;});if(deliveryRangeFormat===_constants.DELIVERY_FORMATS.DATE){var earliestDates=approximateDates&&approximateDates.map(function(e){return e.earliestDate;}).filter(function(d){return d;}).map(function(e){return(0,_DateTimeUtils.parse)(e);}).sort(function(a,b){return a-b;});if(earliestDates&&earliestDates.length){return(0,_DateTimeUtils.getDayName)(earliestDates[0]);}}var approximateDays=approximateDates&&approximateDates.filter(function(e){return e.min&&e.max;}).sort(function(a,b){return a.min-b.min;});if(approximateDays&&approximateDays.length){return(0,_DateTimeUtils.formatMinMaxDays)(approximateDates[0]);}};var resolveDateEstimationComponent=exports.resolveDateEstimationComponent=function resolveDateEstimationComponent(type,shippingOption,deliveryRangeFormat){var day=getKnownDate(type,shippingOption);var startTime=getTimeFrom(shippingOption);var endTime=getTimeTo(shippingOption);if(day&&!startTime&&!endTime){return getExactDateLabel(type,day);}else if(day){if(type===TYPE.DELIVERY_LONG){return resolveExactDateWithTimeframe(type,day,startTime,endTime);}return resolveExactDateWithTimeframeForPickups(type,day,endTime);}var approximateDates=getApproximateDates(shippingOption);if(approximateDates){return resolveApproximateDateTime(type,deliveryRangeFormat,approximateDates,startTime,endTime);}};var resolveExactDateWithTimeframeForPickups=function resolveExactDateWithTimeframeForPickups(type,day,endTime){return getExactDateLabelAfterTime(type,day,endTime);};var resolveExactDateWithTimeframe=function resolveExactDateWithTimeframe(type,day,startTime,endTime){if(startTime&&!endTime){return getExactDateLabelAfterTime(type,day,startTime);}else if(!startTime&&endTime){return getExactDateLabelBeforeTime(type,day,endTime);}return getExactDateLabelBetweenTime(type,day,startTime,endTime);};var resolveApproximateDateTime=function resolveApproximateDateTime(type,deliveryRangeFormat,approximateDates,startTime,endTime){if(deliveryRangeFormat===_constants.DELIVERY_FORMATS.NUMBER||!approximateDates.earliestDate||!approximateDates.latestDate){return resolveApproximateDays(type,approximateDates,startTime,endTime);}return resolveApproximateDates(type,approximateDates,startTime,endTime);};var resolveApproximateDays=function resolveApproximateDays(type,approximateDates,startTime,endTime){var min=approximateDates.min,max=approximateDates.max;if(!startTime&&endTime){return getDaysRangeLabelBeforeTime(type,min,max,endTime);}else if(startTime&&!endTime){return getDaysRangeLabelAfterTime(type,min,max,startTime);}else if(startTime&&endTime){return getDaysRangeLabelBetweenTime(type,min,max,startTime,endTime);}return getDaysRangeLabel(type,min,max);};var resolveApproximateDates=function resolveApproximateDates(type,approximateDates,startTime,endTime){var earliestDate=approximateDates.earliestDate,latestDate=approximateDates.latestDate;if(!startTime&&endTime){return getApproximateDatesLabelBeforeTime(type,earliestDate,latestDate,endTime);}else if(startTime&&!endTime){return getApproximateDatesLabelAfterTime(type,earliestDate,latestDate,startTime);}else if(startTime&&endTime){return getApproximateDatesLabelBetweenTime(type,earliestDate,latestDate,startTime,endTime);}return getApproximateDatesLabel(type,earliestDate,latestDate);};// ------------------- Date resolvers -------------------
                    var getKnownDate=function getKnownDate(type,shippingOption){var isDelivery=type===TYPE.DELIVERY_LONG;if(isDelivery&&shippingOption&&shippingOption.exactDay){return(0,_DateTimeUtils.format)(shippingOption.exactDay,_constants.FORMAT_MASKS.DEFAULT_DATE,true);}if(shippingOption&&shippingOption.deliveryDates&&shippingOption.deliveryDates.length>0){return shippingOption.deliveryDates[0].deliveryDate;}};var getApproximateDates=function getApproximateDates(shippingOption){return shippingOption&&shippingOption.estimatedDeliveryRange;};var getTimeFrom=function getTimeFrom(shippingOption){var timeRangeStart=shippingOption&&shippingOption.deliveryDates&&shippingOption.deliveryDates.length&&shippingOption.deliveryDates[0].timeRange&&shippingOption.deliveryDates[0].timeRange.start;var deliveryWindowStart=shippingOption&&shippingOption.deliveryWindow&&shippingOption.deliveryWindow.start;if(timeRangeStart){return timeRangeStart;}else if(deliveryWindowStart){return deliveryWindowStart;}};var getTimeTo=function getTimeTo(shippingOption){var timeRangeEnd=shippingOption&&shippingOption.deliveryDates&&shippingOption.deliveryDates.length&&shippingOption.deliveryDates[0].timeRange&&shippingOption.deliveryDates[0].timeRange.end;var deliveryWindowEnd=shippingOption&&shippingOption.deliveryWindow&&shippingOption.deliveryWindow.end;if(timeRangeEnd){return timeRangeEnd;}else if(deliveryWindowEnd){return deliveryWindowEnd;}};// ------------------- Known dates labels -------------------
                    var getExactDateLabel=function getExactDateLabel(type,date){var day=void 0;if(type===TYPE.DELIVERY_LONG){day=date&&(0,_DateTimeUtils.convertDateString)(date,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.DELIVERY_ESTIMATE_DATE_FORMAT,_DateTimeUtils.EXACT_DATE_CONTEXT);}if(type===TYPE.PICKUP_SHORT){day=date&&(0,_DateTimeUtils.convertDateString)(date,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_OPTION_DATE_FORMAT,_DateTimeUtils.EXACT_DATE_CONTEXT);}if(type===TYPE.PICKUP_LONG){day=date&&(0,_DateTimeUtils.convertDateString)(date,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_ESTIMATE_DATE_FORMAT,_DateTimeUtils.EXACT_DATE_CONTEXT);}return h(_TextWrapper2.default,{id:"common.estimates.onDate",fields:{day:day}});};var getExactDateLabelBeforeTime=function getExactDateLabelBeforeTime(type,date,endTime){var day=void 0;if(type===TYPE.DELIVERY_LONG){day=date&&(0,_DateTimeUtils.convertDateString)(date,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.DELIVERY_ESTIMATE_DATE_FORMAT,_DateTimeUtils.EXACT_DATE_CONTEXT);}return h(_TextWrapper2.default,{id:"common.estimates.onDateBeforeTime",fields:{day:day,endTime:endTime}});};var getExactDateLabelAfterTime=function getExactDateLabelAfterTime(type,date,startTime){var day=void 0;if(type===TYPE.PICKUP_SHORT){day=date&&(0,_DateTimeUtils.convertDateString)(date,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_OPTION_DATE_FORMAT,_DateTimeUtils.EXACT_DATE_CONTEXT);}if(type===TYPE.PICKUP_LONG){day=date&&(0,_DateTimeUtils.convertDateString)(date,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_ESTIMATE_DATE_FORMAT,_DateTimeUtils.EXACT_DATE_CONTEXT);}return h(_TextWrapper2.default,{id:"common.estimates.onDateAfterTime",fields:{day:day,startTime:startTime}});};var getExactDateLabelBetweenTime=function getExactDateLabelBetweenTime(type,date,startTime,endTime){var day=void 0;day=date&&(0,_DateTimeUtils.convertDateString)(date,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.DELIVERY_ESTIMATE_DATE_FORMAT,_DateTimeUtils.EXACT_DATE_CONTEXT);return h(_TextWrapper2.default,{id:"common.estimates.onDateBetweenTime",fields:{day:day,startTime:startTime,endTime:endTime}});};// ------------------- Min/max range labels -------------------
                    var getDaysRangeLabel=function getDaysRangeLabel(type,min,max){return h(_TextWrapper2.default,{id:"common.estimates.withinBusinessDays",fields:{min:min,max:max}});};var getDaysRangeLabelBeforeTime=function getDaysRangeLabelBeforeTime(type,min,max,endTime){return h(_TextWrapper2.default,{id:"common.estimates.withinBusinessDaysBeforeTime",fields:{min:min,max:max,endTime:endTime}});};var getDaysRangeLabelAfterTime=function getDaysRangeLabelAfterTime(type,min,max,startTime){return h(_TextWrapper2.default,{id:"common.estimates.withinBusinessDaysAfterTime",fields:{min:min,max:max,startTime:startTime}});};var getDaysRangeLabelBetweenTime=function getDaysRangeLabelBetweenTime(type,min,max,startTime,endTime){return h(_TextWrapper2.default,{id:"common.estimates.withinBusinessDaysBetweenTime",fields:{min:min,max:max,startTime:startTime,endTime:endTime}});};// ------------------- Approximate date range labels -------------------
                    var getApproximateDatesLabel=function getApproximateDatesLabel(type,earliest,latest){var earliestDate=void 0;var latestDate=void 0;if(type===TYPE.DELIVERY_LONG){earliestDate=earliest&&(0,_DateTimeUtils.convertDateString)(earliest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.DELIVERY_ESTIMATE_DATE_FORMAT,_DateTimeUtils.FROM_DATE_CONTEXT);latestDate=latest&&(0,_DateTimeUtils.convertDateString)(latest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.DELIVERY_ESTIMATE_DATE_FORMAT,_DateTimeUtils.TO_DATE_CONTEXT);}if(type===TYPE.PICKUP_SHORT){earliestDate=earliest&&(0,_DateTimeUtils.convertDateString)(earliest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_OPTION_DATE_FORMAT,_DateTimeUtils.FROM_DATE_CONTEXT);latestDate=latest&&(0,_DateTimeUtils.convertDateString)(latest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_OPTION_DATE_FORMAT,_DateTimeUtils.TO_DATE_CONTEXT);}if(type===TYPE.PICKUP_LONG){earliestDate=earliest&&(0,_DateTimeUtils.convertDateString)(earliest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_ESTIMATE_DATE_FORMAT,_DateTimeUtils.FROM_DATE_CONTEXT);latestDate=latest&&(0,_DateTimeUtils.convertDateString)(latest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_ESTIMATE_DATE_FORMAT,_DateTimeUtils.TO_DATE_CONTEXT);}return h(_TextWrapper2.default,{id:"common.estimates.betweenDates",fields:{earliestDate:earliestDate,latestDate:latestDate}});};var getApproximateDatesLabelBeforeTime=function getApproximateDatesLabelBeforeTime(type,earliest,latest,endTime){var earliestDate=void 0;var latestDate=void 0;if(type===TYPE.DELIVERY_LONG){earliestDate=earliest&&(0,_DateTimeUtils.convertDateString)(earliest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.DELIVERY_ESTIMATE_DATE_FORMAT,_DateTimeUtils.FROM_DATE_CONTEXT);latestDate=latest&&(0,_DateTimeUtils.convertDateString)(latest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.DELIVERY_ESTIMATE_DATE_FORMAT,_DateTimeUtils.TO_DATE_CONTEXT);}return h(_TextWrapper2.default,{id:"common.estimates.betweenDateBeforeTime",fields:{earliestDate:earliestDate,latestDate:latestDate,endTime:endTime}});};var getApproximateDatesLabelAfterTime=function getApproximateDatesLabelAfterTime(type,earliest,latest,startTime){var earliestDate=void 0;var latestDate=void 0;if(type===TYPE.PICKUP_SHORT){earliestDate=earliest&&(0,_DateTimeUtils.convertDateString)(earliest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_OPTION_DATE_FORMAT,_DateTimeUtils.FROM_DATE_CONTEXT);latestDate=latest&&(0,_DateTimeUtils.convertDateString)(latest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_OPTION_DATE_FORMAT,_DateTimeUtils.TO_DATE_CONTEXT);}if(type===TYPE.PICKUP_LONG){earliestDate=earliest&&(0,_DateTimeUtils.convertDateString)(earliest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_ESTIMATE_DATE_FORMAT,_DateTimeUtils.FROM_DATE_CONTEXT);latestDate=latest&&(0,_DateTimeUtils.convertDateString)(latest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_ESTIMATE_DATE_FORMAT,_DateTimeUtils.TO_DATE_CONTEXT);}return h(_TextWrapper2.default,{id:"common.estimates.betweenDatesAfterTime",fields:{earliestDate:earliestDate,latestDate:latestDate,startTime:startTime}});};var getApproximateDatesLabelBetweenTime=function getApproximateDatesLabelBetweenTime(type,earliest,latest,startTime,endTime){var earliestDate=void 0;var latestDate=void 0;if(type===TYPE.DELIVERY_LONG){earliestDate=earliest&&(0,_DateTimeUtils.convertDateString)(earliest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.DELIVERY_ESTIMATE_DATE_FORMAT,_DateTimeUtils.FROM_DATE_CONTEXT);latestDate=latest&&(0,_DateTimeUtils.convertDateString)(latest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.DELIVERY_ESTIMATE_DATE_FORMAT,_DateTimeUtils.TO_DATE_CONTEXT);}if(type===TYPE.PICKUP_SHORT){earliestDate=earliest&&(0,_DateTimeUtils.convertDateString)(earliest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_OPTION_DATE_FORMAT,_DateTimeUtils.FROM_DATE_CONTEXT);latestDate=latest&&(0,_DateTimeUtils.convertDateString)(latest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_OPTION_DATE_FORMAT,_DateTimeUtils.TO_DATE_CONTEXT);}if(type===TYPE.PICKUP_LONG){earliestDate=earliest&&(0,_DateTimeUtils.convertDateString)(earliest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_ESTIMATE_DATE_FORMAT,_DateTimeUtils.FROM_DATE_CONTEXT);latestDate=latest&&(0,_DateTimeUtils.convertDateString)(latest,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.PICKUP_ESTIMATE_DATE_FORMAT,_DateTimeUtils.TO_DATE_CONTEXT);}return h(_TextWrapper2.default,{id:"common.estimates.betweenDatesBetweenTime",fields:{earliestDate:earliestDate,latestDate:latestDate,startTime:startTime,endTime:endTime}});};
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 23 */
            /***/ (function(module, exports) {

                module.exports = false;


                /***/ }),
            /* 24 */
            /***/ (function(module, exports, __webpack_require__) {

                var DESCRIPTORS = __webpack_require__(19);
                var IE8_DOM_DEFINE = __webpack_require__(68);
                var anObject = __webpack_require__(8);
                var toPrimitive = __webpack_require__(58);

                var nativeDefineProperty = Object.defineProperty;

// `Object.defineProperty` method
// https://tc39.github.io/ecma262/#sec-object.defineproperty
                exports.f = DESCRIPTORS ? nativeDefineProperty : function defineProperty(O, P, Attributes) {
                    anObject(O);
                    P = toPrimitive(P, true);
                    anObject(Attributes);
                    if (IE8_DOM_DEFINE) try {
                        return nativeDefineProperty(O, P, Attributes);
                    } catch (error) { /* empty */ }
                    if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
                    if ('value' in Attributes) O[P] = Attributes.value;
                    return O;
                };


                /***/ }),
            /* 25 */
            /***/ (function(module, exports) {

                var toString = {}.toString;

                module.exports = function (it) {
                    return toString.call(it).slice(8, -1);
                };


                /***/ }),
            /* 26 */
            /***/ (function(module, exports) {

                module.exports = {};


                /***/ }),
            /* 27 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var aFunction = __webpack_require__(18);

                var PromiseCapability = function (C) {
                    var resolve, reject;
                    this.promise = new C(function ($$resolve, $$reject) {
                        if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
                        resolve = $$resolve;
                        reject = $$reject;
                    });
                    this.resolve = aFunction(resolve);
                    this.reject = aFunction(reject);
                };

// 25.4.1.5 NewPromiseCapability(C)
                module.exports.f = function (C) {
                    return new PromiseCapability(C);
                };


                /***/ }),
            /* 28 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                exports.__esModule=true;exports.getCurrentTranslation=exports.resolveLocale=exports.I18nResolver=undefined;var _localeMapping=__webpack_require__(146);var _localeMapping2=_interopRequireDefault(_localeMapping);var _eng=__webpack_require__(147);var _eng2=_interopRequireDefault(_eng);var _nld=__webpack_require__(148);var _nld2=_interopRequireDefault(_nld);var _ger=__webpack_require__(149);var _ger2=_interopRequireDefault(_ger);var _pol=__webpack_require__(150);var _pol2=_interopRequireDefault(_pol);var _rus=__webpack_require__(151);var _rus2=_interopRequireDefault(_rus);var _chi=__webpack_require__(152);var _chi2=_interopRequireDefault(_chi);var _fre=__webpack_require__(153);var _fre2=_interopRequireDefault(_fre);var _ita=__webpack_require__(154);var _ita2=_interopRequireDefault(_ita);var _jpn=__webpack_require__(155);var _jpn2=_interopRequireDefault(_jpn);var _spa=__webpack_require__(156);var _spa2=_interopRequireDefault(_spa);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var currentLanguage=JSON.parse(JSON.stringify(_eng2.default));var I18nResolver=exports.I18nResolver=function I18nResolver(lang,backendTranslations){switch(lang){case'eng':case'en':currentLanguage=JSON.parse(JSON.stringify(_eng2.default));break;case'nld':case'dut':case'nl':currentLanguage=JSON.parse(JSON.stringify(_nld2.default));break;case'ger':case'deu':case'de':currentLanguage=JSON.parse(JSON.stringify(_ger2.default));break;case'pol':case'pl':currentLanguage=JSON.parse(JSON.stringify(_pol2.default));break;case'rus':case'ru':currentLanguage=JSON.parse(JSON.stringify(_rus2.default));break;case'chi':case'zho':case'zh':currentLanguage=JSON.parse(JSON.stringify(_chi2.default));break;case'fre':case'fra':case'fr':currentLanguage=JSON.parse(JSON.stringify(_fre2.default));break;case'ita':case'it':currentLanguage=JSON.parse(JSON.stringify(_ita2.default));break;case'jpn':case'ja':currentLanguage=JSON.parse(JSON.stringify(_jpn2.default));break;case'spa':case'es':currentLanguage=JSON.parse(JSON.stringify(_spa2.default));break;default:currentLanguage=JSON.parse(JSON.stringify(_eng2.default));break;}if(backendTranslations&&backendTranslations.length>0){updateTranslationsWithBackend(backendTranslations);}return currentLanguage;};var resolveLocale=exports.resolveLocale=function resolveLocale(lang){return lang?_localeMapping2.default[lang]:"en-GB";};var getCurrentTranslation=exports.getCurrentTranslation=function getCurrentTranslation(){return currentLanguage;};var updateTranslationsWithBackend=function updateTranslationsWithBackend(backendTranslations){backendTranslations.forEach(function(translation){switch(translation.translationKey){case'DELIVERY_TAB_TITLE':currentLanguage.shippingOptions.title=translation.value;break;case'STORE_TAB_TITLE':currentLanguage.pickupLocations.store.title=translation.value;break;case'PICKUP_TAB_TITLE':currentLanguage.pickupLocations.carrier.title=translation.value;break;case'ESTIMATED_DATE_BUTTON':currentLanguage.tabs.estimatedDate=translation.value;break;case'EXACT_DATE_BUTTON':currentLanguage.tabs.exactDate=translation.value;break;case'DELIVERY_TAB_FOOTER':currentLanguage.shippingOptions.packageWillBeDelivered=translation.value;break;case'STORE_TAB_FOOTER':currentLanguage.pickupLocations.store.packageWillBeReady=translation.value;break;case'PICKUP_TAB_FOOTER':currentLanguage.pickupLocations.carrier.packageWillBeReady=translation.value;break;}});};

                /***/ }),
            /* 29 */
            /***/ (function(module, __webpack_exports__, __webpack_require__) {

                "use strict";
                Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
                /* WEBPACK VAR INJECTION */(function(process) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "version", function() { return version; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DOM", function() { return DOM; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Children", function() { return Children; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "render", function() { return render$1; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createClass", function() { return createClass; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createFactory", function() { return createFactory; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createElement", function() { return createElement; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cloneElement", function() { return cloneElement$1; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isValidElement", function() { return isValidElement; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "findDOMNode", function() { return findDOMNode; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unmountComponentAtNode", function() { return unmountComponentAtNode; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Component", function() { return Component$1; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PureComponent", function() { return PureComponent; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "unstable_renderSubtreeIntoContainer", function() { return renderSubtreeIntoContainer; });
                    /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "__spread", function() { return extend; });
                    /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_prop_types__ = __webpack_require__(54);
                    /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_prop_types___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_prop_types__);
                    /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_preact__ = __webpack_require__(0);
                    /* harmony reexport (default from non-hamory) */ __webpack_require__.d(__webpack_exports__, "PropTypes", function() { return __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a; });



                    var version = '15.1.0'; // trick libraries to think we are react

                    var ELEMENTS = 'a abbr address area article aside audio b base bdi bdo big blockquote body br button canvas caption cite code col colgroup data datalist dd del details dfn dialog div dl dt em embed fieldset figcaption figure footer form h1 h2 h3 h4 h5 h6 head header hgroup hr html i iframe img input ins kbd keygen label legend li link main map mark menu menuitem meta meter nav noscript object ol optgroup option output p param picture pre progress q rp rt ruby s samp script section select small source span strong style sub summary sup table tbody td textarea tfoot th thead time title tr track u ul var video wbr circle clipPath defs ellipse g image line linearGradient mask path pattern polygon polyline radialGradient rect stop svg text tspan'.split(' ');

                    var REACT_ELEMENT_TYPE = (typeof Symbol!=='undefined' && Symbol.for && Symbol.for('react.element')) || 0xeac7;

                    var COMPONENT_WRAPPER_KEY = (typeof Symbol!=='undefined' && Symbol.for) ? Symbol.for('__preactCompatWrapper') : '__preactCompatWrapper';

// don't autobind these methods since they already have guaranteed context.
                    var AUTOBIND_BLACKLIST = {
                        constructor: 1,
                        render: 1,
                        shouldComponentUpdate: 1,
                        componentWillReceiveProps: 1,
                        componentWillUpdate: 1,
                        componentDidUpdate: 1,
                        componentWillMount: 1,
                        componentDidMount: 1,
                        componentWillUnmount: 1,
                        componentDidUnmount: 1
                    };


                    var CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip|color|fill|flood|font|glyph|horiz|marker|overline|paint|stop|strikethrough|stroke|text|underline|unicode|units|v|vector|vert|word|writing|x)[A-Z]/;


                    var BYPASS_HOOK = {};

                    /*global process*/
                    var DEV = typeof process==='undefined' || !Object({"NODE_ENV":"development","API_URL":"https://api-acc.paazl.com/v1/","RESOURCE_URL":"https://widget-acc.paazl.com/v1/","GOOGLE_MAP_API_KEY":"AIzaSyCVWGcx8iXWEgjyV_nDMuIKYVsq11ZPXIA","GIT_VERSION":"21.30","GIT_COMMIT_HASH":"8117b7c6d4e6560985dac0003b1dcf99333a7a0b","GIT_BRANCH":"HEAD"}) || "development"!=='production';

// a component that renders nothing. Used to replace components for unmountComponentAtNode.
                    function EmptyComponent() { return null; }



// make react think we're react.
                    var VNode = Object(__WEBPACK_IMPORTED_MODULE_1_preact__["h"])('a', null).constructor;
                    VNode.prototype.$$typeof = REACT_ELEMENT_TYPE;
                    VNode.prototype.preactCompatUpgraded = false;
                    VNode.prototype.preactCompatNormalized = false;

                    Object.defineProperty(VNode.prototype, 'type', {
                        get: function() { return this.nodeName; },
                        set: function(v) { this.nodeName = v; },
                        configurable:true
                    });

                    Object.defineProperty(VNode.prototype, 'props', {
                        get: function() { return this.attributes; },
                        set: function(v) { this.attributes = v; },
                        configurable:true
                    });



                    var oldEventHook = __WEBPACK_IMPORTED_MODULE_1_preact__["options"].event;
                    __WEBPACK_IMPORTED_MODULE_1_preact__["options"].event = function (e) {
                        if (oldEventHook) { e = oldEventHook(e); }
                        e.persist = Object;
                        e.nativeEvent = e;
                        return e;
                    };


                    var oldVnodeHook = __WEBPACK_IMPORTED_MODULE_1_preact__["options"].vnode;
                    __WEBPACK_IMPORTED_MODULE_1_preact__["options"].vnode = function (vnode) {
                        if (!vnode.preactCompatUpgraded) {
                            vnode.preactCompatUpgraded = true;

                            var tag = vnode.nodeName,
                                attrs = vnode.attributes = extend({}, vnode.attributes);

                            if (typeof tag==='function') {
                                if (tag[COMPONENT_WRAPPER_KEY]===true || (tag.prototype && 'isReactComponent' in tag.prototype)) {
                                    if (vnode.children && String(vnode.children)==='') { vnode.children = undefined; }
                                    if (vnode.children) { attrs.children = vnode.children; }

                                    if (!vnode.preactCompatNormalized) {
                                        normalizeVNode(vnode);
                                    }
                                    handleComponentVNode(vnode);
                                }
                            }
                            else {
                                if (vnode.children && String(vnode.children)==='') { vnode.children = undefined; }
                                if (vnode.children) { attrs.children = vnode.children; }

                                if (attrs.defaultValue) {
                                    if (!attrs.value && attrs.value!==0) {
                                        attrs.value = attrs.defaultValue;
                                    }
                                    delete attrs.defaultValue;
                                }

                                handleElementVNode(vnode, attrs);
                            }
                        }

                        if (oldVnodeHook) { oldVnodeHook(vnode); }
                    };

                    function handleComponentVNode(vnode) {
                        var tag = vnode.nodeName,
                            a = vnode.attributes;

                        vnode.attributes = {};
                        if (tag.defaultProps) { extend(vnode.attributes, tag.defaultProps); }
                        if (a) { extend(vnode.attributes, a); }
                    }

                    function handleElementVNode(vnode, a) {
                        var shouldSanitize, attrs, i;
                        if (a) {
                            for (i in a) { if ((shouldSanitize = CAMEL_PROPS.test(i))) { break; } }
                            if (shouldSanitize) {
                                attrs = vnode.attributes = {};
                                for (i in a) {
                                    if (a.hasOwnProperty(i)) {
                                        attrs[ CAMEL_PROPS.test(i) ? i.replace(/([A-Z0-9])/, '-$1').toLowerCase() : i ] = a[i];
                                    }
                                }
                            }
                        }
                    }



// proxy render() since React returns a Component reference.
                    function render$1(vnode, parent, callback) {
                        var prev = parent && parent._preactCompatRendered && parent._preactCompatRendered.base;

                        // ignore impossible previous renders
                        if (prev && prev.parentNode!==parent) { prev = null; }

                        // default to first Element child
                        if (!prev && parent) { prev = parent.firstElementChild; }

                        // remove unaffected siblings
                        for (var i=parent.childNodes.length; i--; ) {
                            if (parent.childNodes[i]!==prev) {
                                parent.removeChild(parent.childNodes[i]);
                            }
                        }

                        var out = Object(__WEBPACK_IMPORTED_MODULE_1_preact__["render"])(vnode, parent, prev);
                        if (parent) { parent._preactCompatRendered = out && (out._component || { base: out }); }
                        if (typeof callback==='function') { callback(); }
                        return out && out._component || out;
                    }


                    var ContextProvider = function () {};

                    ContextProvider.prototype.getChildContext = function () {
                        return this.props.context;
                    };
                    ContextProvider.prototype.render = function (props) {
                        return props.children[0];
                    };

                    function renderSubtreeIntoContainer(parentComponent, vnode, container, callback) {
                        var wrap = Object(__WEBPACK_IMPORTED_MODULE_1_preact__["h"])(ContextProvider, { context: parentComponent.context }, vnode);
                        var renderContainer = render$1(wrap, container);
                        var component = renderContainer._component || renderContainer.base;
                        if (callback) { callback.call(component, renderContainer); }
                        return component;
                    }


                    function unmountComponentAtNode(container) {
                        var existing = container._preactCompatRendered && container._preactCompatRendered.base;
                        if (existing && existing.parentNode===container) {
                            Object(__WEBPACK_IMPORTED_MODULE_1_preact__["render"])(Object(__WEBPACK_IMPORTED_MODULE_1_preact__["h"])(EmptyComponent), container, existing);
                            return true;
                        }
                        return false;
                    }



                    var ARR = [];

// This API is completely unnecessary for Preact, so it's basically passthrough.
                    var Children = {
                        map: function(children, fn, ctx) {
                            if (children == null) { return null; }
                            children = Children.toArray(children);
                            if (ctx && ctx!==children) { fn = fn.bind(ctx); }
                            return children.map(fn);
                        },
                        forEach: function(children, fn, ctx) {
                            if (children == null) { return null; }
                            children = Children.toArray(children);
                            if (ctx && ctx!==children) { fn = fn.bind(ctx); }
                            children.forEach(fn);
                        },
                        count: function(children) {
                            return children && children.length || 0;
                        },
                        only: function(children) {
                            children = Children.toArray(children);
                            if (children.length!==1) { throw new Error('Children.only() expects only one child.'); }
                            return children[0];
                        },
                        toArray: function(children) {
                            if (children == null) { return []; }
                            return ARR.concat(children);
                        }
                    };


                    /** Track current render() component for ref assignment */
                    var currentComponent;


                    function createFactory(type) {
                        return createElement.bind(null, type);
                    }


                    var DOM = {};
                    for (var i=ELEMENTS.length; i--; ) {
                        DOM[ELEMENTS[i]] = createFactory(ELEMENTS[i]);
                    }

                    function upgradeToVNodes(arr, offset) {
                        for (var i=offset || 0; i<arr.length; i++) {
                            var obj = arr[i];
                            if (Array.isArray(obj)) {
                                upgradeToVNodes(obj);
                            }
                            else if (obj && typeof obj==='object' && !isValidElement(obj) && ((obj.props && obj.type) || (obj.attributes && obj.nodeName) || obj.children)) {
                                arr[i] = createElement(obj.type || obj.nodeName, obj.props || obj.attributes, obj.children);
                            }
                        }
                    }

                    function isStatelessComponent(c) {
                        return typeof c==='function' && !(c.prototype && c.prototype.render);
                    }


// wraps stateless functional components in a PropTypes validator
                    function wrapStatelessComponent(WrappedComponent) {
                        return createClass({
                            displayName: WrappedComponent.displayName || WrappedComponent.name,
                            render: function() {
                                return WrappedComponent(this.props, this.context);
                            }
                        });
                    }


                    function statelessComponentHook(Ctor) {
                        var Wrapped = Ctor[COMPONENT_WRAPPER_KEY];
                        if (Wrapped) { return Wrapped===true ? Ctor : Wrapped; }

                        Wrapped = wrapStatelessComponent(Ctor);

                        Object.defineProperty(Wrapped, COMPONENT_WRAPPER_KEY, { configurable:true, value:true });
                        Wrapped.displayName = Ctor.displayName;
                        Wrapped.propTypes = Ctor.propTypes;
                        Wrapped.defaultProps = Ctor.defaultProps;

                        Object.defineProperty(Ctor, COMPONENT_WRAPPER_KEY, { configurable:true, value:Wrapped });

                        return Wrapped;
                    }


                    function createElement() {
                        var args = [], len = arguments.length;
                        while ( len-- ) args[ len ] = arguments[ len ];

                        upgradeToVNodes(args, 2);
                        return normalizeVNode(__WEBPACK_IMPORTED_MODULE_1_preact__["h"].apply(void 0, args));
                    }


                    function normalizeVNode(vnode) {
                        vnode.preactCompatNormalized = true;

                        applyClassName(vnode);

                        if (isStatelessComponent(vnode.nodeName)) {
                            vnode.nodeName = statelessComponentHook(vnode.nodeName);
                        }

                        var ref = vnode.attributes.ref,
                            type = ref && typeof ref;
                        if (currentComponent && (type==='string' || type==='number')) {
                            vnode.attributes.ref = createStringRefProxy(ref, currentComponent);
                        }

                        applyEventNormalization(vnode);

                        return vnode;
                    }


                    function cloneElement$1(element, props) {
                        var children = [], len = arguments.length - 2;
                        while ( len-- > 0 ) children[ len ] = arguments[ len + 2 ];

                        if (!isValidElement(element)) { return element; }
                        var elementProps = element.attributes || element.props;
                        var node = Object(__WEBPACK_IMPORTED_MODULE_1_preact__["h"])(
                            element.nodeName || element.type,
                            extend({}, elementProps),
                            element.children || elementProps && elementProps.children
                        );
                        // Only provide the 3rd argument if needed.
                        // Arguments 3+ overwrite element.children in preactCloneElement
                        var cloneArgs = [node, props];
                        if (children && children.length) {
                            cloneArgs.push(children);
                        }
                        else if (props && props.children) {
                            cloneArgs.push(props.children);
                        }
                        return normalizeVNode(__WEBPACK_IMPORTED_MODULE_1_preact__["cloneElement"].apply(void 0, cloneArgs));
                    }


                    function isValidElement(element) {
                        return element && ((element instanceof VNode) || element.$$typeof===REACT_ELEMENT_TYPE);
                    }


                    function createStringRefProxy(name, component) {
                        return component._refProxies[name] || (component._refProxies[name] = function (resolved) {
                            if (component && component.refs) {
                                component.refs[name] = resolved;
                                if (resolved===null) {
                                    delete component._refProxies[name];
                                    component = null;
                                }
                            }
                        });
                    }


                    function applyEventNormalization(ref) {
                        var nodeName = ref.nodeName;
                        var attributes = ref.attributes;

                        if (!attributes || typeof nodeName!=='string') { return; }
                        var props = {};
                        for (var i in attributes) {
                            props[i.toLowerCase()] = i;
                        }
                        if (props.ondoubleclick) {
                            attributes.ondblclick = attributes[props.ondoubleclick];
                            delete attributes[props.ondoubleclick];
                        }
                        // for *textual inputs* (incl textarea), normalize `onChange` -> `onInput`:
                        if (props.onchange && (nodeName==='textarea' || (nodeName.toLowerCase()==='input' && !/^fil|che|rad/i.test(attributes.type)))) {
                            var normalized = props.oninput || 'oninput';
                            if (!attributes[normalized]) {
                                attributes[normalized] = multihook([attributes[normalized], attributes[props.onchange]]);
                                delete attributes[props.onchange];
                            }
                        }
                    }


                    function applyClassName(vnode) {
                        var a = vnode.attributes || (vnode.attributes = {});
                        classNameDescriptor.enumerable = 'className' in a;
                        if (a.className) { a.class = a.className; }
                        Object.defineProperty(a, 'className', classNameDescriptor);
                    }


                    var classNameDescriptor = {
                        configurable: true,
                        get: function() { return this.class; },
                        set: function(v) { this.class = v; }
                    };

                    function extend(base, props) {
                        var arguments$1 = arguments;

                        for (var i=1, obj = (void 0); i<arguments.length; i++) {
                            if ((obj = arguments$1[i])) {
                                for (var key in obj) {
                                    if (obj.hasOwnProperty(key)) {
                                        base[key] = obj[key];
                                    }
                                }
                            }
                        }
                        return base;
                    }


                    function shallowDiffers(a, b) {
                        for (var i in a) { if (!(i in b)) { return true; } }
                        for (var i$1 in b) { if (a[i$1]!==b[i$1]) { return true; } }
                        return false;
                    }


                    function findDOMNode(component) {
                        return component && component.base || component;
                    }


                    function F(){}

                    function createClass(obj) {
                        function cl(props, context) {
                            bindAll(this);
                            Component$1.call(this, props, context, BYPASS_HOOK);
                            newComponentHook.call(this, props, context);
                        }

                        obj = extend({ constructor: cl }, obj);

                        // We need to apply mixins here so that getDefaultProps is correctly mixed
                        if (obj.mixins) {
                            applyMixins(obj, collateMixins(obj.mixins));
                        }
                        if (obj.statics) {
                            extend(cl, obj.statics);
                        }
                        if (obj.propTypes) {
                            cl.propTypes = obj.propTypes;
                        }
                        if (obj.defaultProps) {
                            cl.defaultProps = obj.defaultProps;
                        }
                        if (obj.getDefaultProps) {
                            cl.defaultProps = obj.getDefaultProps.call(cl);
                        }

                        F.prototype = Component$1.prototype;
                        cl.prototype = extend(new F(), obj);

                        cl.displayName = obj.displayName || 'Component';

                        return cl;
                    }


// Flatten an Array of mixins to a map of method name to mixin implementations
                    function collateMixins(mixins) {
                        var keyed = {};
                        for (var i=0; i<mixins.length; i++) {
                            var mixin = mixins[i];
                            for (var key in mixin) {
                                if (mixin.hasOwnProperty(key) && typeof mixin[key]==='function') {
                                    (keyed[key] || (keyed[key]=[])).push(mixin[key]);
                                }
                            }
                        }
                        return keyed;
                    }


// apply a mapping of Arrays of mixin methods to a component prototype
                    function applyMixins(proto, mixins) {
                        for (var key in mixins) { if (mixins.hasOwnProperty(key)) {
                            proto[key] = multihook(
                                mixins[key].concat(proto[key] || ARR),
                                key==='getDefaultProps' || key==='getInitialState' || key==='getChildContext'
                            );
                        } }
                    }


                    function bindAll(ctx) {
                        for (var i in ctx) {
                            var v = ctx[i];
                            if (typeof v==='function' && !v.__bound && !AUTOBIND_BLACKLIST.hasOwnProperty(i)) {
                                (ctx[i] = v.bind(ctx)).__bound = true;
                            }
                        }
                    }


                    function callMethod(ctx, m, args) {
                        if (typeof m==='string') {
                            m = ctx.constructor.prototype[m];
                        }
                        if (typeof m==='function') {
                            return m.apply(ctx, args);
                        }
                    }

                    function multihook(hooks, skipDuplicates) {
                        return function() {
                            var arguments$1 = arguments;
                            var this$1 = this;

                            var ret;
                            for (var i=0; i<hooks.length; i++) {
                                var r = callMethod(this$1, hooks[i], arguments$1);

                                if (skipDuplicates && r!=null) {
                                    if (!ret) { ret = {}; }
                                    for (var key in r) { if (r.hasOwnProperty(key)) {
                                        ret[key] = r[key];
                                    } }
                                }
                                else if (typeof r!=='undefined') { ret = r; }
                            }
                            return ret;
                        };
                    }


                    function newComponentHook(props, context) {
                        propsHook.call(this, props, context);
                        this.componentWillReceiveProps = multihook([propsHook, this.componentWillReceiveProps || 'componentWillReceiveProps']);
                        this.render = multihook([propsHook, beforeRender, this.render || 'render', afterRender]);
                    }


                    function propsHook(props, context) {
                        if (!props) { return; }

                        // React annoyingly special-cases single children, and some react components are ridiculously strict about this.
                        var c = props.children;
                        if (c && Array.isArray(c) && c.length===1 && (typeof c[0]==='string' || typeof c[0]==='function' || c[0] instanceof VNode)) {
                            props.children = c[0];

                            // but its totally still going to be an Array.
                            if (props.children && typeof props.children==='object') {
                                props.children.length = 1;
                                props.children[0] = props.children;
                            }
                        }

                        // add proptype checking
                        if (DEV) {
                            var ctor = typeof this==='function' ? this : this.constructor,
                                propTypes = this.propTypes || ctor.propTypes;
                            var displayName = this.displayName || ctor.name;

                            if (propTypes) {
                                __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a.checkPropTypes(propTypes, props, 'prop', displayName);
                            }
                        }
                    }


                    function beforeRender(props) {
                        currentComponent = this;
                    }

                    function afterRender() {
                        if (currentComponent===this) {
                            currentComponent = null;
                        }
                    }



                    function Component$1(props, context, opts) {
                        __WEBPACK_IMPORTED_MODULE_1_preact__["Component"].call(this, props, context);
                        this.state = this.getInitialState ? this.getInitialState() : {};
                        this.refs = {};
                        this._refProxies = {};
                        if (opts!==BYPASS_HOOK) {
                            newComponentHook.call(this, props, context);
                        }
                    }
                    extend(Component$1.prototype = new __WEBPACK_IMPORTED_MODULE_1_preact__["Component"](), {
                        constructor: Component$1,

                        isReactComponent: {},

                        replaceState: function(state, callback) {
                            var this$1 = this;

                            this.setState(state, callback);
                            for (var i in this$1.state) {
                                if (!(i in state)) {
                                    delete this$1.state[i];
                                }
                            }
                        },

                        getDOMNode: function() {
                            return this.base;
                        },

                        isMounted: function() {
                            return !!this.base;
                        }
                    });



                    function PureComponent(props, context) {
                        Component$1.call(this, props, context);
                    }
                    F.prototype = Component$1.prototype;
                    PureComponent.prototype = new F();
                    PureComponent.prototype.isPureReactComponent = true;
                    PureComponent.prototype.shouldComponentUpdate = function(props, state) {
                        return shallowDiffers(this.props, props) || shallowDiffers(this.state, state);
                    };

                    var index = {
                        version: version,
                        DOM: DOM,
                        PropTypes: __WEBPACK_IMPORTED_MODULE_0_prop_types___default.a,
                        Children: Children,
                        render: render$1,
                        createClass: createClass,
                        createFactory: createFactory,
                        createElement: createElement,
                        cloneElement: cloneElement$1,
                        isValidElement: isValidElement,
                        findDOMNode: findDOMNode,
                        unmountComponentAtNode: unmountComponentAtNode,
                        Component: Component$1,
                        PureComponent: PureComponent,
                        unstable_renderSubtreeIntoContainer: renderSubtreeIntoContainer,
                        __spread: extend
                    };

                    /* harmony default export */ __webpack_exports__["default"] = (index);
//# sourceMappingURL=preact-compat.es.js.map

                    /* WEBPACK VAR INJECTION */}.call(__webpack_exports__, __webpack_require__(77)))

                /***/ }),
            /* 30 */
            /***/ (function(module, exports, __webpack_require__) {

                var anObject = __webpack_require__(8);
                var isArrayIteratorMethod = __webpack_require__(120);
                var toLength = __webpack_require__(55);
                var bind = __webpack_require__(56);
                var getIteratorMethod = __webpack_require__(111);
                var callWithSafeIterationClosing = __webpack_require__(129);

                var Result = function (stopped, result) {
                    this.stopped = stopped;
                    this.result = result;
                };

                var iterate = module.exports = function (iterable, fn, that, AS_ENTRIES, IS_ITERATOR) {
                    var boundFunction = bind(fn, that, AS_ENTRIES ? 2 : 1);
                    var iterator, iterFn, index, length, result, step;

                    if (IS_ITERATOR) {
                        iterator = iterable;
                    } else {
                        iterFn = getIteratorMethod(iterable);
                        if (typeof iterFn != 'function') throw TypeError('Target is not iterable');
                        // optimisation for array iterators
                        if (isArrayIteratorMethod(iterFn)) {
                            for (index = 0, length = toLength(iterable.length); length > index; index++) {
                                result = AS_ENTRIES
                                    ? boundFunction(anObject(step = iterable[index])[0], step[1])
                                    : boundFunction(iterable[index]);
                                if (result && result instanceof Result) return result;
                            } return new Result(false);
                        }
                        iterator = iterFn.call(iterable);
                    }

                    while (!(step = iterator.next()).done) {
                        result = callWithSafeIterationClosing(iterator, boundFunction, step.value, AS_ENTRIES);
                        if (result && result instanceof Result) return result;
                    } return new Result(false);
                };

                iterate.stop = function (result) {
                    return new Result(true, result);
                };


                /***/ }),
            /* 31 */
            /***/ (function(module, exports, __webpack_require__) {

                var NATIVE_WEAK_MAP = __webpack_require__(122);
                var global = __webpack_require__(4);
                var isObject = __webpack_require__(16);
                var hide = __webpack_require__(9);
                var objectHas = __webpack_require__(10);
                var sharedKey = __webpack_require__(47);
                var hiddenKeys = __webpack_require__(46);

                var WeakMap = global.WeakMap;
                var set, get, has;

                var enforce = function (it) {
                    return has(it) ? get(it) : set(it, {});
                };

                var getterFor = function (TYPE) {
                    return function (it) {
                        var state;
                        if (!isObject(it) || (state = get(it)).type !== TYPE) {
                            throw TypeError('Incompatible receiver, ' + TYPE + ' required');
                        } return state;
                    };
                };

                if (NATIVE_WEAK_MAP) {
                    var store = new WeakMap();
                    var wmget = store.get;
                    var wmhas = store.has;
                    var wmset = store.set;
                    set = function (it, metadata) {
                        wmset.call(store, it, metadata);
                        return metadata;
                    };
                    get = function (it) {
                        return wmget.call(store, it) || {};
                    };
                    has = function (it) {
                        return wmhas.call(store, it);
                    };
                } else {
                    var STATE = sharedKey('state');
                    hiddenKeys[STATE] = true;
                    set = function (it, metadata) {
                        hide(it, STATE, metadata);
                        return metadata;
                    };
                    get = function (it) {
                        return objectHas(it, STATE) ? it[STATE] : {};
                    };
                    has = function (it) {
                        return objectHas(it, STATE);
                    };
                }

                module.exports = {
                    set: set,
                    get: get,
                    has: has,
                    enforce: enforce,
                    getterFor: getterFor
                };


                /***/ }),
            /* 32 */
            /***/ (function(module, exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
                var IndexedObject = __webpack_require__(107);
                var requireObjectCoercible = __webpack_require__(39);

                module.exports = function (it) {
                    return IndexedObject(requireObjectCoercible(it));
                };


                /***/ }),
            /* 33 */
            /***/ (function(module, exports) {

                module.exports = function (bitmap, value) {
                    return {
                        enumerable: !(bitmap & 1),
                        configurable: !(bitmap & 2),
                        writable: !(bitmap & 4),
                        value: value
                    };
                };


                /***/ }),
            /* 34 */
            /***/ (function(module, exports, __webpack_require__) {

                var global = __webpack_require__(4);
                var setGlobal = __webpack_require__(48);
                var IS_PURE = __webpack_require__(23);

                var SHARED = '__core-js_shared__';
                var store = global[SHARED] || setGlobal(SHARED, {});

                (module.exports = function (key, value) {
                    return store[key] || (store[key] = value !== undefined ? value : {});
                })('versions', []).push({
                    version: '3.2.1',
                    mode: IS_PURE ? 'pure' : 'global',
                    copyright: '© 2019 Denis Pushkarev (zloirock.ru)'
                });


                /***/ }),
            /* 35 */
            /***/ (function(module, exports) {

                module.exports = function (exec) {
                    try {
                        return { error: false, value: exec() };
                    } catch (error) {
                        return { error: true, value: error };
                    }
                };


                /***/ }),
            /* 36 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                exports.__esModule=true;exports.normalizeConfig=exports.preparePickupLocationsRequest=exports.isPickupConfigChanged=exports.getDeliveryConfig=exports.isDeliveryConfigChanged=exports.getDefaultTab=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _constants=__webpack_require__(1);var _I18nResolver=__webpack_require__(28);var getDefaultTab=exports.getDefaultTab=function getDefaultTab(config){if(config.availableTabs&&config.availableTabs.length){return config.availableTabs[0];}return _constants.DEFAULT_CONFIG.defaultTab;};var isDeliveryConfigChanged=exports.isDeliveryConfigChanged=function isDeliveryConfigChanged(config,newConfig){return config.apiKey!==newConfig.apiKey||config.token!==newConfig.token||config.consigneeCountryCode!==newConfig.consigneeCountryCode||config.consignorCountryCode!==newConfig.consignorCountryCode||config.consigneePostalCode!==newConfig.consigneePostalCode||config.consignorPostalCode!==newConfig.consignorPostalCode||config.numberOfProcessingDays!==newConfig.numberOfProcessingDays||config.tags!==newConfig.tags||JSON.stringify(config.deliveryDateOptions)!==JSON.stringify(newConfig.deliveryDateOptions)||config.shippingOptionsLimit!==newConfig.shippingOptionsLimit||config.currency!==newConfig.currency||config.language!==newConfig.language||config.currency!==newConfig.currency||JSON.stringify(config.sortingModel)!==JSON.stringify(newConfig.sortingModel)||JSON.stringify(config.shipmentParameters)!==JSON.stringify(newConfig.shipmentParameters);};var getDeliveryConfig=exports.getDeliveryConfig=function getDeliveryConfig(config){var _normalizeConfig=normalizeConfig(_extends({},config)),apiKey=_normalizeConfig.apiKey,token=_normalizeConfig.token,consigneeCountryCode=_normalizeConfig.consigneeCountryCode,consignorCountryCode=_normalizeConfig.consignorCountryCode,consigneePostalCode=_normalizeConfig.consigneePostalCode,consignorPostalCode=_normalizeConfig.consignorPostalCode,numberOfProcessingDays=_normalizeConfig.numberOfProcessingDays,tags=_normalizeConfig.tags,deliveryDateOptions=_normalizeConfig.deliveryDateOptions,shipmentParameters=_normalizeConfig.shipmentParameters,language=_normalizeConfig.language,currency=_normalizeConfig.currency,shippingOptionsLimit=_normalizeConfig.shippingOptionsLimit,sortingModel=_normalizeConfig.sortingModel;return{apiKey:apiKey,token:token,consigneeCountryCode:consigneeCountryCode,consignorCountryCode:consignorCountryCode,consigneePostalCode:consigneePostalCode,consignorPostalCode:consignorPostalCode,numberOfProcessingDays:numberOfProcessingDays,tags:tags,deliveryDateOptions:deliveryDateOptions,shipmentParameters:shipmentParameters,locale:(0,_I18nResolver.resolveLocale)(language),limit:shippingOptionsLimit,start:0,currency:currency,sortingModel:sortingModel};};var isPickupConfigChanged=exports.isPickupConfigChanged=function isPickupConfigChanged(config,newConfig){return config.apiKey!==newConfig.apiKey||config.token!==newConfig.token||config.consigneeCountryCode!==newConfig.consigneeCountryCode||config.consignorCountryCode!==newConfig.consignorCountryCode||config.consigneePostalCode!==newConfig.consigneePostalCode||config.consignorPostalCode!==newConfig.consignorPostalCode||config.numberOfProcessingDays!==newConfig.numberOfProcessingDays||config.crossBorderStores!==newConfig.crossBorderStores||config.tags!==newConfig.tags||JSON.stringify(config.deliveryDateOptions)!==JSON.stringify(newConfig.deliveryDateOptions)||config.pickupLocationsLimit!==newConfig.pickupLocationsLimit||config.pickupLocationsPageLimit!==newConfig.pickupLocationsPageLimit||config.initialPickupLocations!==newConfig.initialPickupLocations||config.language!==newConfig.language||config.currency!==newConfig.currency||JSON.stringify(config.shipmentParameters)!==JSON.stringify(newConfig.shipmentParameters);};var preparePickupLocationsRequest=exports.preparePickupLocationsRequest=function preparePickupLocationsRequest(config,isStorePickup){var _normalizeConfig2=normalizeConfig(_extends({},config)),apiKey=_normalizeConfig2.apiKey,token=_normalizeConfig2.token,consigneeCountryCode=_normalizeConfig2.consigneeCountryCode,consignorCountryCode=_normalizeConfig2.consignorCountryCode,consigneePostalCode=_normalizeConfig2.consigneePostalCode,consignorPostalCode=_normalizeConfig2.consignorPostalCode,numberOfProcessingDays=_normalizeConfig2.numberOfProcessingDays,crossBorderStores=_normalizeConfig2.crossBorderStores,tags=_normalizeConfig2.tags,deliveryDateOptions=_normalizeConfig2.deliveryDateOptions,shipmentParameters=_normalizeConfig2.shipmentParameters,language=_normalizeConfig2.language,pickupLocationsLimit=_normalizeConfig2.pickupLocationsLimit;var network=getNetwork(config,isStorePickup);return{apiKey:apiKey,token:token,network:network,consigneeCountryCode:consigneeCountryCode,consignorCountryCode:consignorCountryCode,consigneePostalCode:consigneePostalCode,consignorPostalCode:consignorPostalCode,numberOfProcessingDays:numberOfProcessingDays,crossBorderStores:crossBorderStores,tags:tags,deliveryDateOptions:deliveryDateOptions,shipmentParameters:shipmentParameters,locale:(0,_I18nResolver.resolveLocale)(language),limit:pickupLocationsLimit};};var normalizeConfig=exports.normalizeConfig=function normalizeConfig(config){var normalizedConfig=_extends({},_constants.DEFAULT_CONFIG,config);if(isNaN(normalizedConfig.shippingOptionsLimit)||normalizedConfig.shippingOptionsLimit<1||normalizedConfig.shippingOptionsLimit>99){logInvalidParameterError('shippingOptionsLimit');normalizedConfig.shippingOptionsLimit=_constants.DEFAULT_CONFIG.shippingOptionsLimit;}if(isNaN(normalizedConfig.pickupLocationsLimit)||normalizedConfig.pickupLocationsLimit<1||normalizedConfig.pickupLocationsLimit>99){logInvalidParameterError('pickupLocationsLimit');normalizedConfig.pickupLocationsLimit=_constants.DEFAULT_CONFIG.pickupLocationsLimit;}return normalizedConfig;};var logInvalidParameterError=function logInvalidParameterError(fieldName){console.error('Invalid parameter "'+fieldName+'" set to default value');};var getNetwork=function getNetwork(config,isStorePickup){var isStoreTabEnabled=config.availableTabs.includes(_constants.TABS.STORE);if(!isStoreTabEnabled){return _constants.NETWORK.ALL;}return isStorePickup?_constants.NETWORK.STORE:_constants.NETWORK.CARRIER;};

                /***/ }),
            /* 37 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                exports.__esModule=true;exports.logApiTriggered=exports.logWidgetLoaded=exports.logRequestPerformed=exports.logRequestError=exports.logJsError=exports.logSystemInfo=undefined;var _constants=__webpack_require__(1);var _NetworkUtils=__webpack_require__(12);function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}var platform=__webpack_require__(176);var logSystemInfo=function logSystemInfo(config){var apiKey=config.apiKey,apiSecret=config.apiSecret,widgetConfig=_objectWithoutProperties(config,['apiKey','apiSecret']);var pageUrl=window.location.href;var systemInfo={apiKey:apiKey,widgetConfig:widgetConfig,googleApiKey:_constants.GOOGLE_API_KEY,pageUrl:pageUrl,apiUrl:_constants.BASE_URL,resourceUrl:_constants.RESOURCE_BASE_URL,platform:platform.toString(),git:{version:_constants.GIT_VERSION,branch:_constants.GIT_BRANCH,commit:_constants.GIT_COMMIT_HASH}};console.log("Paazl checkout widget info: ",systemInfo);};exports.logSystemInfo=logSystemInfo;var logJsError=exports.logJsError=function logJsError(config,error){if(config.logLevel!==_constants.LOG_LEVEL.NONE){(0,_NetworkUtils.sendLogReport)({logLevel:_constants.LOG_LEVEL.ERROR,logEvent:_constants.LOG_EVENT.JAVASCRIPT_ERROR,message:error,config:config});}};var logRequestError=exports.logRequestError=function logRequestError(config,error,url,requestBody){if(config.logLevel!==_constants.LOG_LEVEL.NONE){(0,_NetworkUtils.sendLogReport)({logLevel:_constants.LOG_LEVEL.ERROR,logEvent:_constants.LOG_EVENT.ENDPOINT_ERROR,message:'Request to '+url+' has failed '+error,config:config,requestBody:requestBody});}};var logRequestPerformed=exports.logRequestPerformed=function logRequestPerformed(config,url,requestBody){var logLevel=config.logLevel,apiKey=config.apiKey;if([_constants.LOG_LEVEL.DEBUG,_constants.LOG_LEVEL.TRACE].includes(logLevel)){var logConfiguration={logLevel:logLevel,logEvent:_constants.LOG_EVENT.ENDPOINT_EVENT,message:'Request to '+url+' has been performed',config:{apiKey:apiKey}};if(logLevel===_constants.LOG_LEVEL.TRACE){logConfiguration.config=config;logConfiguration.requestBody=requestBody;}(0,_NetworkUtils.sendLogReport)(logConfiguration);}};var logWidgetLoaded=exports.logWidgetLoaded=function logWidgetLoaded(config){var logLevel=config.logLevel,apiKey=config.apiKey;if([_constants.LOG_LEVEL.DEBUG,_constants.LOG_LEVEL.TRACE].includes(logLevel)){var logConfiguration={logLevel:logLevel,logEvent:_constants.LOG_EVENT.LOADING_EVENT,message:"Widget has been rendered",config:{apiKey:apiKey}};if(logLevel===_constants.LOG_LEVEL.TRACE){logConfiguration.config=config;}(0,_NetworkUtils.sendLogReport)(logConfiguration);}};var logApiTriggered=exports.logApiTriggered=function logApiTriggered(config,apiMethod){var logLevel=config.logLevel,apiKey=config.apiKey;if([_constants.LOG_LEVEL.DEBUG,_constants.LOG_LEVEL.TRACE].includes(logLevel)){var logConfiguration={logLevel:logLevel,logEvent:_constants.LOG_EVENT.WIDGET_API_EVENT,message:'Widget method '+apiMethod+' has been invoked',config:{apiKey:apiKey}};if(logLevel===_constants.LOG_LEVEL.TRACE){logConfiguration.config=config;}(0,_NetworkUtils.sendLogReport)(logConfiguration);}};

                /***/ }),
            /* 38 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                exports.__esModule=true;exports.checkout=exports.loadPickupLocations=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _ConfigUtils=__webpack_require__(36);var _NetworkUtils=__webpack_require__(12);var _constants=__webpack_require__(1);var _constants2=__webpack_require__(1);var _DateTimeUtils=__webpack_require__(13);var _Logger=__webpack_require__(37);function _objectWithoutProperties(obj,keys){var target={};for(var i in obj){if(keys.indexOf(i)>=0)continue;if(!Object.prototype.hasOwnProperty.call(obj,i))continue;target[i]=obj[i];}return target;}var loadPickupLocations=exports.loadPickupLocations=function loadPickupLocations(config,isStorePickup,setPickupLocations){var request=(0,_ConfigUtils.preparePickupLocationsRequest)(config,isStorePickup);setPickupLocations([],true);(0,_NetworkUtils.doPost)(_constants.SERVICE_POINT_LIST_URL,request).then(function(res){(0,_Logger.logRequestPerformed)(config,_constants.SERVICE_POINT_LIST_URL,request);var locations=res.data&&res.data.pickupLocations||[];setPickupLocations(locations);}).catch(function(e){console.error(e);(0,_Logger.logRequestError)(config,e,_constants.SERVICE_POINT_LIST_URL,request);setPickupLocations([]);});};var checkout=function checkout(config,identifier,code,preferredDeliveryDate,accountNumber,onSuccess,onError){var body={apiKey:config.apiKey,token:config.token,shippingOption:{identifier:identifier}};if(preferredDeliveryDate){body=_extends({},body,{preferredDeliveryDate:(0,_DateTimeUtils.format)(preferredDeliveryDate,_constants2.FORMAT_MASKS.DEFAULT_DATE,true)});}if(code){body=_extends({},body,{pickupLocation:_extends({},body.pickupLocation,{code:code})});}if(accountNumber){body=_extends({},body,{pickupLocation:_extends({},body.pickupLocation,{accountNumber:accountNumber})});}return(0,_NetworkUtils.doPost)(_constants.SAVE_CHECKOUT_INFO_URL,body).then(function(res){localStorage.setItem(_constants.STORAGE_OPTION_KEY,identifier);localStorage.setItem(_constants.STORAGE_PREFERRED_DATE_KEY,preferredDeliveryDate&&(0,_DateTimeUtils.format)(preferredDeliveryDate,_constants2.FORMAT_MASKS.DEFAULT_DATE,true));localStorage.setItem(_constants.STORAGE_PICKUP_CODE_KEY,code);(0,_Logger.logRequestPerformed)(config,_constants.SAVE_CHECKOUT_INFO_URL,body);onSuccess&&onSuccess(res);var _body=body,apiKey=_body.apiKey,token=_body.token,selectedInfo=_objectWithoutProperties(_body,["apiKey","token"]);config.onSelect&&config.onSelect(selectedInfo);}).catch(function(e){console.error(e);(0,_Logger.logRequestError)(config,e,_constants.SAVE_CHECKOUT_INFO_URL,body);onError&&onError(e);});};exports.checkout=checkout;

                /***/ }),
            /* 39 */
            /***/ (function(module, exports) {

// `RequireObjectCoercible` abstract operation
// https://tc39.github.io/ecma262/#sec-requireobjectcoercible
                module.exports = function (it) {
                    if (it == undefined) throw TypeError("Can't call method on " + it);
                    return it;
                };


                /***/ }),
            /* 40 */
            /***/ (function(module, exports, __webpack_require__) {

                var DESCRIPTORS = __webpack_require__(19);
                var propertyIsEnumerableModule = __webpack_require__(112);
                var createPropertyDescriptor = __webpack_require__(33);
                var toIndexedObject = __webpack_require__(32);
                var toPrimitive = __webpack_require__(58);
                var has = __webpack_require__(10);
                var IE8_DOM_DEFINE = __webpack_require__(68);

                var nativeGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertydescriptor
                exports.f = DESCRIPTORS ? nativeGetOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
                    O = toIndexedObject(O);
                    P = toPrimitive(P, true);
                    if (IE8_DOM_DEFINE) try {
                        return nativeGetOwnPropertyDescriptor(O, P);
                    } catch (error) { /* empty */ }
                    if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
                };


                /***/ }),
            /* 41 */
            /***/ (function(module, exports, __webpack_require__) {

                var has = __webpack_require__(10);
                var toObject = __webpack_require__(99);
                var sharedKey = __webpack_require__(47);
                var CORRECT_PROTOTYPE_GETTER = __webpack_require__(118);

                var IE_PROTO = sharedKey('IE_PROTO');
                var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.getprototypeof
                module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
                    O = toObject(O);
                    if (has(O, IE_PROTO)) return O[IE_PROTO];
                    if (typeof O.constructor == 'function' && O instanceof O.constructor) {
                        return O.constructor.prototype;
                    } return O instanceof Object ? ObjectPrototype : null;
                };


                /***/ }),
            /* 42 */
            /***/ (function(module, exports) {

                var ceil = Math.ceil;
                var floor = Math.floor;

// `ToInteger` abstract operation
// https://tc39.github.io/ecma262/#sec-tointeger
                module.exports = function (argument) {
                    return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
                };


                /***/ }),
            /* 43 */
            /***/ (function(module, exports, __webpack_require__) {

                var anObject = __webpack_require__(8);
                var defineProperties = __webpack_require__(119);
                var enumBugKeys = __webpack_require__(50);
                var hiddenKeys = __webpack_require__(46);
                var html = __webpack_require__(72);
                var documentCreateElement = __webpack_require__(49);
                var sharedKey = __webpack_require__(47);
                var IE_PROTO = sharedKey('IE_PROTO');

                var PROTOTYPE = 'prototype';
                var Empty = function () { /* empty */ };

// Create object with fake `null` prototype: use iframe Object with cleared prototype
                var createDict = function () {
                    // Thrash, waste and sodomy: IE GC bug
                    var iframe = documentCreateElement('iframe');
                    var length = enumBugKeys.length;
                    var lt = '<';
                    var script = 'script';
                    var gt = '>';
                    var js = 'java' + script + ':';
                    var iframeDocument;
                    iframe.style.display = 'none';
                    html.appendChild(iframe);
                    iframe.src = String(js);
                    iframeDocument = iframe.contentWindow.document;
                    iframeDocument.open();
                    iframeDocument.write(lt + script + gt + 'document.F=Object' + lt + '/' + script + gt);
                    iframeDocument.close();
                    createDict = iframeDocument.F;
                    while (length--) delete createDict[PROTOTYPE][enumBugKeys[length]];
                    return createDict();
                };

// `Object.create` method
// https://tc39.github.io/ecma262/#sec-object.create
                module.exports = Object.create || function create(O, Properties) {
                    var result;
                    if (O !== null) {
                        Empty[PROTOTYPE] = anObject(O);
                        result = new Empty();
                        Empty[PROTOTYPE] = null;
                        // add "__proto__" for Object.getPrototypeOf polyfill
                        result[IE_PROTO] = O;
                    } else result = createDict();
                    return Properties === undefined ? result : defineProperties(result, Properties);
                };

                hiddenKeys[IE_PROTO] = true;


                /***/ }),
            /* 44 */
            /***/ (function(module, exports, __webpack_require__) {

                var defineProperty = __webpack_require__(24).f;
                var has = __webpack_require__(10);
                var wellKnownSymbol = __webpack_require__(5);

                var TO_STRING_TAG = wellKnownSymbol('toStringTag');

                module.exports = function (it, TAG, STATIC) {
                    if (it && !has(it = STATIC ? it : it.prototype, TO_STRING_TAG)) {
                        defineProperty(it, TO_STRING_TAG, { configurable: true, value: TAG });
                    }
                };


                /***/ }),
            /* 45 */
            /***/ (function(module, exports, __webpack_require__) {

                module.exports = __webpack_require__(4);


                /***/ }),
            /* 46 */
            /***/ (function(module, exports) {

                module.exports = {};


                /***/ }),
            /* 47 */
            /***/ (function(module, exports, __webpack_require__) {

                var shared = __webpack_require__(34);
                var uid = __webpack_require__(60);

                var keys = shared('keys');

                module.exports = function (key) {
                    return keys[key] || (keys[key] = uid(key));
                };


                /***/ }),
            /* 48 */
            /***/ (function(module, exports, __webpack_require__) {

                var global = __webpack_require__(4);
                var hide = __webpack_require__(9);

                module.exports = function (key, value) {
                    try {
                        hide(global, key, value);
                    } catch (error) {
                        global[key] = value;
                    } return value;
                };


                /***/ }),
            /* 49 */
            /***/ (function(module, exports, __webpack_require__) {

                var global = __webpack_require__(4);
                var isObject = __webpack_require__(16);

                var document = global.document;
// typeof document.createElement is 'object' in old IE
                var EXISTS = isObject(document) && isObject(document.createElement);

                module.exports = function (it) {
                    return EXISTS ? document.createElement(it) : {};
                };


                /***/ }),
            /* 50 */
            /***/ (function(module, exports) {

// IE8- don't enum bug keys
                module.exports = [
                    'constructor',
                    'hasOwnProperty',
                    'isPrototypeOf',
                    'propertyIsEnumerable',
                    'toLocaleString',
                    'toString',
                    'valueOf'
                ];


                /***/ }),
            /* 51 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(process) {

                    var utils = __webpack_require__(7);
                    var normalizeHeaderName = __webpack_require__(161);

                    var DEFAULT_CONTENT_TYPE = {
                        'Content-Type': 'application/x-www-form-urlencoded'
                    };

                    function setContentTypeIfUnset(headers, value) {
                        if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
                            headers['Content-Type'] = value;
                        }
                    }

                    function getDefaultAdapter() {
                        var adapter;
                        if (typeof XMLHttpRequest !== 'undefined') {
                            // For browsers use XHR adapter
                            adapter = __webpack_require__(78);
                        } else if (typeof process !== 'undefined') {
                            // For node use HTTP adapter
                            adapter = __webpack_require__(78);
                        }
                        return adapter;
                    }

                    var defaults = {
                        adapter: getDefaultAdapter(),

                        transformRequest: [function transformRequest(data, headers) {
                            normalizeHeaderName(headers, 'Content-Type');
                            if (utils.isFormData(data) ||
                                utils.isArrayBuffer(data) ||
                                utils.isBuffer(data) ||
                                utils.isStream(data) ||
                                utils.isFile(data) ||
                                utils.isBlob(data)
                            ) {
                                return data;
                            }
                            if (utils.isArrayBufferView(data)) {
                                return data.buffer;
                            }
                            if (utils.isURLSearchParams(data)) {
                                setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
                                return data.toString();
                            }
                            if (utils.isObject(data)) {
                                setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
                                return JSON.stringify(data);
                            }
                            return data;
                        }],

                        transformResponse: [function transformResponse(data) {
                            /*eslint no-param-reassign:0*/
                            if (typeof data === 'string') {
                                try {
                                    data = JSON.parse(data);
                                } catch (e) { /* Ignore */ }
                            }
                            return data;
                        }],

                        /**
                         * A timeout in milliseconds to abort a request. If set to 0 (default) a
                         * timeout is not created.
                         */
                        timeout: 0,

                        xsrfCookieName: 'XSRF-TOKEN',
                        xsrfHeaderName: 'X-XSRF-TOKEN',

                        maxContentLength: -1,

                        validateStatus: function validateStatus(status) {
                            return status >= 200 && status < 300;
                        }
                    };

                    defaults.headers = {
                        common: {
                            'Accept': 'application/json, text/plain, */*'
                        }
                    };

                    utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
                        defaults.headers[method] = {};
                    });

                    utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
                        defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
                    });

                    module.exports = defaults;

                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(77)))

                /***/ }),
            /* 52 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _class,_temp;var _preact=__webpack_require__(0);var _OptionRowForm=__webpack_require__(199);var _OptionRowForm2=_interopRequireDefault(_OptionRowForm);var _ItemsNotFoundForm=__webpack_require__(53);var _ItemsNotFoundForm2=_interopRequireDefault(_ItemsNotFoundForm);var _constants=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var RawDateContainer=(_temp=_class=function(_Component){_inherits(RawDateContainer,_Component);function RawDateContainer(props){_classCallCheck(this,RawDateContainer);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.checkDefaultOptionOnUpdate=function(){var _this$props=_this.props,options=_this$props.options,onSelectOption=_this$props.onSelectOption,exactDate=_this$props.exactDate;if(options&&options.length&&options.findIndex(function(o){return o.checked;})===-1){onSelectOption(options[0].identifier,exactDate);}};_this.checkDefaultOption=function(){var _this$props2=_this.props,options=_this$props2.options,onSelectOption=_this$props2.onSelectOption,exactDate=_this$props2.exactDate;if(options&&options.length&&options.findIndex(function(o){return o.checked;})===-1){onSelectOption(options[0].identifier,exactDate);}else if(options&&options.length&&options.findIndex(function(o){return o.checked;})>=0){onSelectOption(options.find(function(o){return o.checked;}).identifier,exactDate);}};return _this;}RawDateContainer.prototype.componentDidMount=function componentDidMount(){this.checkDefaultOption();};RawDateContainer.prototype.componentDidUpdate=function componentDidUpdate(){this.checkDefaultOptionOnUpdate();};RawDateContainer.prototype.render=function render(){var _props=this.props,options=_props.options,onSelectOption=_props.onSelectOption,exactDate=_props.exactDate,config=_props.config;var hasItems=options&&options.length>0;return h("form",{className:"options"},!hasItems&&h(_ItemsNotFoundForm2.default,{tab:_constants.TABS.DELIVERY}),h("ul",{className:"options__listing","aria-labelledby":"delivery-tab-title"},hasItems&&options.map(function(o){return h(_OptionRowForm2.default,{option:o,exactDate:exactDate,onSelectOption:onSelectOption,config:config});})));};return RawDateContainer;}(_preact.Component),_class.defaultProps={options:[]},_temp);exports.default=RawDateContainer;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 53 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _constants=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ItemsNotFoundForm=function(_Component){_inherits(ItemsNotFoundForm,_Component);function ItemsNotFoundForm(props){_classCallCheck(this,ItemsNotFoundForm);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.getTranslationKey=function(){var tab=_this.props.tab;switch(tab){case _constants.TABS.DELIVERY:return"shippingOptions.optionsNotFound";case _constants.TABS.STORE:return"pickupLocations.store.itemsNotFound";case _constants.TABS.PICKUP:return"pickupLocations.carrier.itemsNotFound";default:return"";}};return _this;}ItemsNotFoundForm.prototype.render=function render(){return h(_TextWrapper2.default,{id:this.getTranslationKey()});};return ItemsNotFoundForm;}(_preact.Component);exports.default=ItemsNotFoundForm;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 54 */
            /***/ (function(module, exports, __webpack_require__) {

                /**
                 * Copyright (c) 2013-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */

                if (true) {
                    var ReactIs = __webpack_require__(90);

                    // By explicitly using `prop-types` you are opting into new development behavior.
                    // http://fb.me/prop-types-in-prod
                    var throwOnDirectAccess = true;
                    module.exports = __webpack_require__(216)(ReactIs.isElement, throwOnDirectAccess);
                } else {
                    // By explicitly using `prop-types` you are opting into new production behavior.
                    // http://fb.me/prop-types-in-prod
                    module.exports = require('./factoryWithThrowingShims')();
                }


                /***/ }),
            /* 55 */
            /***/ (function(module, exports, __webpack_require__) {

                var toInteger = __webpack_require__(42);

                var min = Math.min;

// `ToLength` abstract operation
// https://tc39.github.io/ecma262/#sec-tolength
                module.exports = function (argument) {
                    return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
                };


                /***/ }),
            /* 56 */
            /***/ (function(module, exports, __webpack_require__) {

                var aFunction = __webpack_require__(18);

// optional / simple context binding
                module.exports = function (fn, that, length) {
                    aFunction(fn);
                    if (that === undefined) return fn;
                    switch (length) {
                        case 0: return function () {
                            return fn.call(that);
                        };
                        case 1: return function (a) {
                            return fn.call(that, a);
                        };
                        case 2: return function (a, b) {
                            return fn.call(that, a, b);
                        };
                        case 3: return function (a, b, c) {
                            return fn.call(that, a, b, c);
                        };
                    }
                    return function (/* ...args */) {
                        return fn.apply(that, arguments);
                    };
                };


                /***/ }),
            /* 57 */
            /***/ (function(module, exports, __webpack_require__) {

                var anObject = __webpack_require__(8);
                var aFunction = __webpack_require__(18);
                var wellKnownSymbol = __webpack_require__(5);

                var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.github.io/ecma262/#sec-speciesconstructor
                module.exports = function (O, defaultConstructor) {
                    var C = anObject(O).constructor;
                    var S;
                    return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
                };


                /***/ }),
            /* 58 */
            /***/ (function(module, exports, __webpack_require__) {

                var isObject = __webpack_require__(16);

// `ToPrimitive` abstract operation
// https://tc39.github.io/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
                module.exports = function (input, PREFERRED_STRING) {
                    if (!isObject(input)) return input;
                    var fn, val;
                    if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
                    if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
                    if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
                    throw TypeError("Can't convert object to primitive value");
                };


                /***/ }),
            /* 59 */
            /***/ (function(module, exports, __webpack_require__) {

                var anObject = __webpack_require__(8);
                var aPossiblePrototype = __webpack_require__(125);

// `Object.setPrototypeOf` method
// https://tc39.github.io/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
                /* eslint-disable no-proto */
                module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
                    var CORRECT_SETTER = false;
                    var test = {};
                    var setter;
                    try {
                        setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
                        setter.call(test, []);
                        CORRECT_SETTER = test instanceof Array;
                    } catch (error) { /* empty */ }
                    return function setPrototypeOf(O, proto) {
                        anObject(O);
                        aPossiblePrototype(proto);
                        if (CORRECT_SETTER) setter.call(O, proto);
                        else O.__proto__ = proto;
                        return O;
                    };
                }() : undefined);


                /***/ }),
            /* 60 */
            /***/ (function(module, exports) {

                var id = 0;
                var postfix = Math.random();

                module.exports = function (key) {
                    return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
                };


                /***/ }),
            /* 61 */
            /***/ (function(module, exports, __webpack_require__) {

                var classofRaw = __webpack_require__(25);
                var wellKnownSymbol = __webpack_require__(5);

                var TO_STRING_TAG = wellKnownSymbol('toStringTag');
// ES3 wrong here
                var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
                var tryGet = function (it, key) {
                    try {
                        return it[key];
                    } catch (error) { /* empty */ }
                };

// getting tag from ES6+ `Object.prototype.toString`
                module.exports = function (it) {
                    var O, tag, result;
                    return it === undefined ? 'Undefined' : it === null ? 'Null'
                        // @@toStringTag case
                        : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
                            // builtinTag case
                            : CORRECT_ARGUMENTS ? classofRaw(O)
                                // ES3 arguments fallback
                                : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
                };


                /***/ }),
            /* 62 */
            /***/ (function(module, exports, __webpack_require__) {

                var fails = __webpack_require__(15);

                var replacement = /#|\.prototype\./;

                var isForced = function (feature, detection) {
                    var value = data[normalize(feature)];
                    return value == POLYFILL ? true
                        : value == NATIVE ? false
                            : typeof detection == 'function' ? fails(detection)
                                : !!detection;
                };

                var normalize = isForced.normalize = function (string) {
                    return String(string).replace(replacement, '.').toLowerCase();
                };

                var data = isForced.data = {};
                var NATIVE = isForced.NATIVE = 'N';
                var POLYFILL = isForced.POLYFILL = 'P';

                module.exports = isForced;


                /***/ }),
            /* 63 */
            /***/ (function(module, exports, __webpack_require__) {

                var getBuiltIn = __webpack_require__(20);

                module.exports = getBuiltIn('navigator', 'userAgent') || '';


                /***/ }),
            /* 64 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var $ = __webpack_require__(14);
                var createIteratorConstructor = __webpack_require__(109);
                var getPrototypeOf = __webpack_require__(41);
                var setPrototypeOf = __webpack_require__(59);
                var setToStringTag = __webpack_require__(44);
                var hide = __webpack_require__(9);
                var redefine = __webpack_require__(21);
                var wellKnownSymbol = __webpack_require__(5);
                var IS_PURE = __webpack_require__(23);
                var Iterators = __webpack_require__(26);
                var IteratorsCore = __webpack_require__(71);

                var IteratorPrototype = IteratorsCore.IteratorPrototype;
                var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
                var ITERATOR = wellKnownSymbol('iterator');
                var KEYS = 'keys';
                var VALUES = 'values';
                var ENTRIES = 'entries';

                var returnThis = function () { return this; };

                module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
                    createIteratorConstructor(IteratorConstructor, NAME, next);

                    var getIterationMethod = function (KIND) {
                        if (KIND === DEFAULT && defaultIterator) return defaultIterator;
                        if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
                        switch (KIND) {
                            case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
                            case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
                            case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
                        } return function () { return new IteratorConstructor(this); };
                    };

                    var TO_STRING_TAG = NAME + ' Iterator';
                    var INCORRECT_VALUES_NAME = false;
                    var IterablePrototype = Iterable.prototype;
                    var nativeIterator = IterablePrototype[ITERATOR]
                        || IterablePrototype['@@iterator']
                        || DEFAULT && IterablePrototype[DEFAULT];
                    var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
                    var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
                    var CurrentIteratorPrototype, methods, KEY;

                    // fix native
                    if (anyNativeIterator) {
                        CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
                        if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
                            if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
                                if (setPrototypeOf) {
                                    setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
                                } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
                                    hide(CurrentIteratorPrototype, ITERATOR, returnThis);
                                }
                            }
                            // Set @@toStringTag to native iterators
                            setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
                            if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
                        }
                    }

                    // fix Array#{values, @@iterator}.name in V8 / FF
                    if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
                        INCORRECT_VALUES_NAME = true;
                        defaultIterator = function values() { return nativeIterator.call(this); };
                    }

                    // define iterator
                    if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
                        hide(IterablePrototype, ITERATOR, defaultIterator);
                    }
                    Iterators[NAME] = defaultIterator;

                    // export additional methods
                    if (DEFAULT) {
                        methods = {
                            values: getIterationMethod(VALUES),
                            keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
                            entries: getIterationMethod(ENTRIES)
                        };
                        if (FORCED) for (KEY in methods) {
                            if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
                                redefine(IterablePrototype, KEY, methods[KEY]);
                            }
                        } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
                    }

                    return methods;
                };


                /***/ }),
            /* 65 */
            /***/ (function(module, exports, __webpack_require__) {

                var global = __webpack_require__(4);
                var fails = __webpack_require__(15);
                var classof = __webpack_require__(25);
                var bind = __webpack_require__(56);
                var html = __webpack_require__(72);
                var createElement = __webpack_require__(49);

                var location = global.location;
                var set = global.setImmediate;
                var clear = global.clearImmediate;
                var process = global.process;
                var MessageChannel = global.MessageChannel;
                var Dispatch = global.Dispatch;
                var counter = 0;
                var queue = {};
                var ONREADYSTATECHANGE = 'onreadystatechange';
                var defer, channel, port;

                var run = function (id) {
                    // eslint-disable-next-line no-prototype-builtins
                    if (queue.hasOwnProperty(id)) {
                        var fn = queue[id];
                        delete queue[id];
                        fn();
                    }
                };

                var runner = function (id) {
                    return function () {
                        run(id);
                    };
                };

                var listener = function (event) {
                    run(event.data);
                };

                var post = function (id) {
                    // old engines have not location.origin
                    global.postMessage(id + '', location.protocol + '//' + location.host);
                };

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
                if (!set || !clear) {
                    set = function setImmediate(fn) {
                        var args = [];
                        var i = 1;
                        while (arguments.length > i) args.push(arguments[i++]);
                        queue[++counter] = function () {
                            // eslint-disable-next-line no-new-func
                            (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
                        };
                        defer(counter);
                        return counter;
                    };
                    clear = function clearImmediate(id) {
                        delete queue[id];
                    };
                    // Node.js 0.8-
                    if (classof(process) == 'process') {
                        defer = function (id) {
                            process.nextTick(runner(id));
                        };
                        // Sphere (JS game engine) Dispatch API
                    } else if (Dispatch && Dispatch.now) {
                        defer = function (id) {
                            Dispatch.now(runner(id));
                        };
                        // Browsers with MessageChannel, includes WebWorkers
                    } else if (MessageChannel) {
                        channel = new MessageChannel();
                        port = channel.port2;
                        channel.port1.onmessage = listener;
                        defer = bind(port.postMessage, port, 1);
                        // Browsers with postMessage, skip WebWorkers
                        // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
                    } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts && !fails(post)) {
                        defer = post;
                        global.addEventListener('message', listener, false);
                        // IE8-
                    } else if (ONREADYSTATECHANGE in createElement('script')) {
                        defer = function (id) {
                            html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
                                html.removeChild(this);
                                run(id);
                            };
                        };
                        // Rest old browsers
                    } else {
                        defer = function (id) {
                            setTimeout(runner(id), 0);
                        };
                    }
                }

                module.exports = {
                    set: set,
                    clear: clear
                };


                /***/ }),
            /* 66 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var $ = __webpack_require__(14);
                var aFunction = __webpack_require__(18);
                var newPromiseCapabilityModule = __webpack_require__(27);
                var perform = __webpack_require__(35);
                var iterate = __webpack_require__(30);

// `Promise.allSettled` method
// https://github.com/tc39/proposal-promise-allSettled
                $({ target: 'Promise', stat: true }, {
                    allSettled: function allSettled(iterable) {
                        var C = this;
                        var capability = newPromiseCapabilityModule.f(C);
                        var resolve = capability.resolve;
                        var reject = capability.reject;
                        var result = perform(function () {
                            var promiseResolve = aFunction(C.resolve);
                            var values = [];
                            var counter = 0;
                            var remaining = 1;
                            iterate(iterable, function (promise) {
                                var index = counter++;
                                var alreadyCalled = false;
                                values.push(undefined);
                                remaining++;
                                promiseResolve.call(C, promise).then(function (value) {
                                    if (alreadyCalled) return;
                                    alreadyCalled = true;
                                    values[index] = { status: 'fulfilled', value: value };
                                    --remaining || resolve(values);
                                }, function (e) {
                                    if (alreadyCalled) return;
                                    alreadyCalled = true;
                                    values[index] = { status: 'rejected', reason: e };
                                    --remaining || resolve(values);
                                });
                            });
                            --remaining || resolve(values);
                        });
                        if (result.error) reject(result.value);
                        return capability.promise;
                    }
                });


                /***/ }),
            /* 67 */
            /***/ (function(module, exports) {

                var g;

// This works in non-strict mode
                g = (function() {
                    return this;
                })();

                try {
                    // This works if eval is allowed (see CSP)
                    g = g || Function("return this")() || (1,eval)("this");
                } catch(e) {
                    // This works if the window reference is available
                    if(typeof window === "object")
                        g = window;
                }

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

                module.exports = g;


                /***/ }),
            /* 68 */
            /***/ (function(module, exports, __webpack_require__) {

                var DESCRIPTORS = __webpack_require__(19);
                var fails = __webpack_require__(15);
                var createElement = __webpack_require__(49);

// Thank's IE8 for his funny defineProperty
                module.exports = !DESCRIPTORS && !fails(function () {
                    return Object.defineProperty(createElement('div'), 'a', {
                        get: function () { return 7; }
                    }).a != 7;
                });


                /***/ }),
            /* 69 */
            /***/ (function(module, exports, __webpack_require__) {

                var shared = __webpack_require__(34);

                module.exports = shared('native-function-to-string', Function.toString);


                /***/ }),
            /* 70 */
            /***/ (function(module, exports, __webpack_require__) {

                var has = __webpack_require__(10);
                var toIndexedObject = __webpack_require__(32);
                var indexOf = __webpack_require__(108).indexOf;
                var hiddenKeys = __webpack_require__(46);

                module.exports = function (object, names) {
                    var O = toIndexedObject(object);
                    var i = 0;
                    var result = [];
                    var key;
                    for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key);
                    // Don't enum bug & hidden keys
                    while (names.length > i) if (has(O, key = names[i++])) {
                        ~indexOf(result, key) || result.push(key);
                    }
                    return result;
                };


                /***/ }),
            /* 71 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var getPrototypeOf = __webpack_require__(41);
                var hide = __webpack_require__(9);
                var has = __webpack_require__(10);
                var wellKnownSymbol = __webpack_require__(5);
                var IS_PURE = __webpack_require__(23);

                var ITERATOR = wellKnownSymbol('iterator');
                var BUGGY_SAFARI_ITERATORS = false;

                var returnThis = function () { return this; };

// `%IteratorPrototype%` object
// https://tc39.github.io/ecma262/#sec-%iteratorprototype%-object
                var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

                if ([].keys) {
                    arrayIterator = [].keys();
                    // Safari 8 has buggy iterators w/o `next`
                    if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
                    else {
                        PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
                        if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
                    }
                }

                if (IteratorPrototype == undefined) IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
                if (!IS_PURE && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);

                module.exports = {
                    IteratorPrototype: IteratorPrototype,
                    BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
                };


                /***/ }),
            /* 72 */
            /***/ (function(module, exports, __webpack_require__) {

                var getBuiltIn = __webpack_require__(20);

                module.exports = getBuiltIn('document', 'documentElement');


                /***/ }),
            /* 73 */
            /***/ (function(module, exports, __webpack_require__) {

                var global = __webpack_require__(4);

                module.exports = global.Promise;


                /***/ }),
            /* 74 */
            /***/ (function(module, exports, __webpack_require__) {

                var anObject = __webpack_require__(8);
                var isObject = __webpack_require__(16);
                var newPromiseCapability = __webpack_require__(27);

                module.exports = function (C, x) {
                    anObject(C);
                    if (isObject(x) && x.constructor === C) return x;
                    var promiseCapability = newPromiseCapability.f(C);
                    var resolve = promiseCapability.resolve;
                    resolve(x);
                    return promiseCapability.promise;
                };


                /***/ }),
            /* 75 */
            /***/ (function(module, exports, __webpack_require__) {

                var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
                ( function( global, factory ) {

                    "use strict";

                    if ( typeof module === "object" && typeof module.exports === "object" ) {

                        // For CommonJS and CommonJS-like environments where a proper `window`
                        // is present, execute the factory and get jQuery.
                        // For environments that do not have a `window` with a `document`
                        // (such as Node.js), expose a factory as module.exports.
                        // This accentuates the need for the creation of a real `window`.
                        // e.g. var jQuery = require("jquery")(window);
                        // See ticket #14549 for more info.
                        module.exports = global.document ?
                            factory( global, true ) :
                            function( w ) {
                                if ( !w.document ) {
                                    throw new Error( "jQuery requires a window with a document" );
                                }
                                return factory( w );
                            };
                    } else {
                        factory( global );
                    }

// Pass this if window is not defined yet
                } )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
                    "use strict";

                    var arr = [];

                    var document = window.document;

                    var getProto = Object.getPrototypeOf;

                    var slice = arr.slice;

                    var concat = arr.concat;

                    var push = arr.push;

                    var indexOf = arr.indexOf;

                    var class2type = {};

                    var toString = class2type.toString;

                    var hasOwn = class2type.hasOwnProperty;

                    var fnToString = hasOwn.toString;

                    var ObjectFunctionString = fnToString.call( Object );

                    var support = {};

                    var isFunction = function isFunction( obj ) {

                        // Support: Chrome <=57, Firefox <=52
                        // In some browsers, typeof returns "function" for HTML <object> elements
                        // (i.e., `typeof document.createElement( "object" ) === "function"`).
                        // We don't want to classify *any* DOM node as a function.
                        return typeof obj === "function" && typeof obj.nodeType !== "number";
                    };


                    var isWindow = function isWindow( obj ) {
                        return obj != null && obj === obj.window;
                    };




                    var preservedScriptAttributes = {
                        type: true,
                        src: true,
                        noModule: true
                    };

                    function DOMEval( code, doc, node ) {
                        doc = doc || document;

                        var i,
                            script = doc.createElement( "script" );

                        script.text = code;
                        if ( node ) {
                            for ( i in preservedScriptAttributes ) {
                                if ( node[ i ] ) {
                                    script[ i ] = node[ i ];
                                }
                            }
                        }
                        doc.head.appendChild( script ).parentNode.removeChild( script );
                    }


                    function toType( obj ) {
                        if ( obj == null ) {
                            return obj + "";
                        }

                        // Support: Android <=2.3 only (functionish RegExp)
                        return typeof obj === "object" || typeof obj === "function" ?
                            class2type[ toString.call( obj ) ] || "object" :
                            typeof obj;
                    }
                    /* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



                    var
                        version = "3.3.1",

                        // Define a local copy of jQuery
                        jQuery = function( selector, context ) {

                            // The jQuery object is actually just the init constructor 'enhanced'
                            // Need init if jQuery is called (just allow error to be thrown if not included)
                            return new jQuery.fn.init( selector, context );
                        },

                        // Support: Android <=4.0 only
                        // Make sure we trim BOM and NBSP
                        rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

                    jQuery.fn = jQuery.prototype = {

                        // The current version of jQuery being used
                        jquery: version,

                        constructor: jQuery,

                        // The default length of a jQuery object is 0
                        length: 0,

                        toArray: function() {
                            return slice.call( this );
                        },

                        // Get the Nth element in the matched element set OR
                        // Get the whole matched element set as a clean array
                        get: function( num ) {

                            // Return all the elements in a clean array
                            if ( num == null ) {
                                return slice.call( this );
                            }

                            // Return just the one element from the set
                            return num < 0 ? this[ num + this.length ] : this[ num ];
                        },

                        // Take an array of elements and push it onto the stack
                        // (returning the new matched element set)
                        pushStack: function( elems ) {

                            // Build a new jQuery matched element set
                            var ret = jQuery.merge( this.constructor(), elems );

                            // Add the old object onto the stack (as a reference)
                            ret.prevObject = this;

                            // Return the newly-formed element set
                            return ret;
                        },

                        // Execute a callback for every element in the matched set.
                        each: function( callback ) {
                            return jQuery.each( this, callback );
                        },

                        map: function( callback ) {
                            return this.pushStack( jQuery.map( this, function( elem, i ) {
                                return callback.call( elem, i, elem );
                            } ) );
                        },

                        slice: function() {
                            return this.pushStack( slice.apply( this, arguments ) );
                        },

                        first: function() {
                            return this.eq( 0 );
                        },

                        last: function() {
                            return this.eq( -1 );
                        },

                        eq: function( i ) {
                            var len = this.length,
                                j = +i + ( i < 0 ? len : 0 );
                            return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
                        },

                        end: function() {
                            return this.prevObject || this.constructor();
                        },

                        // For internal use only.
                        // Behaves like an Array's method, not like a jQuery method.
                        push: push,
                        sort: arr.sort,
                        splice: arr.splice
                    };

                    jQuery.extend = jQuery.fn.extend = function() {
                        var options, name, src, copy, copyIsArray, clone,
                            target = arguments[ 0 ] || {},
                            i = 1,
                            length = arguments.length,
                            deep = false;

                        // Handle a deep copy situation
                        if ( typeof target === "boolean" ) {
                            deep = target;

                            // Skip the boolean and the target
                            target = arguments[ i ] || {};
                            i++;
                        }

                        // Handle case when target is a string or something (possible in deep copy)
                        if ( typeof target !== "object" && !isFunction( target ) ) {
                            target = {};
                        }

                        // Extend jQuery itself if only one argument is passed
                        if ( i === length ) {
                            target = this;
                            i--;
                        }

                        for ( ; i < length; i++ ) {

                            // Only deal with non-null/undefined values
                            if ( ( options = arguments[ i ] ) != null ) {

                                // Extend the base object
                                for ( name in options ) {
                                    src = target[ name ];
                                    copy = options[ name ];

                                    // Prevent never-ending loop
                                    if ( target === copy ) {
                                        continue;
                                    }

                                    // Recurse if we're merging plain objects or arrays
                                    if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
                                        ( copyIsArray = Array.isArray( copy ) ) ) ) {

                                        if ( copyIsArray ) {
                                            copyIsArray = false;
                                            clone = src && Array.isArray( src ) ? src : [];

                                        } else {
                                            clone = src && jQuery.isPlainObject( src ) ? src : {};
                                        }

                                        // Never move original objects, clone them
                                        target[ name ] = jQuery.extend( deep, clone, copy );

                                        // Don't bring in undefined values
                                    } else if ( copy !== undefined ) {
                                        target[ name ] = copy;
                                    }
                                }
                            }
                        }

                        // Return the modified object
                        return target;
                    };

                    jQuery.extend( {

                        // Unique for each copy of jQuery on the page
                        expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

                        // Assume jQuery is ready without the ready module
                        isReady: true,

                        error: function( msg ) {
                            throw new Error( msg );
                        },

                        noop: function() {},

                        isPlainObject: function( obj ) {
                            var proto, Ctor;

                            // Detect obvious negatives
                            // Use toString instead of jQuery.type to catch host objects
                            if ( !obj || toString.call( obj ) !== "[object Object]" ) {
                                return false;
                            }

                            proto = getProto( obj );

                            // Objects with no prototype (e.g., `Object.create( null )`) are plain
                            if ( !proto ) {
                                return true;
                            }

                            // Objects with prototype are plain iff they were constructed by a global Object function
                            Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
                            return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
                        },

                        isEmptyObject: function( obj ) {

                            /* eslint-disable no-unused-vars */
                            // See https://github.com/eslint/eslint/issues/6125
                            var name;

                            for ( name in obj ) {
                                return false;
                            }
                            return true;
                        },

                        // Evaluates a script in a global context
                        globalEval: function( code ) {
                            DOMEval( code );
                        },

                        each: function( obj, callback ) {
                            var length, i = 0;

                            if ( isArrayLike( obj ) ) {
                                length = obj.length;
                                for ( ; i < length; i++ ) {
                                    if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
                                        break;
                                    }
                                }
                            } else {
                                for ( i in obj ) {
                                    if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
                                        break;
                                    }
                                }
                            }

                            return obj;
                        },

                        // Support: Android <=4.0 only
                        trim: function( text ) {
                            return text == null ?
                                "" :
                                ( text + "" ).replace( rtrim, "" );
                        },

                        // results is for internal usage only
                        makeArray: function( arr, results ) {
                            var ret = results || [];

                            if ( arr != null ) {
                                if ( isArrayLike( Object( arr ) ) ) {
                                    jQuery.merge( ret,
                                        typeof arr === "string" ?
                                            [ arr ] : arr
                                    );
                                } else {
                                    push.call( ret, arr );
                                }
                            }

                            return ret;
                        },

                        inArray: function( elem, arr, i ) {
                            return arr == null ? -1 : indexOf.call( arr, elem, i );
                        },

                        // Support: Android <=4.0 only, PhantomJS 1 only
                        // push.apply(_, arraylike) throws on ancient WebKit
                        merge: function( first, second ) {
                            var len = +second.length,
                                j = 0,
                                i = first.length;

                            for ( ; j < len; j++ ) {
                                first[ i++ ] = second[ j ];
                            }

                            first.length = i;

                            return first;
                        },

                        grep: function( elems, callback, invert ) {
                            var callbackInverse,
                                matches = [],
                                i = 0,
                                length = elems.length,
                                callbackExpect = !invert;

                            // Go through the array, only saving the items
                            // that pass the validator function
                            for ( ; i < length; i++ ) {
                                callbackInverse = !callback( elems[ i ], i );
                                if ( callbackInverse !== callbackExpect ) {
                                    matches.push( elems[ i ] );
                                }
                            }

                            return matches;
                        },

                        // arg is for internal usage only
                        map: function( elems, callback, arg ) {
                            var length, value,
                                i = 0,
                                ret = [];

                            // Go through the array, translating each of the items to their new values
                            if ( isArrayLike( elems ) ) {
                                length = elems.length;
                                for ( ; i < length; i++ ) {
                                    value = callback( elems[ i ], i, arg );

                                    if ( value != null ) {
                                        ret.push( value );
                                    }
                                }

                                // Go through every key on the object,
                            } else {
                                for ( i in elems ) {
                                    value = callback( elems[ i ], i, arg );

                                    if ( value != null ) {
                                        ret.push( value );
                                    }
                                }
                            }

                            // Flatten any nested arrays
                            return concat.apply( [], ret );
                        },

                        // A global GUID counter for objects
                        guid: 1,

                        // jQuery.support is not used in Core but other projects attach their
                        // properties to it so it needs to exist.
                        support: support
                    } );

                    if ( typeof Symbol === "function" ) {
                        jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
                    }

// Populate the class2type map
                    jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
                        function( i, name ) {
                            class2type[ "[object " + name + "]" ] = name.toLowerCase();
                        } );

                    function isArrayLike( obj ) {

                        // Support: real iOS 8.2 only (not reproducible in simulator)
                        // `in` check used to prevent JIT error (gh-2145)
                        // hasOwn isn't used here due to false negatives
                        // regarding Nodelist length in IE
                        var length = !!obj && "length" in obj && obj.length,
                            type = toType( obj );

                        if ( isFunction( obj ) || isWindow( obj ) ) {
                            return false;
                        }

                        return type === "array" || length === 0 ||
                            typeof length === "number" && length > 0 && ( length - 1 ) in obj;
                    }
                    var Sizzle =
                        /*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
                        (function( window ) {

                            var i,
                                support,
                                Expr,
                                getText,
                                isXML,
                                tokenize,
                                compile,
                                select,
                                outermostContext,
                                sortInput,
                                hasDuplicate,

                                // Local document vars
                                setDocument,
                                document,
                                docElem,
                                documentIsHTML,
                                rbuggyQSA,
                                rbuggyMatches,
                                matches,
                                contains,

                                // Instance-specific data
                                expando = "sizzle" + 1 * new Date(),
                                preferredDoc = window.document,
                                dirruns = 0,
                                done = 0,
                                classCache = createCache(),
                                tokenCache = createCache(),
                                compilerCache = createCache(),
                                sortOrder = function( a, b ) {
                                    if ( a === b ) {
                                        hasDuplicate = true;
                                    }
                                    return 0;
                                },

                                // Instance methods
                                hasOwn = ({}).hasOwnProperty,
                                arr = [],
                                pop = arr.pop,
                                push_native = arr.push,
                                push = arr.push,
                                slice = arr.slice,
                                // Use a stripped-down indexOf as it's faster than native
                                // https://jsperf.com/thor-indexof-vs-for/5
                                indexOf = function( list, elem ) {
                                    var i = 0,
                                        len = list.length;
                                    for ( ; i < len; i++ ) {
                                        if ( list[i] === elem ) {
                                            return i;
                                        }
                                    }
                                    return -1;
                                },

                                booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

                                // Regular expressions

                                // http://www.w3.org/TR/css3-selectors/#whitespace
                                whitespace = "[\\x20\\t\\r\\n\\f]",

                                // http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
                                identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

                                // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
                                attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
                                    // Operator (capture 2)
                                    "*([*^$|!~]?=)" + whitespace +
                                    // "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
                                    "*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
                                    "*\\]",

                                pseudos = ":(" + identifier + ")(?:\\((" +
                                    // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
                                    // 1. quoted (capture 3; capture 4 or capture 5)
                                    "('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
                                    // 2. simple (capture 6)
                                    "((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
                                    // 3. anything else (capture 2)
                                    ".*" +
                                    ")\\)|)",

                                // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
                                rwhitespace = new RegExp( whitespace + "+", "g" ),
                                rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

                                rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
                                rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

                                rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

                                rpseudo = new RegExp( pseudos ),
                                ridentifier = new RegExp( "^" + identifier + "$" ),

                                matchExpr = {
                                    "ID": new RegExp( "^#(" + identifier + ")" ),
                                    "CLASS": new RegExp( "^\\.(" + identifier + ")" ),
                                    "TAG": new RegExp( "^(" + identifier + "|[*])" ),
                                    "ATTR": new RegExp( "^" + attributes ),
                                    "PSEUDO": new RegExp( "^" + pseudos ),
                                    "CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
                                        "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
                                        "*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
                                    "bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
                                    // For use in libraries implementing .is()
                                    // We use this for POS matching in `select`
                                    "needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
                                        whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
                                },

                                rinputs = /^(?:input|select|textarea|button)$/i,
                                rheader = /^h\d$/i,

                                rnative = /^[^{]+\{\s*\[native \w/,

                                // Easily-parseable/retrievable ID or TAG or CLASS selectors
                                rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

                                rsibling = /[+~]/,

                                // CSS escapes
                                // http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
                                runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
                                funescape = function( _, escaped, escapedWhitespace ) {
                                    var high = "0x" + escaped - 0x10000;
                                    // NaN means non-codepoint
                                    // Support: Firefox<24
                                    // Workaround erroneous numeric interpretation of +"0x"
                                    return high !== high || escapedWhitespace ?
                                        escaped :
                                        high < 0 ?
                                            // BMP codepoint
                                            String.fromCharCode( high + 0x10000 ) :
                                            // Supplemental Plane codepoint (surrogate pair)
                                            String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
                                },

                                // CSS string/identifier serialization
                                // https://drafts.csswg.org/cssom/#common-serializing-idioms
                                rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
                                fcssescape = function( ch, asCodePoint ) {
                                    if ( asCodePoint ) {

                                        // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
                                        if ( ch === "\0" ) {
                                            return "\uFFFD";
                                        }

                                        // Control characters and (dependent upon position) numbers get escaped as code points
                                        return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
                                    }

                                    // Other potentially-special ASCII characters get backslash-escaped
                                    return "\\" + ch;
                                },

                                // Used for iframes
                                // See setDocument()
                                // Removing the function wrapper causes a "Permission Denied"
                                // error in IE
                                unloadHandler = function() {
                                    setDocument();
                                },

                                disabledAncestor = addCombinator(
                                    function( elem ) {
                                        return elem.disabled === true && ("form" in elem || "label" in elem);
                                    },
                                    { dir: "parentNode", next: "legend" }
                                );

// Optimize for push.apply( _, NodeList )
                            try {
                                push.apply(
                                    (arr = slice.call( preferredDoc.childNodes )),
                                    preferredDoc.childNodes
                                );
                                // Support: Android<4.0
                                // Detect silently failing push.apply
                                arr[ preferredDoc.childNodes.length ].nodeType;
                            } catch ( e ) {
                                push = { apply: arr.length ?

                                        // Leverage slice if possible
                                        function( target, els ) {
                                            push_native.apply( target, slice.call(els) );
                                        } :

                                        // Support: IE<9
                                        // Otherwise append directly
                                        function( target, els ) {
                                            var j = target.length,
                                                i = 0;
                                            // Can't trust NodeList.length
                                            while ( (target[j++] = els[i++]) ) {}
                                            target.length = j - 1;
                                        }
                                };
                            }

                            function Sizzle( selector, context, results, seed ) {
                                var m, i, elem, nid, match, groups, newSelector,
                                    newContext = context && context.ownerDocument,

                                    // nodeType defaults to 9, since context defaults to document
                                    nodeType = context ? context.nodeType : 9;

                                results = results || [];

                                // Return early from calls with invalid selector or context
                                if ( typeof selector !== "string" || !selector ||
                                    nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

                                    return results;
                                }

                                // Try to shortcut find operations (as opposed to filters) in HTML documents
                                if ( !seed ) {

                                    if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
                                        setDocument( context );
                                    }
                                    context = context || document;

                                    if ( documentIsHTML ) {

                                        // If the selector is sufficiently simple, try using a "get*By*" DOM method
                                        // (excepting DocumentFragment context, where the methods don't exist)
                                        if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

                                            // ID selector
                                            if ( (m = match[1]) ) {

                                                // Document context
                                                if ( nodeType === 9 ) {
                                                    if ( (elem = context.getElementById( m )) ) {

                                                        // Support: IE, Opera, Webkit
                                                        // TODO: identify versions
                                                        // getElementById can match elements by name instead of ID
                                                        if ( elem.id === m ) {
                                                            results.push( elem );
                                                            return results;
                                                        }
                                                    } else {
                                                        return results;
                                                    }

                                                    // Element context
                                                } else {

                                                    // Support: IE, Opera, Webkit
                                                    // TODO: identify versions
                                                    // getElementById can match elements by name instead of ID
                                                    if ( newContext && (elem = newContext.getElementById( m )) &&
                                                        contains( context, elem ) &&
                                                        elem.id === m ) {

                                                        results.push( elem );
                                                        return results;
                                                    }
                                                }

                                                // Type selector
                                            } else if ( match[2] ) {
                                                push.apply( results, context.getElementsByTagName( selector ) );
                                                return results;

                                                // Class selector
                                            } else if ( (m = match[3]) && support.getElementsByClassName &&
                                                context.getElementsByClassName ) {

                                                push.apply( results, context.getElementsByClassName( m ) );
                                                return results;
                                            }
                                        }

                                        // Take advantage of querySelectorAll
                                        if ( support.qsa &&
                                            !compilerCache[ selector + " " ] &&
                                            (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

                                            if ( nodeType !== 1 ) {
                                                newContext = context;
                                                newSelector = selector;

                                                // qSA looks outside Element context, which is not what we want
                                                // Thanks to Andrew Dupont for this workaround technique
                                                // Support: IE <=8
                                                // Exclude object elements
                                            } else if ( context.nodeName.toLowerCase() !== "object" ) {

                                                // Capture the context ID, setting it first if necessary
                                                if ( (nid = context.getAttribute( "id" )) ) {
                                                    nid = nid.replace( rcssescape, fcssescape );
                                                } else {
                                                    context.setAttribute( "id", (nid = expando) );
                                                }

                                                // Prefix every selector in the list
                                                groups = tokenize( selector );
                                                i = groups.length;
                                                while ( i-- ) {
                                                    groups[i] = "#" + nid + " " + toSelector( groups[i] );
                                                }
                                                newSelector = groups.join( "," );

                                                // Expand context for sibling selectors
                                                newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
                                                    context;
                                            }

                                            if ( newSelector ) {
                                                try {
                                                    push.apply( results,
                                                        newContext.querySelectorAll( newSelector )
                                                    );
                                                    return results;
                                                } catch ( qsaError ) {
                                                } finally {
                                                    if ( nid === expando ) {
                                                        context.removeAttribute( "id" );
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }

                                // All others
                                return select( selector.replace( rtrim, "$1" ), context, results, seed );
                            }

                            /**
                             * Create key-value caches of limited size
                             * @returns {function(string, object)} Returns the Object data after storing it on itself with
                             *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
                             *	deleting the oldest entry
                             */
                            function createCache() {
                                var keys = [];

                                function cache( key, value ) {
                                    // Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
                                    if ( keys.push( key + " " ) > Expr.cacheLength ) {
                                        // Only keep the most recent entries
                                        delete cache[ keys.shift() ];
                                    }
                                    return (cache[ key + " " ] = value);
                                }
                                return cache;
                            }

                            /**
                             * Mark a function for special use by Sizzle
                             * @param {Function} fn The function to mark
                             */
                            function markFunction( fn ) {
                                fn[ expando ] = true;
                                return fn;
                            }

                            /**
                             * Support testing using an element
                             * @param {Function} fn Passed the created element and returns a boolean result
                             */
                            function assert( fn ) {
                                var el = document.createElement("fieldset");

                                try {
                                    return !!fn( el );
                                } catch (e) {
                                    return false;
                                } finally {
                                    // Remove from its parent by default
                                    if ( el.parentNode ) {
                                        el.parentNode.removeChild( el );
                                    }
                                    // release memory in IE
                                    el = null;
                                }
                            }

                            /**
                             * Adds the same handler for all of the specified attrs
                             * @param {String} attrs Pipe-separated list of attributes
                             * @param {Function} handler The method that will be applied
                             */
                            function addHandle( attrs, handler ) {
                                var arr = attrs.split("|"),
                                    i = arr.length;

                                while ( i-- ) {
                                    Expr.attrHandle[ arr[i] ] = handler;
                                }
                            }

                            /**
                             * Checks document order of two siblings
                             * @param {Element} a
                             * @param {Element} b
                             * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
                             */
                            function siblingCheck( a, b ) {
                                var cur = b && a,
                                    diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
                                        a.sourceIndex - b.sourceIndex;

                                // Use IE sourceIndex if available on both nodes
                                if ( diff ) {
                                    return diff;
                                }

                                // Check if b follows a
                                if ( cur ) {
                                    while ( (cur = cur.nextSibling) ) {
                                        if ( cur === b ) {
                                            return -1;
                                        }
                                    }
                                }

                                return a ? 1 : -1;
                            }

                            /**
                             * Returns a function to use in pseudos for input types
                             * @param {String} type
                             */
                            function createInputPseudo( type ) {
                                return function( elem ) {
                                    var name = elem.nodeName.toLowerCase();
                                    return name === "input" && elem.type === type;
                                };
                            }

                            /**
                             * Returns a function to use in pseudos for buttons
                             * @param {String} type
                             */
                            function createButtonPseudo( type ) {
                                return function( elem ) {
                                    var name = elem.nodeName.toLowerCase();
                                    return (name === "input" || name === "button") && elem.type === type;
                                };
                            }

                            /**
                             * Returns a function to use in pseudos for :enabled/:disabled
                             * @param {Boolean} disabled true for :disabled; false for :enabled
                             */
                            function createDisabledPseudo( disabled ) {

                                // Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
                                return function( elem ) {

                                    // Only certain elements can match :enabled or :disabled
                                    // https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
                                    // https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
                                    if ( "form" in elem ) {

                                        // Check for inherited disabledness on relevant non-disabled elements:
                                        // * listed form-associated elements in a disabled fieldset
                                        //   https://html.spec.whatwg.org/multipage/forms.html#category-listed
                                        //   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
                                        // * option elements in a disabled optgroup
                                        //   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
                                        // All such elements have a "form" property.
                                        if ( elem.parentNode && elem.disabled === false ) {

                                            // Option elements defer to a parent optgroup if present
                                            if ( "label" in elem ) {
                                                if ( "label" in elem.parentNode ) {
                                                    return elem.parentNode.disabled === disabled;
                                                } else {
                                                    return elem.disabled === disabled;
                                                }
                                            }

                                            // Support: IE 6 - 11
                                            // Use the isDisabled shortcut property to check for disabled fieldset ancestors
                                            return elem.isDisabled === disabled ||

                                                // Where there is no isDisabled, check manually
                                                /* jshint -W018 */
                                                elem.isDisabled !== !disabled &&
                                                disabledAncestor( elem ) === disabled;
                                        }

                                        return elem.disabled === disabled;

                                        // Try to winnow out elements that can't be disabled before trusting the disabled property.
                                        // Some victims get caught in our net (label, legend, menu, track), but it shouldn't
                                        // even exist on them, let alone have a boolean value.
                                    } else if ( "label" in elem ) {
                                        return elem.disabled === disabled;
                                    }

                                    // Remaining elements are neither :enabled nor :disabled
                                    return false;
                                };
                            }

                            /**
                             * Returns a function to use in pseudos for positionals
                             * @param {Function} fn
                             */
                            function createPositionalPseudo( fn ) {
                                return markFunction(function( argument ) {
                                    argument = +argument;
                                    return markFunction(function( seed, matches ) {
                                        var j,
                                            matchIndexes = fn( [], seed.length, argument ),
                                            i = matchIndexes.length;

                                        // Match elements found at the specified indexes
                                        while ( i-- ) {
                                            if ( seed[ (j = matchIndexes[i]) ] ) {
                                                seed[j] = !(matches[j] = seed[j]);
                                            }
                                        }
                                    });
                                });
                            }

                            /**
                             * Checks a node for validity as a Sizzle context
                             * @param {Element|Object=} context
                             * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
                             */
                            function testContext( context ) {
                                return context && typeof context.getElementsByTagName !== "undefined" && context;
                            }

// Expose support vars for convenience
                            support = Sizzle.support = {};

                            /**
                             * Detects XML nodes
                             * @param {Element|Object} elem An element or a document
                             * @returns {Boolean} True iff elem is a non-HTML XML node
                             */
                            isXML = Sizzle.isXML = function( elem ) {
                                // documentElement is verified for cases where it doesn't yet exist
                                // (such as loading iframes in IE - #4833)
                                var documentElement = elem && (elem.ownerDocument || elem).documentElement;
                                return documentElement ? documentElement.nodeName !== "HTML" : false;
                            };

                            /**
                             * Sets document-related variables once based on the current document
                             * @param {Element|Object} [doc] An element or document object to use to set the document
                             * @returns {Object} Returns the current document
                             */
                            setDocument = Sizzle.setDocument = function( node ) {
                                var hasCompare, subWindow,
                                    doc = node ? node.ownerDocument || node : preferredDoc;

                                // Return early if doc is invalid or already selected
                                if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
                                    return document;
                                }

                                // Update global variables
                                document = doc;
                                docElem = document.documentElement;
                                documentIsHTML = !isXML( document );

                                // Support: IE 9-11, Edge
                                // Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
                                if ( preferredDoc !== document &&
                                    (subWindow = document.defaultView) && subWindow.top !== subWindow ) {

                                    // Support: IE 11, Edge
                                    if ( subWindow.addEventListener ) {
                                        subWindow.addEventListener( "unload", unloadHandler, false );

                                        // Support: IE 9 - 10 only
                                    } else if ( subWindow.attachEvent ) {
                                        subWindow.attachEvent( "onunload", unloadHandler );
                                    }
                                }

                                /* Attributes
	---------------------------------------------------------------------- */

                                // Support: IE<8
                                // Verify that getAttribute really returns attributes and not properties
                                // (excepting IE8 booleans)
                                support.attributes = assert(function( el ) {
                                    el.className = "i";
                                    return !el.getAttribute("className");
                                });

                                /* getElement(s)By*
	---------------------------------------------------------------------- */

                                // Check if getElementsByTagName("*") returns only elements
                                support.getElementsByTagName = assert(function( el ) {
                                    el.appendChild( document.createComment("") );
                                    return !el.getElementsByTagName("*").length;
                                });

                                // Support: IE<9
                                support.getElementsByClassName = rnative.test( document.getElementsByClassName );

                                // Support: IE<10
                                // Check if getElementById returns elements by name
                                // The broken getElementById methods don't pick up programmatically-set names,
                                // so use a roundabout getElementsByName test
                                support.getById = assert(function( el ) {
                                    docElem.appendChild( el ).id = expando;
                                    return !document.getElementsByName || !document.getElementsByName( expando ).length;
                                });

                                // ID filter and find
                                if ( support.getById ) {
                                    Expr.filter["ID"] = function( id ) {
                                        var attrId = id.replace( runescape, funescape );
                                        return function( elem ) {
                                            return elem.getAttribute("id") === attrId;
                                        };
                                    };
                                    Expr.find["ID"] = function( id, context ) {
                                        if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
                                            var elem = context.getElementById( id );
                                            return elem ? [ elem ] : [];
                                        }
                                    };
                                } else {
                                    Expr.filter["ID"] =  function( id ) {
                                        var attrId = id.replace( runescape, funescape );
                                        return function( elem ) {
                                            var node = typeof elem.getAttributeNode !== "undefined" &&
                                                elem.getAttributeNode("id");
                                            return node && node.value === attrId;
                                        };
                                    };

                                    // Support: IE 6 - 7 only
                                    // getElementById is not reliable as a find shortcut
                                    Expr.find["ID"] = function( id, context ) {
                                        if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
                                            var node, i, elems,
                                                elem = context.getElementById( id );

                                            if ( elem ) {

                                                // Verify the id attribute
                                                node = elem.getAttributeNode("id");
                                                if ( node && node.value === id ) {
                                                    return [ elem ];
                                                }

                                                // Fall back on getElementsByName
                                                elems = context.getElementsByName( id );
                                                i = 0;
                                                while ( (elem = elems[i++]) ) {
                                                    node = elem.getAttributeNode("id");
                                                    if ( node && node.value === id ) {
                                                        return [ elem ];
                                                    }
                                                }
                                            }

                                            return [];
                                        }
                                    };
                                }

                                // Tag
                                Expr.find["TAG"] = support.getElementsByTagName ?
                                    function( tag, context ) {
                                        if ( typeof context.getElementsByTagName !== "undefined" ) {
                                            return context.getElementsByTagName( tag );

                                            // DocumentFragment nodes don't have gEBTN
                                        } else if ( support.qsa ) {
                                            return context.querySelectorAll( tag );
                                        }
                                    } :

                                    function( tag, context ) {
                                        var elem,
                                            tmp = [],
                                            i = 0,
                                            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
                                            results = context.getElementsByTagName( tag );

                                        // Filter out possible comments
                                        if ( tag === "*" ) {
                                            while ( (elem = results[i++]) ) {
                                                if ( elem.nodeType === 1 ) {
                                                    tmp.push( elem );
                                                }
                                            }

                                            return tmp;
                                        }
                                        return results;
                                    };

                                // Class
                                Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
                                    if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
                                        return context.getElementsByClassName( className );
                                    }
                                };

                                /* QSA/matchesSelector
	---------------------------------------------------------------------- */

                                // QSA and matchesSelector support

                                // matchesSelector(:active) reports false when true (IE9/Opera 11.5)
                                rbuggyMatches = [];

                                // qSa(:focus) reports false when true (Chrome 21)
                                // We allow this because of a bug in IE8/9 that throws an error
                                // whenever `document.activeElement` is accessed on an iframe
                                // So, we allow :focus to pass through QSA all the time to avoid the IE error
                                // See https://bugs.jquery.com/ticket/13378
                                rbuggyQSA = [];

                                if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
                                    // Build QSA regex
                                    // Regex strategy adopted from Diego Perini
                                    assert(function( el ) {
                                        // Select is set to empty string on purpose
                                        // This is to test IE's treatment of not explicitly
                                        // setting a boolean content attribute,
                                        // since its presence should be enough
                                        // https://bugs.jquery.com/ticket/12359
                                        docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
                                            "<select id='" + expando + "-\r\\' msallowcapture=''>" +
                                            "<option selected=''></option></select>";

                                        // Support: IE8, Opera 11-12.16
                                        // Nothing should be selected when empty strings follow ^= or $= or *=
                                        // The test attribute must be unknown in Opera but "safe" for WinRT
                                        // https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
                                        if ( el.querySelectorAll("[msallowcapture^='']").length ) {
                                            rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
                                        }

                                        // Support: IE8
                                        // Boolean attributes and "value" are not treated correctly
                                        if ( !el.querySelectorAll("[selected]").length ) {
                                            rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
                                        }

                                        // Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
                                        if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
                                            rbuggyQSA.push("~=");
                                        }

                                        // Webkit/Opera - :checked should return selected option elements
                                        // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                                        // IE8 throws error here and will not see later tests
                                        if ( !el.querySelectorAll(":checked").length ) {
                                            rbuggyQSA.push(":checked");
                                        }

                                        // Support: Safari 8+, iOS 8+
                                        // https://bugs.webkit.org/show_bug.cgi?id=136851
                                        // In-page `selector#id sibling-combinator selector` fails
                                        if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
                                            rbuggyQSA.push(".#.+[+~]");
                                        }
                                    });

                                    assert(function( el ) {
                                        el.innerHTML = "<a href='' disabled='disabled'></a>" +
                                            "<select disabled='disabled'><option/></select>";

                                        // Support: Windows 8 Native Apps
                                        // The type and name attributes are restricted during .innerHTML assignment
                                        var input = document.createElement("input");
                                        input.setAttribute( "type", "hidden" );
                                        el.appendChild( input ).setAttribute( "name", "D" );

                                        // Support: IE8
                                        // Enforce case-sensitivity of name attribute
                                        if ( el.querySelectorAll("[name=d]").length ) {
                                            rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
                                        }

                                        // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
                                        // IE8 throws error here and will not see later tests
                                        if ( el.querySelectorAll(":enabled").length !== 2 ) {
                                            rbuggyQSA.push( ":enabled", ":disabled" );
                                        }

                                        // Support: IE9-11+
                                        // IE's :disabled selector does not pick up the children of disabled fieldsets
                                        docElem.appendChild( el ).disabled = true;
                                        if ( el.querySelectorAll(":disabled").length !== 2 ) {
                                            rbuggyQSA.push( ":enabled", ":disabled" );
                                        }

                                        // Opera 10-11 does not throw on post-comma invalid pseudos
                                        el.querySelectorAll("*,:x");
                                        rbuggyQSA.push(",.*:");
                                    });
                                }

                                if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
                                    docElem.webkitMatchesSelector ||
                                    docElem.mozMatchesSelector ||
                                    docElem.oMatchesSelector ||
                                    docElem.msMatchesSelector) )) ) {

                                    assert(function( el ) {
                                        // Check to see if it's possible to do matchesSelector
                                        // on a disconnected node (IE 9)
                                        support.disconnectedMatch = matches.call( el, "*" );

                                        // This should fail with an exception
                                        // Gecko does not error, returns false instead
                                        matches.call( el, "[s!='']:x" );
                                        rbuggyMatches.push( "!=", pseudos );
                                    });
                                }

                                rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
                                rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

                                /* Contains
	---------------------------------------------------------------------- */
                                hasCompare = rnative.test( docElem.compareDocumentPosition );

                                // Element contains another
                                // Purposefully self-exclusive
                                // As in, an element does not contain itself
                                contains = hasCompare || rnative.test( docElem.contains ) ?
                                    function( a, b ) {
                                        var adown = a.nodeType === 9 ? a.documentElement : a,
                                            bup = b && b.parentNode;
                                        return a === bup || !!( bup && bup.nodeType === 1 && (
                                            adown.contains ?
                                                adown.contains( bup ) :
                                                a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
                                        ));
                                    } :
                                    function( a, b ) {
                                        if ( b ) {
                                            while ( (b = b.parentNode) ) {
                                                if ( b === a ) {
                                                    return true;
                                                }
                                            }
                                        }
                                        return false;
                                    };

                                /* Sorting
	---------------------------------------------------------------------- */

                                // Document order sorting
                                sortOrder = hasCompare ?
                                    function( a, b ) {

                                        // Flag for duplicate removal
                                        if ( a === b ) {
                                            hasDuplicate = true;
                                            return 0;
                                        }

                                        // Sort on method existence if only one input has compareDocumentPosition
                                        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
                                        if ( compare ) {
                                            return compare;
                                        }

                                        // Calculate position if both inputs belong to the same document
                                        compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
                                            a.compareDocumentPosition( b ) :

                                            // Otherwise we know they are disconnected
                                            1;

                                        // Disconnected nodes
                                        if ( compare & 1 ||
                                            (!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

                                            // Choose the first element that is related to our preferred document
                                            if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
                                                return -1;
                                            }
                                            if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
                                                return 1;
                                            }

                                            // Maintain original order
                                            return sortInput ?
                                                ( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
                                                0;
                                        }

                                        return compare & 4 ? -1 : 1;
                                    } :
                                    function( a, b ) {
                                        // Exit early if the nodes are identical
                                        if ( a === b ) {
                                            hasDuplicate = true;
                                            return 0;
                                        }

                                        var cur,
                                            i = 0,
                                            aup = a.parentNode,
                                            bup = b.parentNode,
                                            ap = [ a ],
                                            bp = [ b ];

                                        // Parentless nodes are either documents or disconnected
                                        if ( !aup || !bup ) {
                                            return a === document ? -1 :
                                                b === document ? 1 :
                                                    aup ? -1 :
                                                        bup ? 1 :
                                                            sortInput ?
                                                                ( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
                                                                0;

                                            // If the nodes are siblings, we can do a quick check
                                        } else if ( aup === bup ) {
                                            return siblingCheck( a, b );
                                        }

                                        // Otherwise we need full lists of their ancestors for comparison
                                        cur = a;
                                        while ( (cur = cur.parentNode) ) {
                                            ap.unshift( cur );
                                        }
                                        cur = b;
                                        while ( (cur = cur.parentNode) ) {
                                            bp.unshift( cur );
                                        }

                                        // Walk down the tree looking for a discrepancy
                                        while ( ap[i] === bp[i] ) {
                                            i++;
                                        }

                                        return i ?
                                            // Do a sibling check if the nodes have a common ancestor
                                            siblingCheck( ap[i], bp[i] ) :

                                            // Otherwise nodes in our document sort first
                                            ap[i] === preferredDoc ? -1 :
                                                bp[i] === preferredDoc ? 1 :
                                                    0;
                                    };

                                return document;
                            };

                            Sizzle.matches = function( expr, elements ) {
                                return Sizzle( expr, null, null, elements );
                            };

                            Sizzle.matchesSelector = function( elem, expr ) {
                                // Set document vars if needed
                                if ( ( elem.ownerDocument || elem ) !== document ) {
                                    setDocument( elem );
                                }

                                // Make sure that attribute selectors are quoted
                                expr = expr.replace( rattributeQuotes, "='$1']" );

                                if ( support.matchesSelector && documentIsHTML &&
                                    !compilerCache[ expr + " " ] &&
                                    ( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
                                    ( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

                                    try {
                                        var ret = matches.call( elem, expr );

                                        // IE 9's matchesSelector returns false on disconnected nodes
                                        if ( ret || support.disconnectedMatch ||
                                            // As well, disconnected nodes are said to be in a document
                                            // fragment in IE 9
                                            elem.document && elem.document.nodeType !== 11 ) {
                                            return ret;
                                        }
                                    } catch (e) {}
                                }

                                return Sizzle( expr, document, null, [ elem ] ).length > 0;
                            };

                            Sizzle.contains = function( context, elem ) {
                                // Set document vars if needed
                                if ( ( context.ownerDocument || context ) !== document ) {
                                    setDocument( context );
                                }
                                return contains( context, elem );
                            };

                            Sizzle.attr = function( elem, name ) {
                                // Set document vars if needed
                                if ( ( elem.ownerDocument || elem ) !== document ) {
                                    setDocument( elem );
                                }

                                var fn = Expr.attrHandle[ name.toLowerCase() ],
                                    // Don't get fooled by Object.prototype properties (jQuery #13807)
                                    val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
                                        fn( elem, name, !documentIsHTML ) :
                                        undefined;

                                return val !== undefined ?
                                    val :
                                    support.attributes || !documentIsHTML ?
                                        elem.getAttribute( name ) :
                                        (val = elem.getAttributeNode(name)) && val.specified ?
                                            val.value :
                                            null;
                            };

                            Sizzle.escape = function( sel ) {
                                return (sel + "").replace( rcssescape, fcssescape );
                            };

                            Sizzle.error = function( msg ) {
                                throw new Error( "Syntax error, unrecognized expression: " + msg );
                            };

                            /**
                             * Document sorting and removing duplicates
                             * @param {ArrayLike} results
                             */
                            Sizzle.uniqueSort = function( results ) {
                                var elem,
                                    duplicates = [],
                                    j = 0,
                                    i = 0;

                                // Unless we *know* we can detect duplicates, assume their presence
                                hasDuplicate = !support.detectDuplicates;
                                sortInput = !support.sortStable && results.slice( 0 );
                                results.sort( sortOrder );

                                if ( hasDuplicate ) {
                                    while ( (elem = results[i++]) ) {
                                        if ( elem === results[ i ] ) {
                                            j = duplicates.push( i );
                                        }
                                    }
                                    while ( j-- ) {
                                        results.splice( duplicates[ j ], 1 );
                                    }
                                }

                                // Clear input after sorting to release objects
                                // See https://github.com/jquery/sizzle/pull/225
                                sortInput = null;

                                return results;
                            };

                            /**
                             * Utility function for retrieving the text value of an array of DOM nodes
                             * @param {Array|Element} elem
                             */
                            getText = Sizzle.getText = function( elem ) {
                                var node,
                                    ret = "",
                                    i = 0,
                                    nodeType = elem.nodeType;

                                if ( !nodeType ) {
                                    // If no nodeType, this is expected to be an array
                                    while ( (node = elem[i++]) ) {
                                        // Do not traverse comment nodes
                                        ret += getText( node );
                                    }
                                } else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
                                    // Use textContent for elements
                                    // innerText usage removed for consistency of new lines (jQuery #11153)
                                    if ( typeof elem.textContent === "string" ) {
                                        return elem.textContent;
                                    } else {
                                        // Traverse its children
                                        for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
                                            ret += getText( elem );
                                        }
                                    }
                                } else if ( nodeType === 3 || nodeType === 4 ) {
                                    return elem.nodeValue;
                                }
                                // Do not include comment or processing instruction nodes

                                return ret;
                            };

                            Expr = Sizzle.selectors = {

                                // Can be adjusted by the user
                                cacheLength: 50,

                                createPseudo: markFunction,

                                match: matchExpr,

                                attrHandle: {},

                                find: {},

                                relative: {
                                    ">": { dir: "parentNode", first: true },
                                    " ": { dir: "parentNode" },
                                    "+": { dir: "previousSibling", first: true },
                                    "~": { dir: "previousSibling" }
                                },

                                preFilter: {
                                    "ATTR": function( match ) {
                                        match[1] = match[1].replace( runescape, funescape );

                                        // Move the given value to match[3] whether quoted or unquoted
                                        match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

                                        if ( match[2] === "~=" ) {
                                            match[3] = " " + match[3] + " ";
                                        }

                                        return match.slice( 0, 4 );
                                    },

                                    "CHILD": function( match ) {
                                        /* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
                                        match[1] = match[1].toLowerCase();

                                        if ( match[1].slice( 0, 3 ) === "nth" ) {
                                            // nth-* requires argument
                                            if ( !match[3] ) {
                                                Sizzle.error( match[0] );
                                            }

                                            // numeric x and y parameters for Expr.filter.CHILD
                                            // remember that false/true cast respectively to 0/1
                                            match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
                                            match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

                                            // other types prohibit arguments
                                        } else if ( match[3] ) {
                                            Sizzle.error( match[0] );
                                        }

                                        return match;
                                    },

                                    "PSEUDO": function( match ) {
                                        var excess,
                                            unquoted = !match[6] && match[2];

                                        if ( matchExpr["CHILD"].test( match[0] ) ) {
                                            return null;
                                        }

                                        // Accept quoted arguments as-is
                                        if ( match[3] ) {
                                            match[2] = match[4] || match[5] || "";

                                            // Strip excess characters from unquoted arguments
                                        } else if ( unquoted && rpseudo.test( unquoted ) &&
                                            // Get excess from tokenize (recursively)
                                            (excess = tokenize( unquoted, true )) &&
                                            // advance to the next closing parenthesis
                                            (excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

                                            // excess is a negative index
                                            match[0] = match[0].slice( 0, excess );
                                            match[2] = unquoted.slice( 0, excess );
                                        }

                                        // Return only captures needed by the pseudo filter method (type and argument)
                                        return match.slice( 0, 3 );
                                    }
                                },

                                filter: {

                                    "TAG": function( nodeNameSelector ) {
                                        var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
                                        return nodeNameSelector === "*" ?
                                            function() { return true; } :
                                            function( elem ) {
                                                return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                                            };
                                    },

                                    "CLASS": function( className ) {
                                        var pattern = classCache[ className + " " ];

                                        return pattern ||
                                            (pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
                                            classCache( className, function( elem ) {
                                                return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
                                            });
                                    },

                                    "ATTR": function( name, operator, check ) {
                                        return function( elem ) {
                                            var result = Sizzle.attr( elem, name );

                                            if ( result == null ) {
                                                return operator === "!=";
                                            }
                                            if ( !operator ) {
                                                return true;
                                            }

                                            result += "";

                                            return operator === "=" ? result === check :
                                                operator === "!=" ? result !== check :
                                                    operator === "^=" ? check && result.indexOf( check ) === 0 :
                                                        operator === "*=" ? check && result.indexOf( check ) > -1 :
                                                            operator === "$=" ? check && result.slice( -check.length ) === check :
                                                                operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
                                                                    operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
                                                                        false;
                                        };
                                    },

                                    "CHILD": function( type, what, argument, first, last ) {
                                        var simple = type.slice( 0, 3 ) !== "nth",
                                            forward = type.slice( -4 ) !== "last",
                                            ofType = what === "of-type";

                                        return first === 1 && last === 0 ?

                                            // Shortcut for :nth-*(n)
                                            function( elem ) {
                                                return !!elem.parentNode;
                                            } :

                                            function( elem, context, xml ) {
                                                var cache, uniqueCache, outerCache, node, nodeIndex, start,
                                                    dir = simple !== forward ? "nextSibling" : "previousSibling",
                                                    parent = elem.parentNode,
                                                    name = ofType && elem.nodeName.toLowerCase(),
                                                    useCache = !xml && !ofType,
                                                    diff = false;

                                                if ( parent ) {

                                                    // :(first|last|only)-(child|of-type)
                                                    if ( simple ) {
                                                        while ( dir ) {
                                                            node = elem;
                                                            while ( (node = node[ dir ]) ) {
                                                                if ( ofType ?
                                                                    node.nodeName.toLowerCase() === name :
                                                                    node.nodeType === 1 ) {

                                                                    return false;
                                                                }
                                                            }
                                                            // Reverse direction for :only-* (if we haven't yet done so)
                                                            start = dir = type === "only" && !start && "nextSibling";
                                                        }
                                                        return true;
                                                    }

                                                    start = [ forward ? parent.firstChild : parent.lastChild ];

                                                    // non-xml :nth-child(...) stores cache data on `parent`
                                                    if ( forward && useCache ) {

                                                        // Seek `elem` from a previously-cached index

                                                        // ...in a gzip-friendly way
                                                        node = parent;
                                                        outerCache = node[ expando ] || (node[ expando ] = {});

                                                        // Support: IE <9 only
                                                        // Defend against cloned attroperties (jQuery gh-1709)
                                                        uniqueCache = outerCache[ node.uniqueID ] ||
                                                            (outerCache[ node.uniqueID ] = {});

                                                        cache = uniqueCache[ type ] || [];
                                                        nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
                                                        diff = nodeIndex && cache[ 2 ];
                                                        node = nodeIndex && parent.childNodes[ nodeIndex ];

                                                        while ( (node = ++nodeIndex && node && node[ dir ] ||

                                                            // Fallback to seeking `elem` from the start
                                                            (diff = nodeIndex = 0) || start.pop()) ) {

                                                            // When found, cache indexes on `parent` and break
                                                            if ( node.nodeType === 1 && ++diff && node === elem ) {
                                                                uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
                                                                break;
                                                            }
                                                        }

                                                    } else {
                                                        // Use previously-cached element index if available
                                                        if ( useCache ) {
                                                            // ...in a gzip-friendly way
                                                            node = elem;
                                                            outerCache = node[ expando ] || (node[ expando ] = {});

                                                            // Support: IE <9 only
                                                            // Defend against cloned attroperties (jQuery gh-1709)
                                                            uniqueCache = outerCache[ node.uniqueID ] ||
                                                                (outerCache[ node.uniqueID ] = {});

                                                            cache = uniqueCache[ type ] || [];
                                                            nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
                                                            diff = nodeIndex;
                                                        }

                                                        // xml :nth-child(...)
                                                        // or :nth-last-child(...) or :nth(-last)?-of-type(...)
                                                        if ( diff === false ) {
                                                            // Use the same loop as above to seek `elem` from the start
                                                            while ( (node = ++nodeIndex && node && node[ dir ] ||
                                                                (diff = nodeIndex = 0) || start.pop()) ) {

                                                                if ( ( ofType ?
                                                                    node.nodeName.toLowerCase() === name :
                                                                    node.nodeType === 1 ) &&
                                                                    ++diff ) {

                                                                    // Cache the index of each encountered element
                                                                    if ( useCache ) {
                                                                        outerCache = node[ expando ] || (node[ expando ] = {});

                                                                        // Support: IE <9 only
                                                                        // Defend against cloned attroperties (jQuery gh-1709)
                                                                        uniqueCache = outerCache[ node.uniqueID ] ||
                                                                            (outerCache[ node.uniqueID ] = {});

                                                                        uniqueCache[ type ] = [ dirruns, diff ];
                                                                    }

                                                                    if ( node === elem ) {
                                                                        break;
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }

                                                    // Incorporate the offset, then check against cycle size
                                                    diff -= last;
                                                    return diff === first || ( diff % first === 0 && diff / first >= 0 );
                                                }
                                            };
                                    },

                                    "PSEUDO": function( pseudo, argument ) {
                                        // pseudo-class names are case-insensitive
                                        // http://www.w3.org/TR/selectors/#pseudo-classes
                                        // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
                                        // Remember that setFilters inherits from pseudos
                                        var args,
                                            fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
                                                Sizzle.error( "unsupported pseudo: " + pseudo );

                                        // The user may use createPseudo to indicate that
                                        // arguments are needed to create the filter function
                                        // just as Sizzle does
                                        if ( fn[ expando ] ) {
                                            return fn( argument );
                                        }

                                        // But maintain support for old signatures
                                        if ( fn.length > 1 ) {
                                            args = [ pseudo, pseudo, "", argument ];
                                            return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
                                                markFunction(function( seed, matches ) {
                                                    var idx,
                                                        matched = fn( seed, argument ),
                                                        i = matched.length;
                                                    while ( i-- ) {
                                                        idx = indexOf( seed, matched[i] );
                                                        seed[ idx ] = !( matches[ idx ] = matched[i] );
                                                    }
                                                }) :
                                                function( elem ) {
                                                    return fn( elem, 0, args );
                                                };
                                        }

                                        return fn;
                                    }
                                },

                                pseudos: {
                                    // Potentially complex pseudos
                                    "not": markFunction(function( selector ) {
                                        // Trim the selector passed to compile
                                        // to avoid treating leading and trailing
                                        // spaces as combinators
                                        var input = [],
                                            results = [],
                                            matcher = compile( selector.replace( rtrim, "$1" ) );

                                        return matcher[ expando ] ?
                                            markFunction(function( seed, matches, context, xml ) {
                                                var elem,
                                                    unmatched = matcher( seed, null, xml, [] ),
                                                    i = seed.length;

                                                // Match elements unmatched by `matcher`
                                                while ( i-- ) {
                                                    if ( (elem = unmatched[i]) ) {
                                                        seed[i] = !(matches[i] = elem);
                                                    }
                                                }
                                            }) :
                                            function( elem, context, xml ) {
                                                input[0] = elem;
                                                matcher( input, null, xml, results );
                                                // Don't keep the element (issue #299)
                                                input[0] = null;
                                                return !results.pop();
                                            };
                                    }),

                                    "has": markFunction(function( selector ) {
                                        return function( elem ) {
                                            return Sizzle( selector, elem ).length > 0;
                                        };
                                    }),

                                    "contains": markFunction(function( text ) {
                                        text = text.replace( runescape, funescape );
                                        return function( elem ) {
                                            return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
                                        };
                                    }),

                                    // "Whether an element is represented by a :lang() selector
                                    // is based solely on the element's language value
                                    // being equal to the identifier C,
                                    // or beginning with the identifier C immediately followed by "-".
                                    // The matching of C against the element's language value is performed case-insensitively.
                                    // The identifier C does not have to be a valid language name."
                                    // http://www.w3.org/TR/selectors/#lang-pseudo
                                    "lang": markFunction( function( lang ) {
                                        // lang value must be a valid identifier
                                        if ( !ridentifier.test(lang || "") ) {
                                            Sizzle.error( "unsupported lang: " + lang );
                                        }
                                        lang = lang.replace( runescape, funescape ).toLowerCase();
                                        return function( elem ) {
                                            var elemLang;
                                            do {
                                                if ( (elemLang = documentIsHTML ?
                                                    elem.lang :
                                                    elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

                                                    elemLang = elemLang.toLowerCase();
                                                    return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
                                                }
                                            } while ( (elem = elem.parentNode) && elem.nodeType === 1 );
                                            return false;
                                        };
                                    }),

                                    // Miscellaneous
                                    "target": function( elem ) {
                                        var hash = window.location && window.location.hash;
                                        return hash && hash.slice( 1 ) === elem.id;
                                    },

                                    "root": function( elem ) {
                                        return elem === docElem;
                                    },

                                    "focus": function( elem ) {
                                        return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
                                    },

                                    // Boolean properties
                                    "enabled": createDisabledPseudo( false ),
                                    "disabled": createDisabledPseudo( true ),

                                    "checked": function( elem ) {
                                        // In CSS3, :checked should return both checked and selected elements
                                        // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
                                        var nodeName = elem.nodeName.toLowerCase();
                                        return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
                                    },

                                    "selected": function( elem ) {
                                        // Accessing this property makes selected-by-default
                                        // options in Safari work properly
                                        if ( elem.parentNode ) {
                                            elem.parentNode.selectedIndex;
                                        }

                                        return elem.selected === true;
                                    },

                                    // Contents
                                    "empty": function( elem ) {
                                        // http://www.w3.org/TR/selectors/#empty-pseudo
                                        // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
                                        //   but not by others (comment: 8; processing instruction: 7; etc.)
                                        // nodeType < 6 works because attributes (2) do not appear as children
                                        for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
                                            if ( elem.nodeType < 6 ) {
                                                return false;
                                            }
                                        }
                                        return true;
                                    },

                                    "parent": function( elem ) {
                                        return !Expr.pseudos["empty"]( elem );
                                    },

                                    // Element/input types
                                    "header": function( elem ) {
                                        return rheader.test( elem.nodeName );
                                    },

                                    "input": function( elem ) {
                                        return rinputs.test( elem.nodeName );
                                    },

                                    "button": function( elem ) {
                                        var name = elem.nodeName.toLowerCase();
                                        return name === "input" && elem.type === "button" || name === "button";
                                    },

                                    "text": function( elem ) {
                                        var attr;
                                        return elem.nodeName.toLowerCase() === "input" &&
                                            elem.type === "text" &&

                                            // Support: IE<8
                                            // New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
                                            ( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
                                    },

                                    // Position-in-collection
                                    "first": createPositionalPseudo(function() {
                                        return [ 0 ];
                                    }),

                                    "last": createPositionalPseudo(function( matchIndexes, length ) {
                                        return [ length - 1 ];
                                    }),

                                    "eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
                                        return [ argument < 0 ? argument + length : argument ];
                                    }),

                                    "even": createPositionalPseudo(function( matchIndexes, length ) {
                                        var i = 0;
                                        for ( ; i < length; i += 2 ) {
                                            matchIndexes.push( i );
                                        }
                                        return matchIndexes;
                                    }),

                                    "odd": createPositionalPseudo(function( matchIndexes, length ) {
                                        var i = 1;
                                        for ( ; i < length; i += 2 ) {
                                            matchIndexes.push( i );
                                        }
                                        return matchIndexes;
                                    }),

                                    "lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
                                        var i = argument < 0 ? argument + length : argument;
                                        for ( ; --i >= 0; ) {
                                            matchIndexes.push( i );
                                        }
                                        return matchIndexes;
                                    }),

                                    "gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
                                        var i = argument < 0 ? argument + length : argument;
                                        for ( ; ++i < length; ) {
                                            matchIndexes.push( i );
                                        }
                                        return matchIndexes;
                                    })
                                }
                            };

                            Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
                            for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
                                Expr.pseudos[ i ] = createInputPseudo( i );
                            }
                            for ( i in { submit: true, reset: true } ) {
                                Expr.pseudos[ i ] = createButtonPseudo( i );
                            }

// Easy API for creating new setFilters
                            function setFilters() {}
                            setFilters.prototype = Expr.filters = Expr.pseudos;
                            Expr.setFilters = new setFilters();

                            tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
                                var matched, match, tokens, type,
                                    soFar, groups, preFilters,
                                    cached = tokenCache[ selector + " " ];

                                if ( cached ) {
                                    return parseOnly ? 0 : cached.slice( 0 );
                                }

                                soFar = selector;
                                groups = [];
                                preFilters = Expr.preFilter;

                                while ( soFar ) {

                                    // Comma and first run
                                    if ( !matched || (match = rcomma.exec( soFar )) ) {
                                        if ( match ) {
                                            // Don't consume trailing commas as valid
                                            soFar = soFar.slice( match[0].length ) || soFar;
                                        }
                                        groups.push( (tokens = []) );
                                    }

                                    matched = false;

                                    // Combinators
                                    if ( (match = rcombinators.exec( soFar )) ) {
                                        matched = match.shift();
                                        tokens.push({
                                            value: matched,
                                            // Cast descendant combinators to space
                                            type: match[0].replace( rtrim, " " )
                                        });
                                        soFar = soFar.slice( matched.length );
                                    }

                                    // Filters
                                    for ( type in Expr.filter ) {
                                        if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
                                            (match = preFilters[ type ]( match ))) ) {
                                            matched = match.shift();
                                            tokens.push({
                                                value: matched,
                                                type: type,
                                                matches: match
                                            });
                                            soFar = soFar.slice( matched.length );
                                        }
                                    }

                                    if ( !matched ) {
                                        break;
                                    }
                                }

                                // Return the length of the invalid excess
                                // if we're just parsing
                                // Otherwise, throw an error or return tokens
                                return parseOnly ?
                                    soFar.length :
                                    soFar ?
                                        Sizzle.error( selector ) :
                                        // Cache the tokens
                                        tokenCache( selector, groups ).slice( 0 );
                            };

                            function toSelector( tokens ) {
                                var i = 0,
                                    len = tokens.length,
                                    selector = "";
                                for ( ; i < len; i++ ) {
                                    selector += tokens[i].value;
                                }
                                return selector;
                            }

                            function addCombinator( matcher, combinator, base ) {
                                var dir = combinator.dir,
                                    skip = combinator.next,
                                    key = skip || dir,
                                    checkNonElements = base && key === "parentNode",
                                    doneName = done++;

                                return combinator.first ?
                                    // Check against closest ancestor/preceding element
                                    function( elem, context, xml ) {
                                        while ( (elem = elem[ dir ]) ) {
                                            if ( elem.nodeType === 1 || checkNonElements ) {
                                                return matcher( elem, context, xml );
                                            }
                                        }
                                        return false;
                                    } :

                                    // Check against all ancestor/preceding elements
                                    function( elem, context, xml ) {
                                        var oldCache, uniqueCache, outerCache,
                                            newCache = [ dirruns, doneName ];

                                        // We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
                                        if ( xml ) {
                                            while ( (elem = elem[ dir ]) ) {
                                                if ( elem.nodeType === 1 || checkNonElements ) {
                                                    if ( matcher( elem, context, xml ) ) {
                                                        return true;
                                                    }
                                                }
                                            }
                                        } else {
                                            while ( (elem = elem[ dir ]) ) {
                                                if ( elem.nodeType === 1 || checkNonElements ) {
                                                    outerCache = elem[ expando ] || (elem[ expando ] = {});

                                                    // Support: IE <9 only
                                                    // Defend against cloned attroperties (jQuery gh-1709)
                                                    uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

                                                    if ( skip && skip === elem.nodeName.toLowerCase() ) {
                                                        elem = elem[ dir ] || elem;
                                                    } else if ( (oldCache = uniqueCache[ key ]) &&
                                                        oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

                                                        // Assign to newCache so results back-propagate to previous elements
                                                        return (newCache[ 2 ] = oldCache[ 2 ]);
                                                    } else {
                                                        // Reuse newcache so results back-propagate to previous elements
                                                        uniqueCache[ key ] = newCache;

                                                        // A match means we're done; a fail means we have to keep checking
                                                        if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
                                                            return true;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                        return false;
                                    };
                            }

                            function elementMatcher( matchers ) {
                                return matchers.length > 1 ?
                                    function( elem, context, xml ) {
                                        var i = matchers.length;
                                        while ( i-- ) {
                                            if ( !matchers[i]( elem, context, xml ) ) {
                                                return false;
                                            }
                                        }
                                        return true;
                                    } :
                                    matchers[0];
                            }

                            function multipleContexts( selector, contexts, results ) {
                                var i = 0,
                                    len = contexts.length;
                                for ( ; i < len; i++ ) {
                                    Sizzle( selector, contexts[i], results );
                                }
                                return results;
                            }

                            function condense( unmatched, map, filter, context, xml ) {
                                var elem,
                                    newUnmatched = [],
                                    i = 0,
                                    len = unmatched.length,
                                    mapped = map != null;

                                for ( ; i < len; i++ ) {
                                    if ( (elem = unmatched[i]) ) {
                                        if ( !filter || filter( elem, context, xml ) ) {
                                            newUnmatched.push( elem );
                                            if ( mapped ) {
                                                map.push( i );
                                            }
                                        }
                                    }
                                }

                                return newUnmatched;
                            }

                            function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
                                if ( postFilter && !postFilter[ expando ] ) {
                                    postFilter = setMatcher( postFilter );
                                }
                                if ( postFinder && !postFinder[ expando ] ) {
                                    postFinder = setMatcher( postFinder, postSelector );
                                }
                                return markFunction(function( seed, results, context, xml ) {
                                    var temp, i, elem,
                                        preMap = [],
                                        postMap = [],
                                        preexisting = results.length,

                                        // Get initial elements from seed or context
                                        elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

                                        // Prefilter to get matcher input, preserving a map for seed-results synchronization
                                        matcherIn = preFilter && ( seed || !selector ) ?
                                            condense( elems, preMap, preFilter, context, xml ) :
                                            elems,

                                        matcherOut = matcher ?
                                            // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
                                            postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

                                                // ...intermediate processing is necessary
                                                [] :

                                                // ...otherwise use results directly
                                                results :
                                            matcherIn;

                                    // Find primary matches
                                    if ( matcher ) {
                                        matcher( matcherIn, matcherOut, context, xml );
                                    }

                                    // Apply postFilter
                                    if ( postFilter ) {
                                        temp = condense( matcherOut, postMap );
                                        postFilter( temp, [], context, xml );

                                        // Un-match failing elements by moving them back to matcherIn
                                        i = temp.length;
                                        while ( i-- ) {
                                            if ( (elem = temp[i]) ) {
                                                matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
                                            }
                                        }
                                    }

                                    if ( seed ) {
                                        if ( postFinder || preFilter ) {
                                            if ( postFinder ) {
                                                // Get the final matcherOut by condensing this intermediate into postFinder contexts
                                                temp = [];
                                                i = matcherOut.length;
                                                while ( i-- ) {
                                                    if ( (elem = matcherOut[i]) ) {
                                                        // Restore matcherIn since elem is not yet a final match
                                                        temp.push( (matcherIn[i] = elem) );
                                                    }
                                                }
                                                postFinder( null, (matcherOut = []), temp, xml );
                                            }

                                            // Move matched elements from seed to results to keep them synchronized
                                            i = matcherOut.length;
                                            while ( i-- ) {
                                                if ( (elem = matcherOut[i]) &&
                                                    (temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

                                                    seed[temp] = !(results[temp] = elem);
                                                }
                                            }
                                        }

                                        // Add elements to results, through postFinder if defined
                                    } else {
                                        matcherOut = condense(
                                            matcherOut === results ?
                                                matcherOut.splice( preexisting, matcherOut.length ) :
                                                matcherOut
                                        );
                                        if ( postFinder ) {
                                            postFinder( null, results, matcherOut, xml );
                                        } else {
                                            push.apply( results, matcherOut );
                                        }
                                    }
                                });
                            }

                            function matcherFromTokens( tokens ) {
                                var checkContext, matcher, j,
                                    len = tokens.length,
                                    leadingRelative = Expr.relative[ tokens[0].type ],
                                    implicitRelative = leadingRelative || Expr.relative[" "],
                                    i = leadingRelative ? 1 : 0,

                                    // The foundational matcher ensures that elements are reachable from top-level context(s)
                                    matchContext = addCombinator( function( elem ) {
                                        return elem === checkContext;
                                    }, implicitRelative, true ),
                                    matchAnyContext = addCombinator( function( elem ) {
                                        return indexOf( checkContext, elem ) > -1;
                                    }, implicitRelative, true ),
                                    matchers = [ function( elem, context, xml ) {
                                        var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
                                            (checkContext = context).nodeType ?
                                                matchContext( elem, context, xml ) :
                                                matchAnyContext( elem, context, xml ) );
                                        // Avoid hanging onto element (issue #299)
                                        checkContext = null;
                                        return ret;
                                    } ];

                                for ( ; i < len; i++ ) {
                                    if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
                                        matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
                                    } else {
                                        matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

                                        // Return special upon seeing a positional matcher
                                        if ( matcher[ expando ] ) {
                                            // Find the next relative operator (if any) for proper handling
                                            j = ++i;
                                            for ( ; j < len; j++ ) {
                                                if ( Expr.relative[ tokens[j].type ] ) {
                                                    break;
                                                }
                                            }
                                            return setMatcher(
                                                i > 1 && elementMatcher( matchers ),
                                                i > 1 && toSelector(
                                                // If the preceding token was a descendant combinator, insert an implicit any-element `*`
                                                tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
                                                ).replace( rtrim, "$1" ),
                                                matcher,
                                                i < j && matcherFromTokens( tokens.slice( i, j ) ),
                                                j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
                                                j < len && toSelector( tokens )
                                            );
                                        }
                                        matchers.push( matcher );
                                    }
                                }

                                return elementMatcher( matchers );
                            }

                            function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
                                var bySet = setMatchers.length > 0,
                                    byElement = elementMatchers.length > 0,
                                    superMatcher = function( seed, context, xml, results, outermost ) {
                                        var elem, j, matcher,
                                            matchedCount = 0,
                                            i = "0",
                                            unmatched = seed && [],
                                            setMatched = [],
                                            contextBackup = outermostContext,
                                            // We must always have either seed elements or outermost context
                                            elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
                                            // Use integer dirruns iff this is the outermost matcher
                                            dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
                                            len = elems.length;

                                        if ( outermost ) {
                                            outermostContext = context === document || context || outermost;
                                        }

                                        // Add elements passing elementMatchers directly to results
                                        // Support: IE<9, Safari
                                        // Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
                                        for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
                                            if ( byElement && elem ) {
                                                j = 0;
                                                if ( !context && elem.ownerDocument !== document ) {
                                                    setDocument( elem );
                                                    xml = !documentIsHTML;
                                                }
                                                while ( (matcher = elementMatchers[j++]) ) {
                                                    if ( matcher( elem, context || document, xml) ) {
                                                        results.push( elem );
                                                        break;
                                                    }
                                                }
                                                if ( outermost ) {
                                                    dirruns = dirrunsUnique;
                                                }
                                            }

                                            // Track unmatched elements for set filters
                                            if ( bySet ) {
                                                // They will have gone through all possible matchers
                                                if ( (elem = !matcher && elem) ) {
                                                    matchedCount--;
                                                }

                                                // Lengthen the array for every element, matched or not
                                                if ( seed ) {
                                                    unmatched.push( elem );
                                                }
                                            }
                                        }

                                        // `i` is now the count of elements visited above, and adding it to `matchedCount`
                                        // makes the latter nonnegative.
                                        matchedCount += i;

                                        // Apply set filters to unmatched elements
                                        // NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
                                        // equals `i`), unless we didn't visit _any_ elements in the above loop because we have
                                        // no element matchers and no seed.
                                        // Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
                                        // case, which will result in a "00" `matchedCount` that differs from `i` but is also
                                        // numerically zero.
                                        if ( bySet && i !== matchedCount ) {
                                            j = 0;
                                            while ( (matcher = setMatchers[j++]) ) {
                                                matcher( unmatched, setMatched, context, xml );
                                            }

                                            if ( seed ) {
                                                // Reintegrate element matches to eliminate the need for sorting
                                                if ( matchedCount > 0 ) {
                                                    while ( i-- ) {
                                                        if ( !(unmatched[i] || setMatched[i]) ) {
                                                            setMatched[i] = pop.call( results );
                                                        }
                                                    }
                                                }

                                                // Discard index placeholder values to get only actual matches
                                                setMatched = condense( setMatched );
                                            }

                                            // Add matches to results
                                            push.apply( results, setMatched );

                                            // Seedless set matches succeeding multiple successful matchers stipulate sorting
                                            if ( outermost && !seed && setMatched.length > 0 &&
                                                ( matchedCount + setMatchers.length ) > 1 ) {

                                                Sizzle.uniqueSort( results );
                                            }
                                        }

                                        // Override manipulation of globals by nested matchers
                                        if ( outermost ) {
                                            dirruns = dirrunsUnique;
                                            outermostContext = contextBackup;
                                        }

                                        return unmatched;
                                    };

                                return bySet ?
                                    markFunction( superMatcher ) :
                                    superMatcher;
                            }

                            compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
                                var i,
                                    setMatchers = [],
                                    elementMatchers = [],
                                    cached = compilerCache[ selector + " " ];

                                if ( !cached ) {
                                    // Generate a function of recursive functions that can be used to check each element
                                    if ( !match ) {
                                        match = tokenize( selector );
                                    }
                                    i = match.length;
                                    while ( i-- ) {
                                        cached = matcherFromTokens( match[i] );
                                        if ( cached[ expando ] ) {
                                            setMatchers.push( cached );
                                        } else {
                                            elementMatchers.push( cached );
                                        }
                                    }

                                    // Cache the compiled function
                                    cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

                                    // Save selector and tokenization
                                    cached.selector = selector;
                                }
                                return cached;
                            };

                            /**
                             * A low-level selection function that works with Sizzle's compiled
                             *  selector functions
                             * @param {String|Function} selector A selector or a pre-compiled
                             *  selector function built with Sizzle.compile
                             * @param {Element} context
                             * @param {Array} [results]
                             * @param {Array} [seed] A set of elements to match against
                             */
                            select = Sizzle.select = function( selector, context, results, seed ) {
                                var i, tokens, token, type, find,
                                    compiled = typeof selector === "function" && selector,
                                    match = !seed && tokenize( (selector = compiled.selector || selector) );

                                results = results || [];

                                // Try to minimize operations if there is only one selector in the list and no seed
                                // (the latter of which guarantees us context)
                                if ( match.length === 1 ) {

                                    // Reduce context if the leading compound selector is an ID
                                    tokens = match[0] = match[0].slice( 0 );
                                    if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
                                        context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

                                        context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
                                        if ( !context ) {
                                            return results;

                                            // Precompiled matchers will still verify ancestry, so step up a level
                                        } else if ( compiled ) {
                                            context = context.parentNode;
                                        }

                                        selector = selector.slice( tokens.shift().value.length );
                                    }

                                    // Fetch a seed set for right-to-left matching
                                    i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
                                    while ( i-- ) {
                                        token = tokens[i];

                                        // Abort if we hit a combinator
                                        if ( Expr.relative[ (type = token.type) ] ) {
                                            break;
                                        }
                                        if ( (find = Expr.find[ type ]) ) {
                                            // Search, expanding context for leading sibling combinators
                                            if ( (seed = find(
                                                token.matches[0].replace( runescape, funescape ),
                                                rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
                                            )) ) {

                                                // If seed is empty or no tokens remain, we can return early
                                                tokens.splice( i, 1 );
                                                selector = seed.length && toSelector( tokens );
                                                if ( !selector ) {
                                                    push.apply( results, seed );
                                                    return results;
                                                }

                                                break;
                                            }
                                        }
                                    }
                                }

                                // Compile and execute a filtering function if one is not provided
                                // Provide `match` to avoid retokenization if we modified the selector above
                                ( compiled || compile( selector, match ) )(
                                    seed,
                                    context,
                                    !documentIsHTML,
                                    results,
                                    !context || rsibling.test( selector ) && testContext( context.parentNode ) || context
                                );
                                return results;
                            };

// One-time assignments

// Sort stability
                            support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
                            support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
                            setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
                            support.sortDetached = assert(function( el ) {
                                // Should return 1, but returns 4 (following)
                                return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
                            });

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
                            if ( !assert(function( el ) {
                                el.innerHTML = "<a href='#'></a>";
                                return el.firstChild.getAttribute("href") === "#" ;
                            }) ) {
                                addHandle( "type|href|height|width", function( elem, name, isXML ) {
                                    if ( !isXML ) {
                                        return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
                                    }
                                });
                            }

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
                            if ( !support.attributes || !assert(function( el ) {
                                el.innerHTML = "<input/>";
                                el.firstChild.setAttribute( "value", "" );
                                return el.firstChild.getAttribute( "value" ) === "";
                            }) ) {
                                addHandle( "value", function( elem, name, isXML ) {
                                    if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
                                        return elem.defaultValue;
                                    }
                                });
                            }

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
                            if ( !assert(function( el ) {
                                return el.getAttribute("disabled") == null;
                            }) ) {
                                addHandle( booleans, function( elem, name, isXML ) {
                                    var val;
                                    if ( !isXML ) {
                                        return elem[ name ] === true ? name.toLowerCase() :
                                            (val = elem.getAttributeNode( name )) && val.specified ?
                                                val.value :
                                                null;
                                    }
                                });
                            }

                            return Sizzle;

                        })( window );



                    jQuery.find = Sizzle;
                    jQuery.expr = Sizzle.selectors;

// Deprecated
                    jQuery.expr[ ":" ] = jQuery.expr.pseudos;
                    jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
                    jQuery.text = Sizzle.getText;
                    jQuery.isXMLDoc = Sizzle.isXML;
                    jQuery.contains = Sizzle.contains;
                    jQuery.escapeSelector = Sizzle.escape;




                    var dir = function( elem, dir, until ) {
                        var matched = [],
                            truncate = until !== undefined;

                        while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
                            if ( elem.nodeType === 1 ) {
                                if ( truncate && jQuery( elem ).is( until ) ) {
                                    break;
                                }
                                matched.push( elem );
                            }
                        }
                        return matched;
                    };


                    var siblings = function( n, elem ) {
                        var matched = [];

                        for ( ; n; n = n.nextSibling ) {
                            if ( n.nodeType === 1 && n !== elem ) {
                                matched.push( n );
                            }
                        }

                        return matched;
                    };


                    var rneedsContext = jQuery.expr.match.needsContext;



                    function nodeName( elem, name ) {

                        return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

                    };
                    var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
                    function winnow( elements, qualifier, not ) {
                        if ( isFunction( qualifier ) ) {
                            return jQuery.grep( elements, function( elem, i ) {
                                return !!qualifier.call( elem, i, elem ) !== not;
                            } );
                        }

                        // Single element
                        if ( qualifier.nodeType ) {
                            return jQuery.grep( elements, function( elem ) {
                                return ( elem === qualifier ) !== not;
                            } );
                        }

                        // Arraylike of elements (jQuery, arguments, Array)
                        if ( typeof qualifier !== "string" ) {
                            return jQuery.grep( elements, function( elem ) {
                                return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
                            } );
                        }

                        // Filtered directly for both simple and complex selectors
                        return jQuery.filter( qualifier, elements, not );
                    }

                    jQuery.filter = function( expr, elems, not ) {
                        var elem = elems[ 0 ];

                        if ( not ) {
                            expr = ":not(" + expr + ")";
                        }

                        if ( elems.length === 1 && elem.nodeType === 1 ) {
                            return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
                        }

                        return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
                            return elem.nodeType === 1;
                        } ) );
                    };

                    jQuery.fn.extend( {
                        find: function( selector ) {
                            var i, ret,
                                len = this.length,
                                self = this;

                            if ( typeof selector !== "string" ) {
                                return this.pushStack( jQuery( selector ).filter( function() {
                                    for ( i = 0; i < len; i++ ) {
                                        if ( jQuery.contains( self[ i ], this ) ) {
                                            return true;
                                        }
                                    }
                                } ) );
                            }

                            ret = this.pushStack( [] );

                            for ( i = 0; i < len; i++ ) {
                                jQuery.find( selector, self[ i ], ret );
                            }

                            return len > 1 ? jQuery.uniqueSort( ret ) : ret;
                        },
                        filter: function( selector ) {
                            return this.pushStack( winnow( this, selector || [], false ) );
                        },
                        not: function( selector ) {
                            return this.pushStack( winnow( this, selector || [], true ) );
                        },
                        is: function( selector ) {
                            return !!winnow(
                                this,

                                // If this is a positional/relative selector, check membership in the returned set
                                // so $("p:first").is("p:last") won't return true for a doc with two "p".
                                typeof selector === "string" && rneedsContext.test( selector ) ?
                                    jQuery( selector ) :
                                    selector || [],
                                false
                            ).length;
                        }
                    } );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
                    var rootjQuery,

                        // A simple way to check for HTML strings
                        // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
                        // Strict HTML recognition (#11290: must start with <)
                        // Shortcut simple #id case for speed
                        rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

                        init = jQuery.fn.init = function( selector, context, root ) {
                            var match, elem;

                            // HANDLE: $(""), $(null), $(undefined), $(false)
                            if ( !selector ) {
                                return this;
                            }

                            // Method init() accepts an alternate rootjQuery
                            // so migrate can support jQuery.sub (gh-2101)
                            root = root || rootjQuery;

                            // Handle HTML strings
                            if ( typeof selector === "string" ) {
                                if ( selector[ 0 ] === "<" &&
                                    selector[ selector.length - 1 ] === ">" &&
                                    selector.length >= 3 ) {

                                    // Assume that strings that start and end with <> are HTML and skip the regex check
                                    match = [ null, selector, null ];

                                } else {
                                    match = rquickExpr.exec( selector );
                                }

                                // Match html or make sure no context is specified for #id
                                if ( match && ( match[ 1 ] || !context ) ) {

                                    // HANDLE: $(html) -> $(array)
                                    if ( match[ 1 ] ) {
                                        context = context instanceof jQuery ? context[ 0 ] : context;

                                        // Option to run scripts is true for back-compat
                                        // Intentionally let the error be thrown if parseHTML is not present
                                        jQuery.merge( this, jQuery.parseHTML(
                                            match[ 1 ],
                                            context && context.nodeType ? context.ownerDocument || context : document,
                                            true
                                        ) );

                                        // HANDLE: $(html, props)
                                        if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
                                            for ( match in context ) {

                                                // Properties of context are called as methods if possible
                                                if ( isFunction( this[ match ] ) ) {
                                                    this[ match ]( context[ match ] );

                                                    // ...and otherwise set as attributes
                                                } else {
                                                    this.attr( match, context[ match ] );
                                                }
                                            }
                                        }

                                        return this;

                                        // HANDLE: $(#id)
                                    } else {
                                        elem = document.getElementById( match[ 2 ] );

                                        if ( elem ) {

                                            // Inject the element directly into the jQuery object
                                            this[ 0 ] = elem;
                                            this.length = 1;
                                        }
                                        return this;
                                    }

                                    // HANDLE: $(expr, $(...))
                                } else if ( !context || context.jquery ) {
                                    return ( context || root ).find( selector );

                                    // HANDLE: $(expr, context)
                                    // (which is just equivalent to: $(context).find(expr)
                                } else {
                                    return this.constructor( context ).find( selector );
                                }

                                // HANDLE: $(DOMElement)
                            } else if ( selector.nodeType ) {
                                this[ 0 ] = selector;
                                this.length = 1;
                                return this;

                                // HANDLE: $(function)
                                // Shortcut for document ready
                            } else if ( isFunction( selector ) ) {
                                return root.ready !== undefined ?
                                    root.ready( selector ) :

                                    // Execute immediately if ready is not present
                                    selector( jQuery );
                            }

                            return jQuery.makeArray( selector, this );
                        };

// Give the init function the jQuery prototype for later instantiation
                    init.prototype = jQuery.fn;

// Initialize central reference
                    rootjQuery = jQuery( document );


                    var rparentsprev = /^(?:parents|prev(?:Until|All))/,

                        // Methods guaranteed to produce a unique set when starting from a unique set
                        guaranteedUnique = {
                            children: true,
                            contents: true,
                            next: true,
                            prev: true
                        };

                    jQuery.fn.extend( {
                        has: function( target ) {
                            var targets = jQuery( target, this ),
                                l = targets.length;

                            return this.filter( function() {
                                var i = 0;
                                for ( ; i < l; i++ ) {
                                    if ( jQuery.contains( this, targets[ i ] ) ) {
                                        return true;
                                    }
                                }
                            } );
                        },

                        closest: function( selectors, context ) {
                            var cur,
                                i = 0,
                                l = this.length,
                                matched = [],
                                targets = typeof selectors !== "string" && jQuery( selectors );

                            // Positional selectors never match, since there's no _selection_ context
                            if ( !rneedsContext.test( selectors ) ) {
                                for ( ; i < l; i++ ) {
                                    for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

                                        // Always skip document fragments
                                        if ( cur.nodeType < 11 && ( targets ?
                                            targets.index( cur ) > -1 :

                                            // Don't pass non-elements to Sizzle
                                            cur.nodeType === 1 &&
                                            jQuery.find.matchesSelector( cur, selectors ) ) ) {

                                            matched.push( cur );
                                            break;
                                        }
                                    }
                                }
                            }

                            return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
                        },

                        // Determine the position of an element within the set
                        index: function( elem ) {

                            // No argument, return index in parent
                            if ( !elem ) {
                                return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
                            }

                            // Index in selector
                            if ( typeof elem === "string" ) {
                                return indexOf.call( jQuery( elem ), this[ 0 ] );
                            }

                            // Locate the position of the desired element
                            return indexOf.call( this,

                                // If it receives a jQuery object, the first element is used
                                elem.jquery ? elem[ 0 ] : elem
                            );
                        },

                        add: function( selector, context ) {
                            return this.pushStack(
                                jQuery.uniqueSort(
                                    jQuery.merge( this.get(), jQuery( selector, context ) )
                                )
                            );
                        },

                        addBack: function( selector ) {
                            return this.add( selector == null ?
                                this.prevObject : this.prevObject.filter( selector )
                            );
                        }
                    } );

                    function sibling( cur, dir ) {
                        while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
                        return cur;
                    }

                    jQuery.each( {
                        parent: function( elem ) {
                            var parent = elem.parentNode;
                            return parent && parent.nodeType !== 11 ? parent : null;
                        },
                        parents: function( elem ) {
                            return dir( elem, "parentNode" );
                        },
                        parentsUntil: function( elem, i, until ) {
                            return dir( elem, "parentNode", until );
                        },
                        next: function( elem ) {
                            return sibling( elem, "nextSibling" );
                        },
                        prev: function( elem ) {
                            return sibling( elem, "previousSibling" );
                        },
                        nextAll: function( elem ) {
                            return dir( elem, "nextSibling" );
                        },
                        prevAll: function( elem ) {
                            return dir( elem, "previousSibling" );
                        },
                        nextUntil: function( elem, i, until ) {
                            return dir( elem, "nextSibling", until );
                        },
                        prevUntil: function( elem, i, until ) {
                            return dir( elem, "previousSibling", until );
                        },
                        siblings: function( elem ) {
                            return siblings( ( elem.parentNode || {} ).firstChild, elem );
                        },
                        children: function( elem ) {
                            return siblings( elem.firstChild );
                        },
                        contents: function( elem ) {
                            if ( nodeName( elem, "iframe" ) ) {
                                return elem.contentDocument;
                            }

                            // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
                            // Treat the template element as a regular one in browsers that
                            // don't support it.
                            if ( nodeName( elem, "template" ) ) {
                                elem = elem.content || elem;
                            }

                            return jQuery.merge( [], elem.childNodes );
                        }
                    }, function( name, fn ) {
                        jQuery.fn[ name ] = function( until, selector ) {
                            var matched = jQuery.map( this, fn, until );

                            if ( name.slice( -5 ) !== "Until" ) {
                                selector = until;
                            }

                            if ( selector && typeof selector === "string" ) {
                                matched = jQuery.filter( selector, matched );
                            }

                            if ( this.length > 1 ) {

                                // Remove duplicates
                                if ( !guaranteedUnique[ name ] ) {
                                    jQuery.uniqueSort( matched );
                                }

                                // Reverse order for parents* and prev-derivatives
                                if ( rparentsprev.test( name ) ) {
                                    matched.reverse();
                                }
                            }

                            return this.pushStack( matched );
                        };
                    } );
                    var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
                    function createOptions( options ) {
                        var object = {};
                        jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
                            object[ flag ] = true;
                        } );
                        return object;
                    }

                    /*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
                    jQuery.Callbacks = function( options ) {

                        // Convert options from String-formatted to Object-formatted if needed
                        // (we check in cache first)
                        options = typeof options === "string" ?
                            createOptions( options ) :
                            jQuery.extend( {}, options );

                        var // Flag to know if list is currently firing
                            firing,

                            // Last fire value for non-forgettable lists
                            memory,

                            // Flag to know if list was already fired
                            fired,

                            // Flag to prevent firing
                            locked,

                            // Actual callback list
                            list = [],

                            // Queue of execution data for repeatable lists
                            queue = [],

                            // Index of currently firing callback (modified by add/remove as needed)
                            firingIndex = -1,

                            // Fire callbacks
                            fire = function() {

                                // Enforce single-firing
                                locked = locked || options.once;

                                // Execute callbacks for all pending executions,
                                // respecting firingIndex overrides and runtime changes
                                fired = firing = true;
                                for ( ; queue.length; firingIndex = -1 ) {
                                    memory = queue.shift();
                                    while ( ++firingIndex < list.length ) {

                                        // Run callback and check for early termination
                                        if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
                                            options.stopOnFalse ) {

                                            // Jump to end and forget the data so .add doesn't re-fire
                                            firingIndex = list.length;
                                            memory = false;
                                        }
                                    }
                                }

                                // Forget the data if we're done with it
                                if ( !options.memory ) {
                                    memory = false;
                                }

                                firing = false;

                                // Clean up if we're done firing for good
                                if ( locked ) {

                                    // Keep an empty list if we have data for future add calls
                                    if ( memory ) {
                                        list = [];

                                        // Otherwise, this object is spent
                                    } else {
                                        list = "";
                                    }
                                }
                            },

                            // Actual Callbacks object
                            self = {

                                // Add a callback or a collection of callbacks to the list
                                add: function() {
                                    if ( list ) {

                                        // If we have memory from a past run, we should fire after adding
                                        if ( memory && !firing ) {
                                            firingIndex = list.length - 1;
                                            queue.push( memory );
                                        }

                                        ( function add( args ) {
                                            jQuery.each( args, function( _, arg ) {
                                                if ( isFunction( arg ) ) {
                                                    if ( !options.unique || !self.has( arg ) ) {
                                                        list.push( arg );
                                                    }
                                                } else if ( arg && arg.length && toType( arg ) !== "string" ) {

                                                    // Inspect recursively
                                                    add( arg );
                                                }
                                            } );
                                        } )( arguments );

                                        if ( memory && !firing ) {
                                            fire();
                                        }
                                    }
                                    return this;
                                },

                                // Remove a callback from the list
                                remove: function() {
                                    jQuery.each( arguments, function( _, arg ) {
                                        var index;
                                        while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
                                            list.splice( index, 1 );

                                            // Handle firing indexes
                                            if ( index <= firingIndex ) {
                                                firingIndex--;
                                            }
                                        }
                                    } );
                                    return this;
                                },

                                // Check if a given callback is in the list.
                                // If no argument is given, return whether or not list has callbacks attached.
                                has: function( fn ) {
                                    return fn ?
                                        jQuery.inArray( fn, list ) > -1 :
                                        list.length > 0;
                                },

                                // Remove all callbacks from the list
                                empty: function() {
                                    if ( list ) {
                                        list = [];
                                    }
                                    return this;
                                },

                                // Disable .fire and .add
                                // Abort any current/pending executions
                                // Clear all callbacks and values
                                disable: function() {
                                    locked = queue = [];
                                    list = memory = "";
                                    return this;
                                },
                                disabled: function() {
                                    return !list;
                                },

                                // Disable .fire
                                // Also disable .add unless we have memory (since it would have no effect)
                                // Abort any pending executions
                                lock: function() {
                                    locked = queue = [];
                                    if ( !memory && !firing ) {
                                        list = memory = "";
                                    }
                                    return this;
                                },
                                locked: function() {
                                    return !!locked;
                                },

                                // Call all callbacks with the given context and arguments
                                fireWith: function( context, args ) {
                                    if ( !locked ) {
                                        args = args || [];
                                        args = [ context, args.slice ? args.slice() : args ];
                                        queue.push( args );
                                        if ( !firing ) {
                                            fire();
                                        }
                                    }
                                    return this;
                                },

                                // Call all the callbacks with the given arguments
                                fire: function() {
                                    self.fireWith( this, arguments );
                                    return this;
                                },

                                // To know if the callbacks have already been called at least once
                                fired: function() {
                                    return !!fired;
                                }
                            };

                        return self;
                    };


                    function Identity( v ) {
                        return v;
                    }
                    function Thrower( ex ) {
                        throw ex;
                    }

                    function adoptValue( value, resolve, reject, noValue ) {
                        var method;

                        try {

                            // Check for promise aspect first to privilege synchronous behavior
                            if ( value && isFunction( ( method = value.promise ) ) ) {
                                method.call( value ).done( resolve ).fail( reject );

                                // Other thenables
                            } else if ( value && isFunction( ( method = value.then ) ) ) {
                                method.call( value, resolve, reject );

                                // Other non-thenables
                            } else {

                                // Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
                                // * false: [ value ].slice( 0 ) => resolve( value )
                                // * true: [ value ].slice( 1 ) => resolve()
                                resolve.apply( undefined, [ value ].slice( noValue ) );
                            }

                            // For Promises/A+, convert exceptions into rejections
                            // Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
                            // Deferred#then to conditionally suppress rejection.
                        } catch ( value ) {

                            // Support: Android 4.0 only
                            // Strict mode functions invoked without .call/.apply get global-object context
                            reject.apply( undefined, [ value ] );
                        }
                    }

                    jQuery.extend( {

                        Deferred: function( func ) {
                            var tuples = [

                                    // action, add listener, callbacks,
                                    // ... .then handlers, argument index, [final state]
                                    [ "notify", "progress", jQuery.Callbacks( "memory" ),
                                        jQuery.Callbacks( "memory" ), 2 ],
                                    [ "resolve", "done", jQuery.Callbacks( "once memory" ),
                                        jQuery.Callbacks( "once memory" ), 0, "resolved" ],
                                    [ "reject", "fail", jQuery.Callbacks( "once memory" ),
                                        jQuery.Callbacks( "once memory" ), 1, "rejected" ]
                                ],
                                state = "pending",
                                promise = {
                                    state: function() {
                                        return state;
                                    },
                                    always: function() {
                                        deferred.done( arguments ).fail( arguments );
                                        return this;
                                    },
                                    "catch": function( fn ) {
                                        return promise.then( null, fn );
                                    },

                                    // Keep pipe for back-compat
                                    pipe: function( /* fnDone, fnFail, fnProgress */ ) {
                                        var fns = arguments;

                                        return jQuery.Deferred( function( newDefer ) {
                                            jQuery.each( tuples, function( i, tuple ) {

                                                // Map tuples (progress, done, fail) to arguments (done, fail, progress)
                                                var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

                                                // deferred.progress(function() { bind to newDefer or newDefer.notify })
                                                // deferred.done(function() { bind to newDefer or newDefer.resolve })
                                                // deferred.fail(function() { bind to newDefer or newDefer.reject })
                                                deferred[ tuple[ 1 ] ]( function() {
                                                    var returned = fn && fn.apply( this, arguments );
                                                    if ( returned && isFunction( returned.promise ) ) {
                                                        returned.promise()
                                                            .progress( newDefer.notify )
                                                            .done( newDefer.resolve )
                                                            .fail( newDefer.reject );
                                                    } else {
                                                        newDefer[ tuple[ 0 ] + "With" ](
                                                            this,
                                                            fn ? [ returned ] : arguments
                                                        );
                                                    }
                                                } );
                                            } );
                                            fns = null;
                                        } ).promise();
                                    },
                                    then: function( onFulfilled, onRejected, onProgress ) {
                                        var maxDepth = 0;
                                        function resolve( depth, deferred, handler, special ) {
                                            return function() {
                                                var that = this,
                                                    args = arguments,
                                                    mightThrow = function() {
                                                        var returned, then;

                                                        // Support: Promises/A+ section 2.3.3.3.3
                                                        // https://promisesaplus.com/#point-59
                                                        // Ignore double-resolution attempts
                                                        if ( depth < maxDepth ) {
                                                            return;
                                                        }

                                                        returned = handler.apply( that, args );

                                                        // Support: Promises/A+ section 2.3.1
                                                        // https://promisesaplus.com/#point-48
                                                        if ( returned === deferred.promise() ) {
                                                            throw new TypeError( "Thenable self-resolution" );
                                                        }

                                                        // Support: Promises/A+ sections 2.3.3.1, 3.5
                                                        // https://promisesaplus.com/#point-54
                                                        // https://promisesaplus.com/#point-75
                                                        // Retrieve `then` only once
                                                        then = returned &&

                                                            // Support: Promises/A+ section 2.3.4
                                                            // https://promisesaplus.com/#point-64
                                                            // Only check objects and functions for thenability
                                                            ( typeof returned === "object" ||
                                                                typeof returned === "function" ) &&
                                                            returned.then;

                                                        // Handle a returned thenable
                                                        if ( isFunction( then ) ) {

                                                            // Special processors (notify) just wait for resolution
                                                            if ( special ) {
                                                                then.call(
                                                                    returned,
                                                                    resolve( maxDepth, deferred, Identity, special ),
                                                                    resolve( maxDepth, deferred, Thrower, special )
                                                                );

                                                                // Normal processors (resolve) also hook into progress
                                                            } else {

                                                                // ...and disregard older resolution values
                                                                maxDepth++;

                                                                then.call(
                                                                    returned,
                                                                    resolve( maxDepth, deferred, Identity, special ),
                                                                    resolve( maxDepth, deferred, Thrower, special ),
                                                                    resolve( maxDepth, deferred, Identity,
                                                                        deferred.notifyWith )
                                                                );
                                                            }

                                                            // Handle all other returned values
                                                        } else {

                                                            // Only substitute handlers pass on context
                                                            // and multiple values (non-spec behavior)
                                                            if ( handler !== Identity ) {
                                                                that = undefined;
                                                                args = [ returned ];
                                                            }

                                                            // Process the value(s)
                                                            // Default process is resolve
                                                            ( special || deferred.resolveWith )( that, args );
                                                        }
                                                    },

                                                    // Only normal processors (resolve) catch and reject exceptions
                                                    process = special ?
                                                        mightThrow :
                                                        function() {
                                                            try {
                                                                mightThrow();
                                                            } catch ( e ) {

                                                                if ( jQuery.Deferred.exceptionHook ) {
                                                                    jQuery.Deferred.exceptionHook( e,
                                                                        process.stackTrace );
                                                                }

                                                                // Support: Promises/A+ section 2.3.3.3.4.1
                                                                // https://promisesaplus.com/#point-61
                                                                // Ignore post-resolution exceptions
                                                                if ( depth + 1 >= maxDepth ) {

                                                                    // Only substitute handlers pass on context
                                                                    // and multiple values (non-spec behavior)
                                                                    if ( handler !== Thrower ) {
                                                                        that = undefined;
                                                                        args = [ e ];
                                                                    }

                                                                    deferred.rejectWith( that, args );
                                                                }
                                                            }
                                                        };

                                                // Support: Promises/A+ section 2.3.3.3.1
                                                // https://promisesaplus.com/#point-57
                                                // Re-resolve promises immediately to dodge false rejection from
                                                // subsequent errors
                                                if ( depth ) {
                                                    process();
                                                } else {

                                                    // Call an optional hook to record the stack, in case of exception
                                                    // since it's otherwise lost when execution goes async
                                                    if ( jQuery.Deferred.getStackHook ) {
                                                        process.stackTrace = jQuery.Deferred.getStackHook();
                                                    }
                                                    window.setTimeout( process );
                                                }
                                            };
                                        }

                                        return jQuery.Deferred( function( newDefer ) {

                                            // progress_handlers.add( ... )
                                            tuples[ 0 ][ 3 ].add(
                                                resolve(
                                                    0,
                                                    newDefer,
                                                    isFunction( onProgress ) ?
                                                        onProgress :
                                                        Identity,
                                                    newDefer.notifyWith
                                                )
                                            );

                                            // fulfilled_handlers.add( ... )
                                            tuples[ 1 ][ 3 ].add(
                                                resolve(
                                                    0,
                                                    newDefer,
                                                    isFunction( onFulfilled ) ?
                                                        onFulfilled :
                                                        Identity
                                                )
                                            );

                                            // rejected_handlers.add( ... )
                                            tuples[ 2 ][ 3 ].add(
                                                resolve(
                                                    0,
                                                    newDefer,
                                                    isFunction( onRejected ) ?
                                                        onRejected :
                                                        Thrower
                                                )
                                            );
                                        } ).promise();
                                    },

                                    // Get a promise for this deferred
                                    // If obj is provided, the promise aspect is added to the object
                                    promise: function( obj ) {
                                        return obj != null ? jQuery.extend( obj, promise ) : promise;
                                    }
                                },
                                deferred = {};

                            // Add list-specific methods
                            jQuery.each( tuples, function( i, tuple ) {
                                var list = tuple[ 2 ],
                                    stateString = tuple[ 5 ];

                                // promise.progress = list.add
                                // promise.done = list.add
                                // promise.fail = list.add
                                promise[ tuple[ 1 ] ] = list.add;

                                // Handle state
                                if ( stateString ) {
                                    list.add(
                                        function() {

                                            // state = "resolved" (i.e., fulfilled)
                                            // state = "rejected"
                                            state = stateString;
                                        },

                                        // rejected_callbacks.disable
                                        // fulfilled_callbacks.disable
                                        tuples[ 3 - i ][ 2 ].disable,

                                        // rejected_handlers.disable
                                        // fulfilled_handlers.disable
                                        tuples[ 3 - i ][ 3 ].disable,

                                        // progress_callbacks.lock
                                        tuples[ 0 ][ 2 ].lock,

                                        // progress_handlers.lock
                                        tuples[ 0 ][ 3 ].lock
                                    );
                                }

                                // progress_handlers.fire
                                // fulfilled_handlers.fire
                                // rejected_handlers.fire
                                list.add( tuple[ 3 ].fire );

                                // deferred.notify = function() { deferred.notifyWith(...) }
                                // deferred.resolve = function() { deferred.resolveWith(...) }
                                // deferred.reject = function() { deferred.rejectWith(...) }
                                deferred[ tuple[ 0 ] ] = function() {
                                    deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
                                    return this;
                                };

                                // deferred.notifyWith = list.fireWith
                                // deferred.resolveWith = list.fireWith
                                // deferred.rejectWith = list.fireWith
                                deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
                            } );

                            // Make the deferred a promise
                            promise.promise( deferred );

                            // Call given func if any
                            if ( func ) {
                                func.call( deferred, deferred );
                            }

                            // All done!
                            return deferred;
                        },

                        // Deferred helper
                        when: function( singleValue ) {
                            var

                                // count of uncompleted subordinates
                                remaining = arguments.length,

                                // count of unprocessed arguments
                                i = remaining,

                                // subordinate fulfillment data
                                resolveContexts = Array( i ),
                                resolveValues = slice.call( arguments ),

                                // the master Deferred
                                master = jQuery.Deferred(),

                                // subordinate callback factory
                                updateFunc = function( i ) {
                                    return function( value ) {
                                        resolveContexts[ i ] = this;
                                        resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
                                        if ( !( --remaining ) ) {
                                            master.resolveWith( resolveContexts, resolveValues );
                                        }
                                    };
                                };

                            // Single- and empty arguments are adopted like Promise.resolve
                            if ( remaining <= 1 ) {
                                adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
                                    !remaining );

                                // Use .then() to unwrap secondary thenables (cf. gh-3000)
                                if ( master.state() === "pending" ||
                                    isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

                                    return master.then();
                                }
                            }

                            // Multiple arguments are aggregated like Promise.all array elements
                            while ( i-- ) {
                                adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
                            }

                            return master.promise();
                        }
                    } );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
                    var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

                    jQuery.Deferred.exceptionHook = function( error, stack ) {

                        // Support: IE 8 - 9 only
                        // Console exists when dev tools are open, which can happen at any time
                        if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
                            window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
                        }
                    };




                    jQuery.readyException = function( error ) {
                        window.setTimeout( function() {
                            throw error;
                        } );
                    };




// The deferred used on DOM ready
                    var readyList = jQuery.Deferred();

                    jQuery.fn.ready = function( fn ) {

                        readyList
                            .then( fn )

                            // Wrap jQuery.readyException in a function so that the lookup
                            // happens at the time of error handling instead of callback
                            // registration.
                            .catch( function( error ) {
                                jQuery.readyException( error );
                            } );

                        return this;
                    };

                    jQuery.extend( {

                        // Is the DOM ready to be used? Set to true once it occurs.
                        isReady: false,

                        // A counter to track how many items to wait for before
                        // the ready event fires. See #6781
                        readyWait: 1,

                        // Handle when the DOM is ready
                        ready: function( wait ) {

                            // Abort if there are pending holds or we're already ready
                            if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
                                return;
                            }

                            // Remember that the DOM is ready
                            jQuery.isReady = true;

                            // If a normal DOM Ready event fired, decrement, and wait if need be
                            if ( wait !== true && --jQuery.readyWait > 0 ) {
                                return;
                            }

                            // If there are functions bound, to execute
                            readyList.resolveWith( document, [ jQuery ] );
                        }
                    } );

                    jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
                    function completed() {
                        document.removeEventListener( "DOMContentLoaded", completed );
                        window.removeEventListener( "load", completed );
                        jQuery.ready();
                    }

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
                    if ( document.readyState === "complete" ||
                        ( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

                        // Handle it asynchronously to allow scripts the opportunity to delay ready
                        window.setTimeout( jQuery.ready );

                    } else {

                        // Use the handy event callback
                        document.addEventListener( "DOMContentLoaded", completed );

                        // A fallback to window.onload, that will always work
                        window.addEventListener( "load", completed );
                    }




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
                    var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
                        var i = 0,
                            len = elems.length,
                            bulk = key == null;

                        // Sets many values
                        if ( toType( key ) === "object" ) {
                            chainable = true;
                            for ( i in key ) {
                                access( elems, fn, i, key[ i ], true, emptyGet, raw );
                            }

                            // Sets one value
                        } else if ( value !== undefined ) {
                            chainable = true;

                            if ( !isFunction( value ) ) {
                                raw = true;
                            }

                            if ( bulk ) {

                                // Bulk operations run against the entire set
                                if ( raw ) {
                                    fn.call( elems, value );
                                    fn = null;

                                    // ...except when executing function values
                                } else {
                                    bulk = fn;
                                    fn = function( elem, key, value ) {
                                        return bulk.call( jQuery( elem ), value );
                                    };
                                }
                            }

                            if ( fn ) {
                                for ( ; i < len; i++ ) {
                                    fn(
                                        elems[ i ], key, raw ?
                                            value :
                                            value.call( elems[ i ], i, fn( elems[ i ], key ) )
                                    );
                                }
                            }
                        }

                        if ( chainable ) {
                            return elems;
                        }

                        // Gets
                        if ( bulk ) {
                            return fn.call( elems );
                        }

                        return len ? fn( elems[ 0 ], key ) : emptyGet;
                    };


// Matches dashed string for camelizing
                    var rmsPrefix = /^-ms-/,
                        rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
                    function fcamelCase( all, letter ) {
                        return letter.toUpperCase();
                    }

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
                    function camelCase( string ) {
                        return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
                    }
                    var acceptData = function( owner ) {

                        // Accepts only:
                        //  - Node
                        //    - Node.ELEMENT_NODE
                        //    - Node.DOCUMENT_NODE
                        //  - Object
                        //    - Any
                        return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
                    };




                    function Data() {
                        this.expando = jQuery.expando + Data.uid++;
                    }

                    Data.uid = 1;

                    Data.prototype = {

                        cache: function( owner ) {

                            // Check if the owner object already has a cache
                            var value = owner[ this.expando ];

                            // If not, create one
                            if ( !value ) {
                                value = {};

                                // We can accept data for non-element nodes in modern browsers,
                                // but we should not, see #8335.
                                // Always return an empty object.
                                if ( acceptData( owner ) ) {

                                    // If it is a node unlikely to be stringify-ed or looped over
                                    // use plain assignment
                                    if ( owner.nodeType ) {
                                        owner[ this.expando ] = value;

                                        // Otherwise secure it in a non-enumerable property
                                        // configurable must be true to allow the property to be
                                        // deleted when data is removed
                                    } else {
                                        Object.defineProperty( owner, this.expando, {
                                            value: value,
                                            configurable: true
                                        } );
                                    }
                                }
                            }

                            return value;
                        },
                        set: function( owner, data, value ) {
                            var prop,
                                cache = this.cache( owner );

                            // Handle: [ owner, key, value ] args
                            // Always use camelCase key (gh-2257)
                            if ( typeof data === "string" ) {
                                cache[ camelCase( data ) ] = value;

                                // Handle: [ owner, { properties } ] args
                            } else {

                                // Copy the properties one-by-one to the cache object
                                for ( prop in data ) {
                                    cache[ camelCase( prop ) ] = data[ prop ];
                                }
                            }
                            return cache;
                        },
                        get: function( owner, key ) {
                            return key === undefined ?
                                this.cache( owner ) :

                                // Always use camelCase key (gh-2257)
                                owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
                        },
                        access: function( owner, key, value ) {

                            // In cases where either:
                            //
                            //   1. No key was specified
                            //   2. A string key was specified, but no value provided
                            //
                            // Take the "read" path and allow the get method to determine
                            // which value to return, respectively either:
                            //
                            //   1. The entire cache object
                            //   2. The data stored at the key
                            //
                            if ( key === undefined ||
                                ( ( key && typeof key === "string" ) && value === undefined ) ) {

                                return this.get( owner, key );
                            }

                            // When the key is not a string, or both a key and value
                            // are specified, set or extend (existing objects) with either:
                            //
                            //   1. An object of properties
                            //   2. A key and value
                            //
                            this.set( owner, key, value );

                            // Since the "set" path can have two possible entry points
                            // return the expected data based on which path was taken[*]
                            return value !== undefined ? value : key;
                        },
                        remove: function( owner, key ) {
                            var i,
                                cache = owner[ this.expando ];

                            if ( cache === undefined ) {
                                return;
                            }

                            if ( key !== undefined ) {

                                // Support array or space separated string of keys
                                if ( Array.isArray( key ) ) {

                                    // If key is an array of keys...
                                    // We always set camelCase keys, so remove that.
                                    key = key.map( camelCase );
                                } else {
                                    key = camelCase( key );

                                    // If a key with the spaces exists, use it.
                                    // Otherwise, create an array by matching non-whitespace
                                    key = key in cache ?
                                        [ key ] :
                                        ( key.match( rnothtmlwhite ) || [] );
                                }

                                i = key.length;

                                while ( i-- ) {
                                    delete cache[ key[ i ] ];
                                }
                            }

                            // Remove the expando if there's no more data
                            if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

                                // Support: Chrome <=35 - 45
                                // Webkit & Blink performance suffers when deleting properties
                                // from DOM nodes, so set to undefined instead
                                // https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
                                if ( owner.nodeType ) {
                                    owner[ this.expando ] = undefined;
                                } else {
                                    delete owner[ this.expando ];
                                }
                            }
                        },
                        hasData: function( owner ) {
                            var cache = owner[ this.expando ];
                            return cache !== undefined && !jQuery.isEmptyObject( cache );
                        }
                    };
                    var dataPriv = new Data();

                    var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

                    var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
                        rmultiDash = /[A-Z]/g;

                    function getData( data ) {
                        if ( data === "true" ) {
                            return true;
                        }

                        if ( data === "false" ) {
                            return false;
                        }

                        if ( data === "null" ) {
                            return null;
                        }

                        // Only convert to a number if it doesn't change the string
                        if ( data === +data + "" ) {
                            return +data;
                        }

                        if ( rbrace.test( data ) ) {
                            return JSON.parse( data );
                        }

                        return data;
                    }

                    function dataAttr( elem, key, data ) {
                        var name;

                        // If nothing was found internally, try to fetch any
                        // data from the HTML5 data-* attribute
                        if ( data === undefined && elem.nodeType === 1 ) {
                            name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
                            data = elem.getAttribute( name );

                            if ( typeof data === "string" ) {
                                try {
                                    data = getData( data );
                                } catch ( e ) {}

                                // Make sure we set the data so it isn't changed later
                                dataUser.set( elem, key, data );
                            } else {
                                data = undefined;
                            }
                        }
                        return data;
                    }

                    jQuery.extend( {
                        hasData: function( elem ) {
                            return dataUser.hasData( elem ) || dataPriv.hasData( elem );
                        },

                        data: function( elem, name, data ) {
                            return dataUser.access( elem, name, data );
                        },

                        removeData: function( elem, name ) {
                            dataUser.remove( elem, name );
                        },

                        // TODO: Now that all calls to _data and _removeData have been replaced
                        // with direct calls to dataPriv methods, these can be deprecated.
                        _data: function( elem, name, data ) {
                            return dataPriv.access( elem, name, data );
                        },

                        _removeData: function( elem, name ) {
                            dataPriv.remove( elem, name );
                        }
                    } );

                    jQuery.fn.extend( {
                        data: function( key, value ) {
                            var i, name, data,
                                elem = this[ 0 ],
                                attrs = elem && elem.attributes;

                            // Gets all values
                            if ( key === undefined ) {
                                if ( this.length ) {
                                    data = dataUser.get( elem );

                                    if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
                                        i = attrs.length;
                                        while ( i-- ) {

                                            // Support: IE 11 only
                                            // The attrs elements can be null (#14894)
                                            if ( attrs[ i ] ) {
                                                name = attrs[ i ].name;
                                                if ( name.indexOf( "data-" ) === 0 ) {
                                                    name = camelCase( name.slice( 5 ) );
                                                    dataAttr( elem, name, data[ name ] );
                                                }
                                            }
                                        }
                                        dataPriv.set( elem, "hasDataAttrs", true );
                                    }
                                }

                                return data;
                            }

                            // Sets multiple values
                            if ( typeof key === "object" ) {
                                return this.each( function() {
                                    dataUser.set( this, key );
                                } );
                            }

                            return access( this, function( value ) {
                                var data;

                                // The calling jQuery object (element matches) is not empty
                                // (and therefore has an element appears at this[ 0 ]) and the
                                // `value` parameter was not undefined. An empty jQuery object
                                // will result in `undefined` for elem = this[ 0 ] which will
                                // throw an exception if an attempt to read a data cache is made.
                                if ( elem && value === undefined ) {

                                    // Attempt to get data from the cache
                                    // The key will always be camelCased in Data
                                    data = dataUser.get( elem, key );
                                    if ( data !== undefined ) {
                                        return data;
                                    }

                                    // Attempt to "discover" the data in
                                    // HTML5 custom data-* attrs
                                    data = dataAttr( elem, key );
                                    if ( data !== undefined ) {
                                        return data;
                                    }

                                    // We tried really hard, but the data doesn't exist.
                                    return;
                                }

                                // Set the data...
                                this.each( function() {

                                    // We always store the camelCased key
                                    dataUser.set( this, key, value );
                                } );
                            }, null, value, arguments.length > 1, null, true );
                        },

                        removeData: function( key ) {
                            return this.each( function() {
                                dataUser.remove( this, key );
                            } );
                        }
                    } );


                    jQuery.extend( {
                        queue: function( elem, type, data ) {
                            var queue;

                            if ( elem ) {
                                type = ( type || "fx" ) + "queue";
                                queue = dataPriv.get( elem, type );

                                // Speed up dequeue by getting out quickly if this is just a lookup
                                if ( data ) {
                                    if ( !queue || Array.isArray( data ) ) {
                                        queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
                                    } else {
                                        queue.push( data );
                                    }
                                }
                                return queue || [];
                            }
                        },

                        dequeue: function( elem, type ) {
                            type = type || "fx";

                            var queue = jQuery.queue( elem, type ),
                                startLength = queue.length,
                                fn = queue.shift(),
                                hooks = jQuery._queueHooks( elem, type ),
                                next = function() {
                                    jQuery.dequeue( elem, type );
                                };

                            // If the fx queue is dequeued, always remove the progress sentinel
                            if ( fn === "inprogress" ) {
                                fn = queue.shift();
                                startLength--;
                            }

                            if ( fn ) {

                                // Add a progress sentinel to prevent the fx queue from being
                                // automatically dequeued
                                if ( type === "fx" ) {
                                    queue.unshift( "inprogress" );
                                }

                                // Clear up the last queue stop function
                                delete hooks.stop;
                                fn.call( elem, next, hooks );
                            }

                            if ( !startLength && hooks ) {
                                hooks.empty.fire();
                            }
                        },

                        // Not public - generate a queueHooks object, or return the current one
                        _queueHooks: function( elem, type ) {
                            var key = type + "queueHooks";
                            return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
                                empty: jQuery.Callbacks( "once memory" ).add( function() {
                                    dataPriv.remove( elem, [ type + "queue", key ] );
                                } )
                            } );
                        }
                    } );

                    jQuery.fn.extend( {
                        queue: function( type, data ) {
                            var setter = 2;

                            if ( typeof type !== "string" ) {
                                data = type;
                                type = "fx";
                                setter--;
                            }

                            if ( arguments.length < setter ) {
                                return jQuery.queue( this[ 0 ], type );
                            }

                            return data === undefined ?
                                this :
                                this.each( function() {
                                    var queue = jQuery.queue( this, type, data );

                                    // Ensure a hooks for this queue
                                    jQuery._queueHooks( this, type );

                                    if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
                                        jQuery.dequeue( this, type );
                                    }
                                } );
                        },
                        dequeue: function( type ) {
                            return this.each( function() {
                                jQuery.dequeue( this, type );
                            } );
                        },
                        clearQueue: function( type ) {
                            return this.queue( type || "fx", [] );
                        },

                        // Get a promise resolved when queues of a certain type
                        // are emptied (fx is the type by default)
                        promise: function( type, obj ) {
                            var tmp,
                                count = 1,
                                defer = jQuery.Deferred(),
                                elements = this,
                                i = this.length,
                                resolve = function() {
                                    if ( !( --count ) ) {
                                        defer.resolveWith( elements, [ elements ] );
                                    }
                                };

                            if ( typeof type !== "string" ) {
                                obj = type;
                                type = undefined;
                            }
                            type = type || "fx";

                            while ( i-- ) {
                                tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
                                if ( tmp && tmp.empty ) {
                                    count++;
                                    tmp.empty.add( resolve );
                                }
                            }
                            resolve();
                            return defer.promise( obj );
                        }
                    } );
                    var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

                    var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


                    var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

                    var isHiddenWithinTree = function( elem, el ) {

                        // isHiddenWithinTree might be called from jQuery#filter function;
                        // in that case, element will be second argument
                        elem = el || elem;

                        // Inline style trumps all
                        return elem.style.display === "none" ||
                            elem.style.display === "" &&

                            // Otherwise, check computed style
                            // Support: Firefox <=43 - 45
                            // Disconnected elements can have computed display: none, so first confirm that elem is
                            // in the document.
                            jQuery.contains( elem.ownerDocument, elem ) &&

                            jQuery.css( elem, "display" ) === "none";
                    };

                    var swap = function( elem, options, callback, args ) {
                        var ret, name,
                            old = {};

                        // Remember the old values, and insert the new ones
                        for ( name in options ) {
                            old[ name ] = elem.style[ name ];
                            elem.style[ name ] = options[ name ];
                        }

                        ret = callback.apply( elem, args || [] );

                        // Revert the old values
                        for ( name in options ) {
                            elem.style[ name ] = old[ name ];
                        }

                        return ret;
                    };




                    function adjustCSS( elem, prop, valueParts, tween ) {
                        var adjusted, scale,
                            maxIterations = 20,
                            currentValue = tween ?
                                function() {
                                    return tween.cur();
                                } :
                                function() {
                                    return jQuery.css( elem, prop, "" );
                                },
                            initial = currentValue(),
                            unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

                            // Starting value computation is required for potential unit mismatches
                            initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
                                rcssNum.exec( jQuery.css( elem, prop ) );

                        if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

                            // Support: Firefox <=54
                            // Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
                            initial = initial / 2;

                            // Trust units reported by jQuery.css
                            unit = unit || initialInUnit[ 3 ];

                            // Iteratively approximate from a nonzero starting point
                            initialInUnit = +initial || 1;

                            while ( maxIterations-- ) {

                                // Evaluate and update our best guess (doubling guesses that zero out).
                                // Finish if the scale equals or crosses 1 (making the old*new product non-positive).
                                jQuery.style( elem, prop, initialInUnit + unit );
                                if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
                                    maxIterations = 0;
                                }
                                initialInUnit = initialInUnit / scale;

                            }

                            initialInUnit = initialInUnit * 2;
                            jQuery.style( elem, prop, initialInUnit + unit );

                            // Make sure we update the tween properties later on
                            valueParts = valueParts || [];
                        }

                        if ( valueParts ) {
                            initialInUnit = +initialInUnit || +initial || 0;

                            // Apply relative offset (+=/-=) if specified
                            adjusted = valueParts[ 1 ] ?
                                initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
                                +valueParts[ 2 ];
                            if ( tween ) {
                                tween.unit = unit;
                                tween.start = initialInUnit;
                                tween.end = adjusted;
                            }
                        }
                        return adjusted;
                    }


                    var defaultDisplayMap = {};

                    function getDefaultDisplay( elem ) {
                        var temp,
                            doc = elem.ownerDocument,
                            nodeName = elem.nodeName,
                            display = defaultDisplayMap[ nodeName ];

                        if ( display ) {
                            return display;
                        }

                        temp = doc.body.appendChild( doc.createElement( nodeName ) );
                        display = jQuery.css( temp, "display" );

                        temp.parentNode.removeChild( temp );

                        if ( display === "none" ) {
                            display = "block";
                        }
                        defaultDisplayMap[ nodeName ] = display;

                        return display;
                    }

                    function showHide( elements, show ) {
                        var display, elem,
                            values = [],
                            index = 0,
                            length = elements.length;

                        // Determine new display value for elements that need to change
                        for ( ; index < length; index++ ) {
                            elem = elements[ index ];
                            if ( !elem.style ) {
                                continue;
                            }

                            display = elem.style.display;
                            if ( show ) {

                                // Since we force visibility upon cascade-hidden elements, an immediate (and slow)
                                // check is required in this first loop unless we have a nonempty display value (either
                                // inline or about-to-be-restored)
                                if ( display === "none" ) {
                                    values[ index ] = dataPriv.get( elem, "display" ) || null;
                                    if ( !values[ index ] ) {
                                        elem.style.display = "";
                                    }
                                }
                                if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
                                    values[ index ] = getDefaultDisplay( elem );
                                }
                            } else {
                                if ( display !== "none" ) {
                                    values[ index ] = "none";

                                    // Remember what we're overwriting
                                    dataPriv.set( elem, "display", display );
                                }
                            }
                        }

                        // Set the display of the elements in a second loop to avoid constant reflow
                        for ( index = 0; index < length; index++ ) {
                            if ( values[ index ] != null ) {
                                elements[ index ].style.display = values[ index ];
                            }
                        }

                        return elements;
                    }

                    jQuery.fn.extend( {
                        show: function() {
                            return showHide( this, true );
                        },
                        hide: function() {
                            return showHide( this );
                        },
                        toggle: function( state ) {
                            if ( typeof state === "boolean" ) {
                                return state ? this.show() : this.hide();
                            }

                            return this.each( function() {
                                if ( isHiddenWithinTree( this ) ) {
                                    jQuery( this ).show();
                                } else {
                                    jQuery( this ).hide();
                                }
                            } );
                        }
                    } );
                    var rcheckableType = ( /^(?:checkbox|radio)$/i );

                    var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

                    var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
                    var wrapMap = {

                        // Support: IE <=9 only
                        option: [ 1, "<select multiple='multiple'>", "</select>" ],

                        // XHTML parsers do not magically insert elements in the
                        // same way that tag soup parsers do. So we cannot shorten
                        // this by omitting <tbody> or other required elements.
                        thead: [ 1, "<table>", "</table>" ],
                        col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
                        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
                        td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

                        _default: [ 0, "", "" ]
                    };

// Support: IE <=9 only
                    wrapMap.optgroup = wrapMap.option;

                    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
                    wrapMap.th = wrapMap.td;


                    function getAll( context, tag ) {

                        // Support: IE <=9 - 11 only
                        // Use typeof to avoid zero-argument method invocation on host objects (#15151)
                        var ret;

                        if ( typeof context.getElementsByTagName !== "undefined" ) {
                            ret = context.getElementsByTagName( tag || "*" );

                        } else if ( typeof context.querySelectorAll !== "undefined" ) {
                            ret = context.querySelectorAll( tag || "*" );

                        } else {
                            ret = [];
                        }

                        if ( tag === undefined || tag && nodeName( context, tag ) ) {
                            return jQuery.merge( [ context ], ret );
                        }

                        return ret;
                    }


// Mark scripts as having already been evaluated
                    function setGlobalEval( elems, refElements ) {
                        var i = 0,
                            l = elems.length;

                        for ( ; i < l; i++ ) {
                            dataPriv.set(
                                elems[ i ],
                                "globalEval",
                                !refElements || dataPriv.get( refElements[ i ], "globalEval" )
                            );
                        }
                    }


                    var rhtml = /<|&#?\w+;/;

                    function buildFragment( elems, context, scripts, selection, ignored ) {
                        var elem, tmp, tag, wrap, contains, j,
                            fragment = context.createDocumentFragment(),
                            nodes = [],
                            i = 0,
                            l = elems.length;

                        for ( ; i < l; i++ ) {
                            elem = elems[ i ];

                            if ( elem || elem === 0 ) {

                                // Add nodes directly
                                if ( toType( elem ) === "object" ) {

                                    // Support: Android <=4.0 only, PhantomJS 1 only
                                    // push.apply(_, arraylike) throws on ancient WebKit
                                    jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

                                    // Convert non-html into a text node
                                } else if ( !rhtml.test( elem ) ) {
                                    nodes.push( context.createTextNode( elem ) );

                                    // Convert html into DOM nodes
                                } else {
                                    tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

                                    // Deserialize a standard representation
                                    tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
                                    wrap = wrapMap[ tag ] || wrapMap._default;
                                    tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

                                    // Descend through wrappers to the right content
                                    j = wrap[ 0 ];
                                    while ( j-- ) {
                                        tmp = tmp.lastChild;
                                    }

                                    // Support: Android <=4.0 only, PhantomJS 1 only
                                    // push.apply(_, arraylike) throws on ancient WebKit
                                    jQuery.merge( nodes, tmp.childNodes );

                                    // Remember the top-level container
                                    tmp = fragment.firstChild;

                                    // Ensure the created nodes are orphaned (#12392)
                                    tmp.textContent = "";
                                }
                            }
                        }

                        // Remove wrapper from fragment
                        fragment.textContent = "";

                        i = 0;
                        while ( ( elem = nodes[ i++ ] ) ) {

                            // Skip elements already in the context collection (trac-4087)
                            if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
                                if ( ignored ) {
                                    ignored.push( elem );
                                }
                                continue;
                            }

                            contains = jQuery.contains( elem.ownerDocument, elem );

                            // Append to fragment
                            tmp = getAll( fragment.appendChild( elem ), "script" );

                            // Preserve script evaluation history
                            if ( contains ) {
                                setGlobalEval( tmp );
                            }

                            // Capture executables
                            if ( scripts ) {
                                j = 0;
                                while ( ( elem = tmp[ j++ ] ) ) {
                                    if ( rscriptType.test( elem.type || "" ) ) {
                                        scripts.push( elem );
                                    }
                                }
                            }
                        }

                        return fragment;
                    }


                    ( function() {
                        var fragment = document.createDocumentFragment(),
                            div = fragment.appendChild( document.createElement( "div" ) ),
                            input = document.createElement( "input" );

                        // Support: Android 4.0 - 4.3 only
                        // Check state lost if the name is set (#11217)
                        // Support: Windows Web Apps (WWA)
                        // `name` and `type` must use .setAttribute for WWA (#14901)
                        input.setAttribute( "type", "radio" );
                        input.setAttribute( "checked", "checked" );
                        input.setAttribute( "name", "t" );

                        div.appendChild( input );

                        // Support: Android <=4.1 only
                        // Older WebKit doesn't clone checked state correctly in fragments
                        support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

                        // Support: IE <=11 only
                        // Make sure textarea (and checkbox) defaultValue is properly cloned
                        div.innerHTML = "<textarea>x</textarea>";
                        support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
                    } )();
                    var documentElement = document.documentElement;



                    var
                        rkeyEvent = /^key/,
                        rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
                        rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

                    function returnTrue() {
                        return true;
                    }

                    function returnFalse() {
                        return false;
                    }

// Support: IE <=9 only
// See #13393 for more info
                    function safeActiveElement() {
                        try {
                            return document.activeElement;
                        } catch ( err ) { }
                    }

                    function on( elem, types, selector, data, fn, one ) {
                        var origFn, type;

                        // Types can be a map of types/handlers
                        if ( typeof types === "object" ) {

                            // ( types-Object, selector, data )
                            if ( typeof selector !== "string" ) {

                                // ( types-Object, data )
                                data = data || selector;
                                selector = undefined;
                            }
                            for ( type in types ) {
                                on( elem, type, selector, data, types[ type ], one );
                            }
                            return elem;
                        }

                        if ( data == null && fn == null ) {

                            // ( types, fn )
                            fn = selector;
                            data = selector = undefined;
                        } else if ( fn == null ) {
                            if ( typeof selector === "string" ) {

                                // ( types, selector, fn )
                                fn = data;
                                data = undefined;
                            } else {

                                // ( types, data, fn )
                                fn = data;
                                data = selector;
                                selector = undefined;
                            }
                        }
                        if ( fn === false ) {
                            fn = returnFalse;
                        } else if ( !fn ) {
                            return elem;
                        }

                        if ( one === 1 ) {
                            origFn = fn;
                            fn = function( event ) {

                                // Can use an empty set, since event contains the info
                                jQuery().off( event );
                                return origFn.apply( this, arguments );
                            };

                            // Use same guid so caller can remove using origFn
                            fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
                        }
                        return elem.each( function() {
                            jQuery.event.add( this, types, fn, data, selector );
                        } );
                    }

                    /*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
                    jQuery.event = {

                        global: {},

                        add: function( elem, types, handler, data, selector ) {

                            var handleObjIn, eventHandle, tmp,
                                events, t, handleObj,
                                special, handlers, type, namespaces, origType,
                                elemData = dataPriv.get( elem );

                            // Don't attach events to noData or text/comment nodes (but allow plain objects)
                            if ( !elemData ) {
                                return;
                            }

                            // Caller can pass in an object of custom data in lieu of the handler
                            if ( handler.handler ) {
                                handleObjIn = handler;
                                handler = handleObjIn.handler;
                                selector = handleObjIn.selector;
                            }

                            // Ensure that invalid selectors throw exceptions at attach time
                            // Evaluate against documentElement in case elem is a non-element node (e.g., document)
                            if ( selector ) {
                                jQuery.find.matchesSelector( documentElement, selector );
                            }

                            // Make sure that the handler has a unique ID, used to find/remove it later
                            if ( !handler.guid ) {
                                handler.guid = jQuery.guid++;
                            }

                            // Init the element's event structure and main handler, if this is the first
                            if ( !( events = elemData.events ) ) {
                                events = elemData.events = {};
                            }
                            if ( !( eventHandle = elemData.handle ) ) {
                                eventHandle = elemData.handle = function( e ) {

                                    // Discard the second event of a jQuery.event.trigger() and
                                    // when an event is called after a page has unloaded
                                    return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
                                        jQuery.event.dispatch.apply( elem, arguments ) : undefined;
                                };
                            }

                            // Handle multiple events separated by a space
                            types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
                            t = types.length;
                            while ( t-- ) {
                                tmp = rtypenamespace.exec( types[ t ] ) || [];
                                type = origType = tmp[ 1 ];
                                namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

                                // There *must* be a type, no attaching namespace-only handlers
                                if ( !type ) {
                                    continue;
                                }

                                // If event changes its type, use the special event handlers for the changed type
                                special = jQuery.event.special[ type ] || {};

                                // If selector defined, determine special event api type, otherwise given type
                                type = ( selector ? special.delegateType : special.bindType ) || type;

                                // Update special based on newly reset type
                                special = jQuery.event.special[ type ] || {};

                                // handleObj is passed to all event handlers
                                handleObj = jQuery.extend( {
                                    type: type,
                                    origType: origType,
                                    data: data,
                                    handler: handler,
                                    guid: handler.guid,
                                    selector: selector,
                                    needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
                                    namespace: namespaces.join( "." )
                                }, handleObjIn );

                                // Init the event handler queue if we're the first
                                if ( !( handlers = events[ type ] ) ) {
                                    handlers = events[ type ] = [];
                                    handlers.delegateCount = 0;

                                    // Only use addEventListener if the special events handler returns false
                                    if ( !special.setup ||
                                        special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

                                        if ( elem.addEventListener ) {
                                            elem.addEventListener( type, eventHandle );
                                        }
                                    }
                                }

                                if ( special.add ) {
                                    special.add.call( elem, handleObj );

                                    if ( !handleObj.handler.guid ) {
                                        handleObj.handler.guid = handler.guid;
                                    }
                                }

                                // Add to the element's handler list, delegates in front
                                if ( selector ) {
                                    handlers.splice( handlers.delegateCount++, 0, handleObj );
                                } else {
                                    handlers.push( handleObj );
                                }

                                // Keep track of which events have ever been used, for event optimization
                                jQuery.event.global[ type ] = true;
                            }

                        },

                        // Detach an event or set of events from an element
                        remove: function( elem, types, handler, selector, mappedTypes ) {

                            var j, origCount, tmp,
                                events, t, handleObj,
                                special, handlers, type, namespaces, origType,
                                elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

                            if ( !elemData || !( events = elemData.events ) ) {
                                return;
                            }

                            // Once for each type.namespace in types; type may be omitted
                            types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
                            t = types.length;
                            while ( t-- ) {
                                tmp = rtypenamespace.exec( types[ t ] ) || [];
                                type = origType = tmp[ 1 ];
                                namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

                                // Unbind all events (on this namespace, if provided) for the element
                                if ( !type ) {
                                    for ( type in events ) {
                                        jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
                                    }
                                    continue;
                                }

                                special = jQuery.event.special[ type ] || {};
                                type = ( selector ? special.delegateType : special.bindType ) || type;
                                handlers = events[ type ] || [];
                                tmp = tmp[ 2 ] &&
                                    new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

                                // Remove matching events
                                origCount = j = handlers.length;
                                while ( j-- ) {
                                    handleObj = handlers[ j ];

                                    if ( ( mappedTypes || origType === handleObj.origType ) &&
                                        ( !handler || handler.guid === handleObj.guid ) &&
                                        ( !tmp || tmp.test( handleObj.namespace ) ) &&
                                        ( !selector || selector === handleObj.selector ||
                                            selector === "**" && handleObj.selector ) ) {
                                        handlers.splice( j, 1 );

                                        if ( handleObj.selector ) {
                                            handlers.delegateCount--;
                                        }
                                        if ( special.remove ) {
                                            special.remove.call( elem, handleObj );
                                        }
                                    }
                                }

                                // Remove generic event handler if we removed something and no more handlers exist
                                // (avoids potential for endless recursion during removal of special event handlers)
                                if ( origCount && !handlers.length ) {
                                    if ( !special.teardown ||
                                        special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

                                        jQuery.removeEvent( elem, type, elemData.handle );
                                    }

                                    delete events[ type ];
                                }
                            }

                            // Remove data and the expando if it's no longer used
                            if ( jQuery.isEmptyObject( events ) ) {
                                dataPriv.remove( elem, "handle events" );
                            }
                        },

                        dispatch: function( nativeEvent ) {

                            // Make a writable jQuery.Event from the native event object
                            var event = jQuery.event.fix( nativeEvent );

                            var i, j, ret, matched, handleObj, handlerQueue,
                                args = new Array( arguments.length ),
                                handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
                                special = jQuery.event.special[ event.type ] || {};

                            // Use the fix-ed jQuery.Event rather than the (read-only) native event
                            args[ 0 ] = event;

                            for ( i = 1; i < arguments.length; i++ ) {
                                args[ i ] = arguments[ i ];
                            }

                            event.delegateTarget = this;

                            // Call the preDispatch hook for the mapped type, and let it bail if desired
                            if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
                                return;
                            }

                            // Determine handlers
                            handlerQueue = jQuery.event.handlers.call( this, event, handlers );

                            // Run delegates first; they may want to stop propagation beneath us
                            i = 0;
                            while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
                                event.currentTarget = matched.elem;

                                j = 0;
                                while ( ( handleObj = matched.handlers[ j++ ] ) &&
                                !event.isImmediatePropagationStopped() ) {

                                    // Triggered event must either 1) have no namespace, or 2) have namespace(s)
                                    // a subset or equal to those in the bound event (both can have no namespace).
                                    if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

                                        event.handleObj = handleObj;
                                        event.data = handleObj.data;

                                        ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
                                            handleObj.handler ).apply( matched.elem, args );

                                        if ( ret !== undefined ) {
                                            if ( ( event.result = ret ) === false ) {
                                                event.preventDefault();
                                                event.stopPropagation();
                                            }
                                        }
                                    }
                                }
                            }

                            // Call the postDispatch hook for the mapped type
                            if ( special.postDispatch ) {
                                special.postDispatch.call( this, event );
                            }

                            return event.result;
                        },

                        handlers: function( event, handlers ) {
                            var i, handleObj, sel, matchedHandlers, matchedSelectors,
                                handlerQueue = [],
                                delegateCount = handlers.delegateCount,
                                cur = event.target;

                            // Find delegate handlers
                            if ( delegateCount &&

                                // Support: IE <=9
                                // Black-hole SVG <use> instance trees (trac-13180)
                                cur.nodeType &&

                                // Support: Firefox <=42
                                // Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
                                // https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
                                // Support: IE 11 only
                                // ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
                                !( event.type === "click" && event.button >= 1 ) ) {

                                for ( ; cur !== this; cur = cur.parentNode || this ) {

                                    // Don't check non-elements (#13208)
                                    // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
                                    if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
                                        matchedHandlers = [];
                                        matchedSelectors = {};
                                        for ( i = 0; i < delegateCount; i++ ) {
                                            handleObj = handlers[ i ];

                                            // Don't conflict with Object.prototype properties (#13203)
                                            sel = handleObj.selector + " ";

                                            if ( matchedSelectors[ sel ] === undefined ) {
                                                matchedSelectors[ sel ] = handleObj.needsContext ?
                                                    jQuery( sel, this ).index( cur ) > -1 :
                                                    jQuery.find( sel, this, null, [ cur ] ).length;
                                            }
                                            if ( matchedSelectors[ sel ] ) {
                                                matchedHandlers.push( handleObj );
                                            }
                                        }
                                        if ( matchedHandlers.length ) {
                                            handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
                                        }
                                    }
                                }
                            }

                            // Add the remaining (directly-bound) handlers
                            cur = this;
                            if ( delegateCount < handlers.length ) {
                                handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
                            }

                            return handlerQueue;
                        },

                        addProp: function( name, hook ) {
                            Object.defineProperty( jQuery.Event.prototype, name, {
                                enumerable: true,
                                configurable: true,

                                get: isFunction( hook ) ?
                                    function() {
                                        if ( this.originalEvent ) {
                                            return hook( this.originalEvent );
                                        }
                                    } :
                                    function() {
                                        if ( this.originalEvent ) {
                                            return this.originalEvent[ name ];
                                        }
                                    },

                                set: function( value ) {
                                    Object.defineProperty( this, name, {
                                        enumerable: true,
                                        configurable: true,
                                        writable: true,
                                        value: value
                                    } );
                                }
                            } );
                        },

                        fix: function( originalEvent ) {
                            return originalEvent[ jQuery.expando ] ?
                                originalEvent :
                                new jQuery.Event( originalEvent );
                        },

                        special: {
                            load: {

                                // Prevent triggered image.load events from bubbling to window.load
                                noBubble: true
                            },
                            focus: {

                                // Fire native event if possible so blur/focus sequence is correct
                                trigger: function() {
                                    if ( this !== safeActiveElement() && this.focus ) {
                                        this.focus();
                                        return false;
                                    }
                                },
                                delegateType: "focusin"
                            },
                            blur: {
                                trigger: function() {
                                    if ( this === safeActiveElement() && this.blur ) {
                                        this.blur();
                                        return false;
                                    }
                                },
                                delegateType: "focusout"
                            },
                            click: {

                                // For checkbox, fire native event so checked state will be right
                                trigger: function() {
                                    if ( this.type === "checkbox" && this.click && nodeName( this, "input" ) ) {
                                        this.click();
                                        return false;
                                    }
                                },

                                // For cross-browser consistency, don't fire native .click() on links
                                _default: function( event ) {
                                    return nodeName( event.target, "a" );
                                }
                            },

                            beforeunload: {
                                postDispatch: function( event ) {

                                    // Support: Firefox 20+
                                    // Firefox doesn't alert if the returnValue field is not set.
                                    if ( event.result !== undefined && event.originalEvent ) {
                                        event.originalEvent.returnValue = event.result;
                                    }
                                }
                            }
                        }
                    };

                    jQuery.removeEvent = function( elem, type, handle ) {

                        // This "if" is needed for plain objects
                        if ( elem.removeEventListener ) {
                            elem.removeEventListener( type, handle );
                        }
                    };

                    jQuery.Event = function( src, props ) {

                        // Allow instantiation without the 'new' keyword
                        if ( !( this instanceof jQuery.Event ) ) {
                            return new jQuery.Event( src, props );
                        }

                        // Event object
                        if ( src && src.type ) {
                            this.originalEvent = src;
                            this.type = src.type;

                            // Events bubbling up the document may have been marked as prevented
                            // by a handler lower down the tree; reflect the correct value.
                            this.isDefaultPrevented = src.defaultPrevented ||
                            src.defaultPrevented === undefined &&

                            // Support: Android <=2.3 only
                            src.returnValue === false ?
                                returnTrue :
                                returnFalse;

                            // Create target properties
                            // Support: Safari <=6 - 7 only
                            // Target should not be a text node (#504, #13143)
                            this.target = ( src.target && src.target.nodeType === 3 ) ?
                                src.target.parentNode :
                                src.target;

                            this.currentTarget = src.currentTarget;
                            this.relatedTarget = src.relatedTarget;

                            // Event type
                        } else {
                            this.type = src;
                        }

                        // Put explicitly provided properties onto the event object
                        if ( props ) {
                            jQuery.extend( this, props );
                        }

                        // Create a timestamp if incoming event doesn't have one
                        this.timeStamp = src && src.timeStamp || Date.now();

                        // Mark it as fixed
                        this[ jQuery.expando ] = true;
                    };

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
                    jQuery.Event.prototype = {
                        constructor: jQuery.Event,
                        isDefaultPrevented: returnFalse,
                        isPropagationStopped: returnFalse,
                        isImmediatePropagationStopped: returnFalse,
                        isSimulated: false,

                        preventDefault: function() {
                            var e = this.originalEvent;

                            this.isDefaultPrevented = returnTrue;

                            if ( e && !this.isSimulated ) {
                                e.preventDefault();
                            }
                        },
                        stopPropagation: function() {
                            var e = this.originalEvent;

                            this.isPropagationStopped = returnTrue;

                            if ( e && !this.isSimulated ) {
                                e.stopPropagation();
                            }
                        },
                        stopImmediatePropagation: function() {
                            var e = this.originalEvent;

                            this.isImmediatePropagationStopped = returnTrue;

                            if ( e && !this.isSimulated ) {
                                e.stopImmediatePropagation();
                            }

                            this.stopPropagation();
                        }
                    };

// Includes all common event props including KeyEvent and MouseEvent specific props
                    jQuery.each( {
                        altKey: true,
                        bubbles: true,
                        cancelable: true,
                        changedTouches: true,
                        ctrlKey: true,
                        detail: true,
                        eventPhase: true,
                        metaKey: true,
                        pageX: true,
                        pageY: true,
                        shiftKey: true,
                        view: true,
                        "char": true,
                        charCode: true,
                        key: true,
                        keyCode: true,
                        button: true,
                        buttons: true,
                        clientX: true,
                        clientY: true,
                        offsetX: true,
                        offsetY: true,
                        pointerId: true,
                        pointerType: true,
                        screenX: true,
                        screenY: true,
                        targetTouches: true,
                        toElement: true,
                        touches: true,

                        which: function( event ) {
                            var button = event.button;

                            // Add which for key events
                            if ( event.which == null && rkeyEvent.test( event.type ) ) {
                                return event.charCode != null ? event.charCode : event.keyCode;
                            }

                            // Add which for click: 1 === left; 2 === middle; 3 === right
                            if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
                                if ( button & 1 ) {
                                    return 1;
                                }

                                if ( button & 2 ) {
                                    return 3;
                                }

                                if ( button & 4 ) {
                                    return 2;
                                }

                                return 0;
                            }

                            return event.which;
                        }
                    }, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
                    jQuery.each( {
                        mouseenter: "mouseover",
                        mouseleave: "mouseout",
                        pointerenter: "pointerover",
                        pointerleave: "pointerout"
                    }, function( orig, fix ) {
                        jQuery.event.special[ orig ] = {
                            delegateType: fix,
                            bindType: fix,

                            handle: function( event ) {
                                var ret,
                                    target = this,
                                    related = event.relatedTarget,
                                    handleObj = event.handleObj;

                                // For mouseenter/leave call the handler if related is outside the target.
                                // NB: No relatedTarget if the mouse left/entered the browser window
                                if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
                                    event.type = handleObj.origType;
                                    ret = handleObj.handler.apply( this, arguments );
                                    event.type = fix;
                                }
                                return ret;
                            }
                        };
                    } );

                    jQuery.fn.extend( {

                        on: function( types, selector, data, fn ) {
                            return on( this, types, selector, data, fn );
                        },
                        one: function( types, selector, data, fn ) {
                            return on( this, types, selector, data, fn, 1 );
                        },
                        off: function( types, selector, fn ) {
                            var handleObj, type;
                            if ( types && types.preventDefault && types.handleObj ) {

                                // ( event )  dispatched jQuery.Event
                                handleObj = types.handleObj;
                                jQuery( types.delegateTarget ).off(
                                    handleObj.namespace ?
                                        handleObj.origType + "." + handleObj.namespace :
                                        handleObj.origType,
                                    handleObj.selector,
                                    handleObj.handler
                                );
                                return this;
                            }
                            if ( typeof types === "object" ) {

                                // ( types-object [, selector] )
                                for ( type in types ) {
                                    this.off( type, selector, types[ type ] );
                                }
                                return this;
                            }
                            if ( selector === false || typeof selector === "function" ) {

                                // ( types [, fn] )
                                fn = selector;
                                selector = undefined;
                            }
                            if ( fn === false ) {
                                fn = returnFalse;
                            }
                            return this.each( function() {
                                jQuery.event.remove( this, types, fn, selector );
                            } );
                        }
                    } );


                    var

                        /* eslint-disable max-len */

                        // See https://github.com/eslint/eslint/issues/3229
                        rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

                        /* eslint-enable */

                        // Support: IE <=10 - 11, Edge 12 - 13 only
                        // In IE/Edge using regex groups here causes severe slowdowns.
                        // See https://connect.microsoft.com/IE/feedback/details/1736512/
                        rnoInnerhtml = /<script|<style|<link/i,

                        // checked="checked" or checked
                        rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
                        rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
                    function manipulationTarget( elem, content ) {
                        if ( nodeName( elem, "table" ) &&
                            nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

                            return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
                        }

                        return elem;
                    }

// Replace/restore the type attribute of script elements for safe DOM manipulation
                    function disableScript( elem ) {
                        elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
                        return elem;
                    }
                    function restoreScript( elem ) {
                        if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
                            elem.type = elem.type.slice( 5 );
                        } else {
                            elem.removeAttribute( "type" );
                        }

                        return elem;
                    }

                    function cloneCopyEvent( src, dest ) {
                        var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

                        if ( dest.nodeType !== 1 ) {
                            return;
                        }

                        // 1. Copy private data: events, handlers, etc.
                        if ( dataPriv.hasData( src ) ) {
                            pdataOld = dataPriv.access( src );
                            pdataCur = dataPriv.set( dest, pdataOld );
                            events = pdataOld.events;

                            if ( events ) {
                                delete pdataCur.handle;
                                pdataCur.events = {};

                                for ( type in events ) {
                                    for ( i = 0, l = events[ type ].length; i < l; i++ ) {
                                        jQuery.event.add( dest, type, events[ type ][ i ] );
                                    }
                                }
                            }
                        }

                        // 2. Copy user data
                        if ( dataUser.hasData( src ) ) {
                            udataOld = dataUser.access( src );
                            udataCur = jQuery.extend( {}, udataOld );

                            dataUser.set( dest, udataCur );
                        }
                    }

// Fix IE bugs, see support tests
                    function fixInput( src, dest ) {
                        var nodeName = dest.nodeName.toLowerCase();

                        // Fails to persist the checked state of a cloned checkbox or radio button.
                        if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
                            dest.checked = src.checked;

                            // Fails to return the selected option to the default selected state when cloning options
                        } else if ( nodeName === "input" || nodeName === "textarea" ) {
                            dest.defaultValue = src.defaultValue;
                        }
                    }

                    function domManip( collection, args, callback, ignored ) {

                        // Flatten any nested arrays
                        args = concat.apply( [], args );

                        var fragment, first, scripts, hasScripts, node, doc,
                            i = 0,
                            l = collection.length,
                            iNoClone = l - 1,
                            value = args[ 0 ],
                            valueIsFunction = isFunction( value );

                        // We can't cloneNode fragments that contain checked, in WebKit
                        if ( valueIsFunction ||
                            ( l > 1 && typeof value === "string" &&
                                !support.checkClone && rchecked.test( value ) ) ) {
                            return collection.each( function( index ) {
                                var self = collection.eq( index );
                                if ( valueIsFunction ) {
                                    args[ 0 ] = value.call( this, index, self.html() );
                                }
                                domManip( self, args, callback, ignored );
                            } );
                        }

                        if ( l ) {
                            fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
                            first = fragment.firstChild;

                            if ( fragment.childNodes.length === 1 ) {
                                fragment = first;
                            }

                            // Require either new content or an interest in ignored elements to invoke the callback
                            if ( first || ignored ) {
                                scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
                                hasScripts = scripts.length;

                                // Use the original fragment for the last item
                                // instead of the first because it can end up
                                // being emptied incorrectly in certain situations (#8070).
                                for ( ; i < l; i++ ) {
                                    node = fragment;

                                    if ( i !== iNoClone ) {
                                        node = jQuery.clone( node, true, true );

                                        // Keep references to cloned scripts for later restoration
                                        if ( hasScripts ) {

                                            // Support: Android <=4.0 only, PhantomJS 1 only
                                            // push.apply(_, arraylike) throws on ancient WebKit
                                            jQuery.merge( scripts, getAll( node, "script" ) );
                                        }
                                    }

                                    callback.call( collection[ i ], node, i );
                                }

                                if ( hasScripts ) {
                                    doc = scripts[ scripts.length - 1 ].ownerDocument;

                                    // Reenable scripts
                                    jQuery.map( scripts, restoreScript );

                                    // Evaluate executable scripts on first document insertion
                                    for ( i = 0; i < hasScripts; i++ ) {
                                        node = scripts[ i ];
                                        if ( rscriptType.test( node.type || "" ) &&
                                            !dataPriv.access( node, "globalEval" ) &&
                                            jQuery.contains( doc, node ) ) {

                                            if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

                                                // Optional AJAX dependency, but won't run scripts if not present
                                                if ( jQuery._evalUrl ) {
                                                    jQuery._evalUrl( node.src );
                                                }
                                            } else {
                                                DOMEval( node.textContent.replace( rcleanScript, "" ), doc, node );
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        return collection;
                    }

                    function remove( elem, selector, keepData ) {
                        var node,
                            nodes = selector ? jQuery.filter( selector, elem ) : elem,
                            i = 0;

                        for ( ; ( node = nodes[ i ] ) != null; i++ ) {
                            if ( !keepData && node.nodeType === 1 ) {
                                jQuery.cleanData( getAll( node ) );
                            }

                            if ( node.parentNode ) {
                                if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
                                    setGlobalEval( getAll( node, "script" ) );
                                }
                                node.parentNode.removeChild( node );
                            }
                        }

                        return elem;
                    }

                    jQuery.extend( {
                        htmlPrefilter: function( html ) {
                            return html.replace( rxhtmlTag, "<$1></$2>" );
                        },

                        clone: function( elem, dataAndEvents, deepDataAndEvents ) {
                            var i, l, srcElements, destElements,
                                clone = elem.cloneNode( true ),
                                inPage = jQuery.contains( elem.ownerDocument, elem );

                            // Fix IE cloning issues
                            if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
                                !jQuery.isXMLDoc( elem ) ) {

                                // We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
                                destElements = getAll( clone );
                                srcElements = getAll( elem );

                                for ( i = 0, l = srcElements.length; i < l; i++ ) {
                                    fixInput( srcElements[ i ], destElements[ i ] );
                                }
                            }

                            // Copy the events from the original to the clone
                            if ( dataAndEvents ) {
                                if ( deepDataAndEvents ) {
                                    srcElements = srcElements || getAll( elem );
                                    destElements = destElements || getAll( clone );

                                    for ( i = 0, l = srcElements.length; i < l; i++ ) {
                                        cloneCopyEvent( srcElements[ i ], destElements[ i ] );
                                    }
                                } else {
                                    cloneCopyEvent( elem, clone );
                                }
                            }

                            // Preserve script evaluation history
                            destElements = getAll( clone, "script" );
                            if ( destElements.length > 0 ) {
                                setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
                            }

                            // Return the cloned set
                            return clone;
                        },

                        cleanData: function( elems ) {
                            var data, elem, type,
                                special = jQuery.event.special,
                                i = 0;

                            for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
                                if ( acceptData( elem ) ) {
                                    if ( ( data = elem[ dataPriv.expando ] ) ) {
                                        if ( data.events ) {
                                            for ( type in data.events ) {
                                                if ( special[ type ] ) {
                                                    jQuery.event.remove( elem, type );

                                                    // This is a shortcut to avoid jQuery.event.remove's overhead
                                                } else {
                                                    jQuery.removeEvent( elem, type, data.handle );
                                                }
                                            }
                                        }

                                        // Support: Chrome <=35 - 45+
                                        // Assign undefined instead of using delete, see Data#remove
                                        elem[ dataPriv.expando ] = undefined;
                                    }
                                    if ( elem[ dataUser.expando ] ) {

                                        // Support: Chrome <=35 - 45+
                                        // Assign undefined instead of using delete, see Data#remove
                                        elem[ dataUser.expando ] = undefined;
                                    }
                                }
                            }
                        }
                    } );

                    jQuery.fn.extend( {
                        detach: function( selector ) {
                            return remove( this, selector, true );
                        },

                        remove: function( selector ) {
                            return remove( this, selector );
                        },

                        text: function( value ) {
                            return access( this, function( value ) {
                                return value === undefined ?
                                    jQuery.text( this ) :
                                    this.empty().each( function() {
                                        if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
                                            this.textContent = value;
                                        }
                                    } );
                            }, null, value, arguments.length );
                        },

                        append: function() {
                            return domManip( this, arguments, function( elem ) {
                                if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
                                    var target = manipulationTarget( this, elem );
                                    target.appendChild( elem );
                                }
                            } );
                        },

                        prepend: function() {
                            return domManip( this, arguments, function( elem ) {
                                if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
                                    var target = manipulationTarget( this, elem );
                                    target.insertBefore( elem, target.firstChild );
                                }
                            } );
                        },

                        before: function() {
                            return domManip( this, arguments, function( elem ) {
                                if ( this.parentNode ) {
                                    this.parentNode.insertBefore( elem, this );
                                }
                            } );
                        },

                        after: function() {
                            return domManip( this, arguments, function( elem ) {
                                if ( this.parentNode ) {
                                    this.parentNode.insertBefore( elem, this.nextSibling );
                                }
                            } );
                        },

                        empty: function() {
                            var elem,
                                i = 0;

                            for ( ; ( elem = this[ i ] ) != null; i++ ) {
                                if ( elem.nodeType === 1 ) {

                                    // Prevent memory leaks
                                    jQuery.cleanData( getAll( elem, false ) );

                                    // Remove any remaining nodes
                                    elem.textContent = "";
                                }
                            }

                            return this;
                        },

                        clone: function( dataAndEvents, deepDataAndEvents ) {
                            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
                            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

                            return this.map( function() {
                                return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
                            } );
                        },

                        html: function( value ) {
                            return access( this, function( value ) {
                                var elem = this[ 0 ] || {},
                                    i = 0,
                                    l = this.length;

                                if ( value === undefined && elem.nodeType === 1 ) {
                                    return elem.innerHTML;
                                }

                                // See if we can take a shortcut and just use innerHTML
                                if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
                                    !wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

                                    value = jQuery.htmlPrefilter( value );

                                    try {
                                        for ( ; i < l; i++ ) {
                                            elem = this[ i ] || {};

                                            // Remove element nodes and prevent memory leaks
                                            if ( elem.nodeType === 1 ) {
                                                jQuery.cleanData( getAll( elem, false ) );
                                                elem.innerHTML = value;
                                            }
                                        }

                                        elem = 0;

                                        // If using innerHTML throws an exception, use the fallback method
                                    } catch ( e ) {}
                                }

                                if ( elem ) {
                                    this.empty().append( value );
                                }
                            }, null, value, arguments.length );
                        },

                        replaceWith: function() {
                            var ignored = [];

                            // Make the changes, replacing each non-ignored context element with the new content
                            return domManip( this, arguments, function( elem ) {
                                var parent = this.parentNode;

                                if ( jQuery.inArray( this, ignored ) < 0 ) {
                                    jQuery.cleanData( getAll( this ) );
                                    if ( parent ) {
                                        parent.replaceChild( elem, this );
                                    }
                                }

                                // Force callback invocation
                            }, ignored );
                        }
                    } );

                    jQuery.each( {
                        appendTo: "append",
                        prependTo: "prepend",
                        insertBefore: "before",
                        insertAfter: "after",
                        replaceAll: "replaceWith"
                    }, function( name, original ) {
                        jQuery.fn[ name ] = function( selector ) {
                            var elems,
                                ret = [],
                                insert = jQuery( selector ),
                                last = insert.length - 1,
                                i = 0;

                            for ( ; i <= last; i++ ) {
                                elems = i === last ? this : this.clone( true );
                                jQuery( insert[ i ] )[ original ]( elems );

                                // Support: Android <=4.0 only, PhantomJS 1 only
                                // .get() because push.apply(_, arraylike) throws on ancient WebKit
                                push.apply( ret, elems.get() );
                            }

                            return this.pushStack( ret );
                        };
                    } );
                    var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

                    var getStyles = function( elem ) {

                        // Support: IE <=11 only, Firefox <=30 (#15098, #14150)
                        // IE throws on elements created in popups
                        // FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
                        var view = elem.ownerDocument.defaultView;

                        if ( !view || !view.opener ) {
                            view = window;
                        }

                        return view.getComputedStyle( elem );
                    };

                    var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



                    ( function() {

                        // Executing both pixelPosition & boxSizingReliable tests require only one layout
                        // so they're executed at the same time to save the second computation.
                        function computeStyleTests() {

                            // This is a singleton, we need to execute it only once
                            if ( !div ) {
                                return;
                            }

                            container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
                                "margin-top:1px;padding:0;border:0";
                            div.style.cssText =
                                "position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
                                "margin:auto;border:1px;padding:1px;" +
                                "width:60%;top:1%";
                            documentElement.appendChild( container ).appendChild( div );

                            var divStyle = window.getComputedStyle( div );
                            pixelPositionVal = divStyle.top !== "1%";

                            // Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
                            reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

                            // Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
                            // Some styles come back with percentage values, even though they shouldn't
                            div.style.right = "60%";
                            pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

                            // Support: IE 9 - 11 only
                            // Detect misreporting of content dimensions for box-sizing:border-box elements
                            boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

                            // Support: IE 9 only
                            // Detect overflow:scroll screwiness (gh-3699)
                            div.style.position = "absolute";
                            scrollboxSizeVal = div.offsetWidth === 36 || "absolute";

                            documentElement.removeChild( container );

                            // Nullify the div so it wouldn't be stored in the memory and
                            // it will also be a sign that checks already performed
                            div = null;
                        }

                        function roundPixelMeasures( measure ) {
                            return Math.round( parseFloat( measure ) );
                        }

                        var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
                            reliableMarginLeftVal,
                            container = document.createElement( "div" ),
                            div = document.createElement( "div" );

                        // Finish early in limited (non-browser) environments
                        if ( !div.style ) {
                            return;
                        }

                        // Support: IE <=9 - 11 only
                        // Style of cloned element affects source element cloned (#8908)
                        div.style.backgroundClip = "content-box";
                        div.cloneNode( true ).style.backgroundClip = "";
                        support.clearCloneStyle = div.style.backgroundClip === "content-box";

                        jQuery.extend( support, {
                            boxSizingReliable: function() {
                                computeStyleTests();
                                return boxSizingReliableVal;
                            },
                            pixelBoxStyles: function() {
                                computeStyleTests();
                                return pixelBoxStylesVal;
                            },
                            pixelPosition: function() {
                                computeStyleTests();
                                return pixelPositionVal;
                            },
                            reliableMarginLeft: function() {
                                computeStyleTests();
                                return reliableMarginLeftVal;
                            },
                            scrollboxSize: function() {
                                computeStyleTests();
                                return scrollboxSizeVal;
                            }
                        } );
                    } )();


                    function curCSS( elem, name, computed ) {
                        var width, minWidth, maxWidth, ret,

                            // Support: Firefox 51+
                            // Retrieving style before computed somehow
                            // fixes an issue with getting wrong values
                            // on detached elements
                            style = elem.style;

                        computed = computed || getStyles( elem );

                        // getPropertyValue is needed for:
                        //   .css('filter') (IE 9 only, #12537)
                        //   .css('--customProperty) (#3144)
                        if ( computed ) {
                            ret = computed.getPropertyValue( name ) || computed[ name ];

                            if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
                                ret = jQuery.style( elem, name );
                            }

                            // A tribute to the "awesome hack by Dean Edwards"
                            // Android Browser returns percentage for some values,
                            // but width seems to be reliably pixels.
                            // This is against the CSSOM draft spec:
                            // https://drafts.csswg.org/cssom/#resolved-values
                            if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

                                // Remember the original values
                                width = style.width;
                                minWidth = style.minWidth;
                                maxWidth = style.maxWidth;

                                // Put in the new values to get a computed value out
                                style.minWidth = style.maxWidth = style.width = ret;
                                ret = computed.width;

                                // Revert the changed values
                                style.width = width;
                                style.minWidth = minWidth;
                                style.maxWidth = maxWidth;
                            }
                        }

                        return ret !== undefined ?

                            // Support: IE <=9 - 11 only
                            // IE returns zIndex value as an integer.
                            ret + "" :
                            ret;
                    }


                    function addGetHookIf( conditionFn, hookFn ) {

                        // Define the hook, we'll check on the first run if it's really needed.
                        return {
                            get: function() {
                                if ( conditionFn() ) {

                                    // Hook not needed (or it's not possible to use it due
                                    // to missing dependency), remove it.
                                    delete this.get;
                                    return;
                                }

                                // Hook needed; redefine it so that the support test is not executed again.
                                return ( this.get = hookFn ).apply( this, arguments );
                            }
                        };
                    }


                    var

                        // Swappable if display is none or starts with table
                        // except "table", "table-cell", or "table-caption"
                        // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
                        rdisplayswap = /^(none|table(?!-c[ea]).+)/,
                        rcustomProp = /^--/,
                        cssShow = { position: "absolute", visibility: "hidden", display: "block" },
                        cssNormalTransform = {
                            letterSpacing: "0",
                            fontWeight: "400"
                        },

                        cssPrefixes = [ "Webkit", "Moz", "ms" ],
                        emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
                    function vendorPropName( name ) {

                        // Shortcut for names that are not vendor prefixed
                        if ( name in emptyStyle ) {
                            return name;
                        }

                        // Check for vendor prefixed names
                        var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
                            i = cssPrefixes.length;

                        while ( i-- ) {
                            name = cssPrefixes[ i ] + capName;
                            if ( name in emptyStyle ) {
                                return name;
                            }
                        }
                    }

// Return a property mapped along what jQuery.cssProps suggests or to
// a vendor prefixed property.
                    function finalPropName( name ) {
                        var ret = jQuery.cssProps[ name ];
                        if ( !ret ) {
                            ret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;
                        }
                        return ret;
                    }

                    function setPositiveNumber( elem, value, subtract ) {

                        // Any relative (+/-) values have already been
                        // normalized at this point
                        var matches = rcssNum.exec( value );
                        return matches ?

                            // Guard against undefined "subtract", e.g., when used as in cssHooks
                            Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
                            value;
                    }

                    function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
                        var i = dimension === "width" ? 1 : 0,
                            extra = 0,
                            delta = 0;

                        // Adjustment may not be necessary
                        if ( box === ( isBorderBox ? "border" : "content" ) ) {
                            return 0;
                        }

                        for ( ; i < 4; i += 2 ) {

                            // Both box models exclude margin
                            if ( box === "margin" ) {
                                delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
                            }

                            // If we get here with a content-box, we're seeking "padding" or "border" or "margin"
                            if ( !isBorderBox ) {

                                // Add padding
                                delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

                                // For "border" or "margin", add border
                                if ( box !== "padding" ) {
                                    delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

                                    // But still keep track of it otherwise
                                } else {
                                    extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
                                }

                                // If we get here with a border-box (content + padding + border), we're seeking "content" or
                                // "padding" or "margin"
                            } else {

                                // For "content", subtract padding
                                if ( box === "content" ) {
                                    delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
                                }

                                // For "content" or "padding", subtract border
                                if ( box !== "margin" ) {
                                    delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
                                }
                            }
                        }

                        // Account for positive content-box scroll gutter when requested by providing computedVal
                        if ( !isBorderBox && computedVal >= 0 ) {

                            // offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
                            // Assuming integer scroll gutter, subtract the rest and round down
                            delta += Math.max( 0, Math.ceil(
                                elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
                                computedVal -
                                delta -
                                extra -
                                0.5
                            ) );
                        }

                        return delta;
                    }

                    function getWidthOrHeight( elem, dimension, extra ) {

                        // Start with computed style
                        var styles = getStyles( elem ),
                            val = curCSS( elem, dimension, styles ),
                            isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
                            valueIsBorderBox = isBorderBox;

                        // Support: Firefox <=54
                        // Return a confounding non-pixel value or feign ignorance, as appropriate.
                        if ( rnumnonpx.test( val ) ) {
                            if ( !extra ) {
                                return val;
                            }
                            val = "auto";
                        }

                        // Check for style in case a browser which returns unreliable values
                        // for getComputedStyle silently falls back to the reliable elem.style
                        valueIsBorderBox = valueIsBorderBox &&
                            ( support.boxSizingReliable() || val === elem.style[ dimension ] );

                        // Fall back to offsetWidth/offsetHeight when value is "auto"
                        // This happens for inline elements with no explicit setting (gh-3571)
                        // Support: Android <=4.1 - 4.3 only
                        // Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
                        if ( val === "auto" ||
                            !parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) {

                            val = elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];

                            // offsetWidth/offsetHeight provide border-box values
                            valueIsBorderBox = true;
                        }

                        // Normalize "" and auto
                        val = parseFloat( val ) || 0;

                        // Adjust for the element's box model
                        return ( val +
                            boxModelAdjustment(
                                elem,
                                dimension,
                                extra || ( isBorderBox ? "border" : "content" ),
                                valueIsBorderBox,
                                styles,

                                // Provide the current computed size to request scroll gutter calculation (gh-3589)
                                val
                            )
                        ) + "px";
                    }

                    jQuery.extend( {

                        // Add in style property hooks for overriding the default
                        // behavior of getting and setting a style property
                        cssHooks: {
                            opacity: {
                                get: function( elem, computed ) {
                                    if ( computed ) {

                                        // We should always get a number back from opacity
                                        var ret = curCSS( elem, "opacity" );
                                        return ret === "" ? "1" : ret;
                                    }
                                }
                            }
                        },

                        // Don't automatically add "px" to these possibly-unitless properties
                        cssNumber: {
                            "animationIterationCount": true,
                            "columnCount": true,
                            "fillOpacity": true,
                            "flexGrow": true,
                            "flexShrink": true,
                            "fontWeight": true,
                            "lineHeight": true,
                            "opacity": true,
                            "order": true,
                            "orphans": true,
                            "widows": true,
                            "zIndex": true,
                            "zoom": true
                        },

                        // Add in properties whose names you wish to fix before
                        // setting or getting the value
                        cssProps: {},

                        // Get and set the style property on a DOM Node
                        style: function( elem, name, value, extra ) {

                            // Don't set styles on text and comment nodes
                            if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
                                return;
                            }

                            // Make sure that we're working with the right name
                            var ret, type, hooks,
                                origName = camelCase( name ),
                                isCustomProp = rcustomProp.test( name ),
                                style = elem.style;

                            // Make sure that we're working with the right name. We don't
                            // want to query the value if it is a CSS custom property
                            // since they are user-defined.
                            if ( !isCustomProp ) {
                                name = finalPropName( origName );
                            }

                            // Gets hook for the prefixed version, then unprefixed version
                            hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

                            // Check if we're setting a value
                            if ( value !== undefined ) {
                                type = typeof value;

                                // Convert "+=" or "-=" to relative numbers (#7345)
                                if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
                                    value = adjustCSS( elem, name, ret );

                                    // Fixes bug #9237
                                    type = "number";
                                }

                                // Make sure that null and NaN values aren't set (#7116)
                                if ( value == null || value !== value ) {
                                    return;
                                }

                                // If a number was passed in, add the unit (except for certain CSS properties)
                                if ( type === "number" ) {
                                    value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
                                }

                                // background-* props affect original clone's values
                                if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
                                    style[ name ] = "inherit";
                                }

                                // If a hook was provided, use that value, otherwise just set the specified value
                                if ( !hooks || !( "set" in hooks ) ||
                                    ( value = hooks.set( elem, value, extra ) ) !== undefined ) {

                                    if ( isCustomProp ) {
                                        style.setProperty( name, value );
                                    } else {
                                        style[ name ] = value;
                                    }
                                }

                            } else {

                                // If a hook was provided get the non-computed value from there
                                if ( hooks && "get" in hooks &&
                                    ( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

                                    return ret;
                                }

                                // Otherwise just get the value from the style object
                                return style[ name ];
                            }
                        },

                        css: function( elem, name, extra, styles ) {
                            var val, num, hooks,
                                origName = camelCase( name ),
                                isCustomProp = rcustomProp.test( name );

                            // Make sure that we're working with the right name. We don't
                            // want to modify the value if it is a CSS custom property
                            // since they are user-defined.
                            if ( !isCustomProp ) {
                                name = finalPropName( origName );
                            }

                            // Try prefixed name followed by the unprefixed name
                            hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

                            // If a hook was provided get the computed value from there
                            if ( hooks && "get" in hooks ) {
                                val = hooks.get( elem, true, extra );
                            }

                            // Otherwise, if a way to get the computed value exists, use that
                            if ( val === undefined ) {
                                val = curCSS( elem, name, styles );
                            }

                            // Convert "normal" to computed value
                            if ( val === "normal" && name in cssNormalTransform ) {
                                val = cssNormalTransform[ name ];
                            }

                            // Make numeric if forced or a qualifier was provided and val looks numeric
                            if ( extra === "" || extra ) {
                                num = parseFloat( val );
                                return extra === true || isFinite( num ) ? num || 0 : val;
                            }

                            return val;
                        }
                    } );

                    jQuery.each( [ "height", "width" ], function( i, dimension ) {
                        jQuery.cssHooks[ dimension ] = {
                            get: function( elem, computed, extra ) {
                                if ( computed ) {

                                    // Certain elements can have dimension info if we invisibly show them
                                    // but it must have a current display style that would benefit
                                    return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

                                    // Support: Safari 8+
                                    // Table columns in Safari have non-zero offsetWidth & zero
                                    // getBoundingClientRect().width unless display is changed.
                                    // Support: IE <=11 only
                                    // Running getBoundingClientRect on a disconnected node
                                    // in IE throws an error.
                                    ( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
                                        swap( elem, cssShow, function() {
                                            return getWidthOrHeight( elem, dimension, extra );
                                        } ) :
                                        getWidthOrHeight( elem, dimension, extra );
                                }
                            },

                            set: function( elem, value, extra ) {
                                var matches,
                                    styles = getStyles( elem ),
                                    isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
                                    subtract = extra && boxModelAdjustment(
                                        elem,
                                        dimension,
                                        extra,
                                        isBorderBox,
                                        styles
                                    );

                                // Account for unreliable border-box dimensions by comparing offset* to computed and
                                // faking a content-box to get border and padding (gh-3699)
                                if ( isBorderBox && support.scrollboxSize() === styles.position ) {
                                    subtract -= Math.ceil(
                                        elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
                                        parseFloat( styles[ dimension ] ) -
                                        boxModelAdjustment( elem, dimension, "border", false, styles ) -
                                        0.5
                                    );
                                }

                                // Convert to pixels if value adjustment is needed
                                if ( subtract && ( matches = rcssNum.exec( value ) ) &&
                                    ( matches[ 3 ] || "px" ) !== "px" ) {

                                    elem.style[ dimension ] = value;
                                    value = jQuery.css( elem, dimension );
                                }

                                return setPositiveNumber( elem, value, subtract );
                            }
                        };
                    } );

                    jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
                        function( elem, computed ) {
                            if ( computed ) {
                                return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
                                    elem.getBoundingClientRect().left -
                                    swap( elem, { marginLeft: 0 }, function() {
                                        return elem.getBoundingClientRect().left;
                                    } )
                                ) + "px";
                            }
                        }
                    );

// These hooks are used by animate to expand properties
                    jQuery.each( {
                        margin: "",
                        padding: "",
                        border: "Width"
                    }, function( prefix, suffix ) {
                        jQuery.cssHooks[ prefix + suffix ] = {
                            expand: function( value ) {
                                var i = 0,
                                    expanded = {},

                                    // Assumes a single number if not a string
                                    parts = typeof value === "string" ? value.split( " " ) : [ value ];

                                for ( ; i < 4; i++ ) {
                                    expanded[ prefix + cssExpand[ i ] + suffix ] =
                                        parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
                                }

                                return expanded;
                            }
                        };

                        if ( prefix !== "margin" ) {
                            jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
                        }
                    } );

                    jQuery.fn.extend( {
                        css: function( name, value ) {
                            return access( this, function( elem, name, value ) {
                                var styles, len,
                                    map = {},
                                    i = 0;

                                if ( Array.isArray( name ) ) {
                                    styles = getStyles( elem );
                                    len = name.length;

                                    for ( ; i < len; i++ ) {
                                        map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
                                    }

                                    return map;
                                }

                                return value !== undefined ?
                                    jQuery.style( elem, name, value ) :
                                    jQuery.css( elem, name );
                            }, name, value, arguments.length > 1 );
                        }
                    } );


                    function Tween( elem, options, prop, end, easing ) {
                        return new Tween.prototype.init( elem, options, prop, end, easing );
                    }
                    jQuery.Tween = Tween;

                    Tween.prototype = {
                        constructor: Tween,
                        init: function( elem, options, prop, end, easing, unit ) {
                            this.elem = elem;
                            this.prop = prop;
                            this.easing = easing || jQuery.easing._default;
                            this.options = options;
                            this.start = this.now = this.cur();
                            this.end = end;
                            this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
                        },
                        cur: function() {
                            var hooks = Tween.propHooks[ this.prop ];

                            return hooks && hooks.get ?
                                hooks.get( this ) :
                                Tween.propHooks._default.get( this );
                        },
                        run: function( percent ) {
                            var eased,
                                hooks = Tween.propHooks[ this.prop ];

                            if ( this.options.duration ) {
                                this.pos = eased = jQuery.easing[ this.easing ](
                                    percent, this.options.duration * percent, 0, 1, this.options.duration
                                );
                            } else {
                                this.pos = eased = percent;
                            }
                            this.now = ( this.end - this.start ) * eased + this.start;

                            if ( this.options.step ) {
                                this.options.step.call( this.elem, this.now, this );
                            }

                            if ( hooks && hooks.set ) {
                                hooks.set( this );
                            } else {
                                Tween.propHooks._default.set( this );
                            }
                            return this;
                        }
                    };

                    Tween.prototype.init.prototype = Tween.prototype;

                    Tween.propHooks = {
                        _default: {
                            get: function( tween ) {
                                var result;

                                // Use a property on the element directly when it is not a DOM element,
                                // or when there is no matching style property that exists.
                                if ( tween.elem.nodeType !== 1 ||
                                    tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
                                    return tween.elem[ tween.prop ];
                                }

                                // Passing an empty string as a 3rd parameter to .css will automatically
                                // attempt a parseFloat and fallback to a string if the parse fails.
                                // Simple values such as "10px" are parsed to Float;
                                // complex values such as "rotate(1rad)" are returned as-is.
                                result = jQuery.css( tween.elem, tween.prop, "" );

                                // Empty strings, null, undefined and "auto" are converted to 0.
                                return !result || result === "auto" ? 0 : result;
                            },
                            set: function( tween ) {

                                // Use step hook for back compat.
                                // Use cssHook if its there.
                                // Use .style if available and use plain properties where available.
                                if ( jQuery.fx.step[ tween.prop ] ) {
                                    jQuery.fx.step[ tween.prop ]( tween );
                                } else if ( tween.elem.nodeType === 1 &&
                                    ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
                                        jQuery.cssHooks[ tween.prop ] ) ) {
                                    jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
                                } else {
                                    tween.elem[ tween.prop ] = tween.now;
                                }
                            }
                        }
                    };

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
                    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
                        set: function( tween ) {
                            if ( tween.elem.nodeType && tween.elem.parentNode ) {
                                tween.elem[ tween.prop ] = tween.now;
                            }
                        }
                    };

                    jQuery.easing = {
                        linear: function( p ) {
                            return p;
                        },
                        swing: function( p ) {
                            return 0.5 - Math.cos( p * Math.PI ) / 2;
                        },
                        _default: "swing"
                    };

                    jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
                    jQuery.fx.step = {};




                    var
                        fxNow, inProgress,
                        rfxtypes = /^(?:toggle|show|hide)$/,
                        rrun = /queueHooks$/;

                    function schedule() {
                        if ( inProgress ) {
                            if ( document.hidden === false && window.requestAnimationFrame ) {
                                window.requestAnimationFrame( schedule );
                            } else {
                                window.setTimeout( schedule, jQuery.fx.interval );
                            }

                            jQuery.fx.tick();
                        }
                    }

// Animations created synchronously will run synchronously
                    function createFxNow() {
                        window.setTimeout( function() {
                            fxNow = undefined;
                        } );
                        return ( fxNow = Date.now() );
                    }

// Generate parameters to create a standard animation
                    function genFx( type, includeWidth ) {
                        var which,
                            i = 0,
                            attrs = { height: type };

                        // If we include width, step value is 1 to do all cssExpand values,
                        // otherwise step value is 2 to skip over Left and Right
                        includeWidth = includeWidth ? 1 : 0;
                        for ( ; i < 4; i += 2 - includeWidth ) {
                            which = cssExpand[ i ];
                            attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
                        }

                        if ( includeWidth ) {
                            attrs.opacity = attrs.width = type;
                        }

                        return attrs;
                    }

                    function createTween( value, prop, animation ) {
                        var tween,
                            collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
                            index = 0,
                            length = collection.length;
                        for ( ; index < length; index++ ) {
                            if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

                                // We're done with this property
                                return tween;
                            }
                        }
                    }

                    function defaultPrefilter( elem, props, opts ) {
                        var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
                            isBox = "width" in props || "height" in props,
                            anim = this,
                            orig = {},
                            style = elem.style,
                            hidden = elem.nodeType && isHiddenWithinTree( elem ),
                            dataShow = dataPriv.get( elem, "fxshow" );

                        // Queue-skipping animations hijack the fx hooks
                        if ( !opts.queue ) {
                            hooks = jQuery._queueHooks( elem, "fx" );
                            if ( hooks.unqueued == null ) {
                                hooks.unqueued = 0;
                                oldfire = hooks.empty.fire;
                                hooks.empty.fire = function() {
                                    if ( !hooks.unqueued ) {
                                        oldfire();
                                    }
                                };
                            }
                            hooks.unqueued++;

                            anim.always( function() {

                                // Ensure the complete handler is called before this completes
                                anim.always( function() {
                                    hooks.unqueued--;
                                    if ( !jQuery.queue( elem, "fx" ).length ) {
                                        hooks.empty.fire();
                                    }
                                } );
                            } );
                        }

                        // Detect show/hide animations
                        for ( prop in props ) {
                            value = props[ prop ];
                            if ( rfxtypes.test( value ) ) {
                                delete props[ prop ];
                                toggle = toggle || value === "toggle";
                                if ( value === ( hidden ? "hide" : "show" ) ) {

                                    // Pretend to be hidden if this is a "show" and
                                    // there is still data from a stopped show/hide
                                    if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
                                        hidden = true;

                                        // Ignore all other no-op show/hide data
                                    } else {
                                        continue;
                                    }
                                }
                                orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
                            }
                        }

                        // Bail out if this is a no-op like .hide().hide()
                        propTween = !jQuery.isEmptyObject( props );
                        if ( !propTween && jQuery.isEmptyObject( orig ) ) {
                            return;
                        }

                        // Restrict "overflow" and "display" styles during box animations
                        if ( isBox && elem.nodeType === 1 ) {

                            // Support: IE <=9 - 11, Edge 12 - 15
                            // Record all 3 overflow attributes because IE does not infer the shorthand
                            // from identically-valued overflowX and overflowY and Edge just mirrors
                            // the overflowX value there.
                            opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

                            // Identify a display type, preferring old show/hide data over the CSS cascade
                            restoreDisplay = dataShow && dataShow.display;
                            if ( restoreDisplay == null ) {
                                restoreDisplay = dataPriv.get( elem, "display" );
                            }
                            display = jQuery.css( elem, "display" );
                            if ( display === "none" ) {
                                if ( restoreDisplay ) {
                                    display = restoreDisplay;
                                } else {

                                    // Get nonempty value(s) by temporarily forcing visibility
                                    showHide( [ elem ], true );
                                    restoreDisplay = elem.style.display || restoreDisplay;
                                    display = jQuery.css( elem, "display" );
                                    showHide( [ elem ] );
                                }
                            }

                            // Animate inline elements as inline-block
                            if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
                                if ( jQuery.css( elem, "float" ) === "none" ) {

                                    // Restore the original display value at the end of pure show/hide animations
                                    if ( !propTween ) {
                                        anim.done( function() {
                                            style.display = restoreDisplay;
                                        } );
                                        if ( restoreDisplay == null ) {
                                            display = style.display;
                                            restoreDisplay = display === "none" ? "" : display;
                                        }
                                    }
                                    style.display = "inline-block";
                                }
                            }
                        }

                        if ( opts.overflow ) {
                            style.overflow = "hidden";
                            anim.always( function() {
                                style.overflow = opts.overflow[ 0 ];
                                style.overflowX = opts.overflow[ 1 ];
                                style.overflowY = opts.overflow[ 2 ];
                            } );
                        }

                        // Implement show/hide animations
                        propTween = false;
                        for ( prop in orig ) {

                            // General show/hide setup for this element animation
                            if ( !propTween ) {
                                if ( dataShow ) {
                                    if ( "hidden" in dataShow ) {
                                        hidden = dataShow.hidden;
                                    }
                                } else {
                                    dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
                                }

                                // Store hidden/visible for toggle so `.stop().toggle()` "reverses"
                                if ( toggle ) {
                                    dataShow.hidden = !hidden;
                                }

                                // Show elements before animating them
                                if ( hidden ) {
                                    showHide( [ elem ], true );
                                }

                                /* eslint-disable no-loop-func */

                                anim.done( function() {

                                    /* eslint-enable no-loop-func */

                                    // The final step of a "hide" animation is actually hiding the element
                                    if ( !hidden ) {
                                        showHide( [ elem ] );
                                    }
                                    dataPriv.remove( elem, "fxshow" );
                                    for ( prop in orig ) {
                                        jQuery.style( elem, prop, orig[ prop ] );
                                    }
                                } );
                            }

                            // Per-property setup
                            propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
                            if ( !( prop in dataShow ) ) {
                                dataShow[ prop ] = propTween.start;
                                if ( hidden ) {
                                    propTween.end = propTween.start;
                                    propTween.start = 0;
                                }
                            }
                        }
                    }

                    function propFilter( props, specialEasing ) {
                        var index, name, easing, value, hooks;

                        // camelCase, specialEasing and expand cssHook pass
                        for ( index in props ) {
                            name = camelCase( index );
                            easing = specialEasing[ name ];
                            value = props[ index ];
                            if ( Array.isArray( value ) ) {
                                easing = value[ 1 ];
                                value = props[ index ] = value[ 0 ];
                            }

                            if ( index !== name ) {
                                props[ name ] = value;
                                delete props[ index ];
                            }

                            hooks = jQuery.cssHooks[ name ];
                            if ( hooks && "expand" in hooks ) {
                                value = hooks.expand( value );
                                delete props[ name ];

                                // Not quite $.extend, this won't overwrite existing keys.
                                // Reusing 'index' because we have the correct "name"
                                for ( index in value ) {
                                    if ( !( index in props ) ) {
                                        props[ index ] = value[ index ];
                                        specialEasing[ index ] = easing;
                                    }
                                }
                            } else {
                                specialEasing[ name ] = easing;
                            }
                        }
                    }

                    function Animation( elem, properties, options ) {
                        var result,
                            stopped,
                            index = 0,
                            length = Animation.prefilters.length,
                            deferred = jQuery.Deferred().always( function() {

                                // Don't match elem in the :animated selector
                                delete tick.elem;
                            } ),
                            tick = function() {
                                if ( stopped ) {
                                    return false;
                                }
                                var currentTime = fxNow || createFxNow(),
                                    remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

                                    // Support: Android 2.3 only
                                    // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
                                    temp = remaining / animation.duration || 0,
                                    percent = 1 - temp,
                                    index = 0,
                                    length = animation.tweens.length;

                                for ( ; index < length; index++ ) {
                                    animation.tweens[ index ].run( percent );
                                }

                                deferred.notifyWith( elem, [ animation, percent, remaining ] );

                                // If there's more to do, yield
                                if ( percent < 1 && length ) {
                                    return remaining;
                                }

                                // If this was an empty animation, synthesize a final progress notification
                                if ( !length ) {
                                    deferred.notifyWith( elem, [ animation, 1, 0 ] );
                                }

                                // Resolve the animation and report its conclusion
                                deferred.resolveWith( elem, [ animation ] );
                                return false;
                            },
                            animation = deferred.promise( {
                                elem: elem,
                                props: jQuery.extend( {}, properties ),
                                opts: jQuery.extend( true, {
                                    specialEasing: {},
                                    easing: jQuery.easing._default
                                }, options ),
                                originalProperties: properties,
                                originalOptions: options,
                                startTime: fxNow || createFxNow(),
                                duration: options.duration,
                                tweens: [],
                                createTween: function( prop, end ) {
                                    var tween = jQuery.Tween( elem, animation.opts, prop, end,
                                        animation.opts.specialEasing[ prop ] || animation.opts.easing );
                                    animation.tweens.push( tween );
                                    return tween;
                                },
                                stop: function( gotoEnd ) {
                                    var index = 0,

                                        // If we are going to the end, we want to run all the tweens
                                        // otherwise we skip this part
                                        length = gotoEnd ? animation.tweens.length : 0;
                                    if ( stopped ) {
                                        return this;
                                    }
                                    stopped = true;
                                    for ( ; index < length; index++ ) {
                                        animation.tweens[ index ].run( 1 );
                                    }

                                    // Resolve when we played the last frame; otherwise, reject
                                    if ( gotoEnd ) {
                                        deferred.notifyWith( elem, [ animation, 1, 0 ] );
                                        deferred.resolveWith( elem, [ animation, gotoEnd ] );
                                    } else {
                                        deferred.rejectWith( elem, [ animation, gotoEnd ] );
                                    }
                                    return this;
                                }
                            } ),
                            props = animation.props;

                        propFilter( props, animation.opts.specialEasing );

                        for ( ; index < length; index++ ) {
                            result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
                            if ( result ) {
                                if ( isFunction( result.stop ) ) {
                                    jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
                                        result.stop.bind( result );
                                }
                                return result;
                            }
                        }

                        jQuery.map( props, createTween, animation );

                        if ( isFunction( animation.opts.start ) ) {
                            animation.opts.start.call( elem, animation );
                        }

                        // Attach callbacks from options
                        animation
                            .progress( animation.opts.progress )
                            .done( animation.opts.done, animation.opts.complete )
                            .fail( animation.opts.fail )
                            .always( animation.opts.always );

                        jQuery.fx.timer(
                            jQuery.extend( tick, {
                                elem: elem,
                                anim: animation,
                                queue: animation.opts.queue
                            } )
                        );

                        return animation;
                    }

                    jQuery.Animation = jQuery.extend( Animation, {

                        tweeners: {
                            "*": [ function( prop, value ) {
                                var tween = this.createTween( prop, value );
                                adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
                                return tween;
                            } ]
                        },

                        tweener: function( props, callback ) {
                            if ( isFunction( props ) ) {
                                callback = props;
                                props = [ "*" ];
                            } else {
                                props = props.match( rnothtmlwhite );
                            }

                            var prop,
                                index = 0,
                                length = props.length;

                            for ( ; index < length; index++ ) {
                                prop = props[ index ];
                                Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
                                Animation.tweeners[ prop ].unshift( callback );
                            }
                        },

                        prefilters: [ defaultPrefilter ],

                        prefilter: function( callback, prepend ) {
                            if ( prepend ) {
                                Animation.prefilters.unshift( callback );
                            } else {
                                Animation.prefilters.push( callback );
                            }
                        }
                    } );

                    jQuery.speed = function( speed, easing, fn ) {
                        var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
                            complete: fn || !fn && easing ||
                                isFunction( speed ) && speed,
                            duration: speed,
                            easing: fn && easing || easing && !isFunction( easing ) && easing
                        };

                        // Go to the end state if fx are off
                        if ( jQuery.fx.off ) {
                            opt.duration = 0;

                        } else {
                            if ( typeof opt.duration !== "number" ) {
                                if ( opt.duration in jQuery.fx.speeds ) {
                                    opt.duration = jQuery.fx.speeds[ opt.duration ];

                                } else {
                                    opt.duration = jQuery.fx.speeds._default;
                                }
                            }
                        }

                        // Normalize opt.queue - true/undefined/null -> "fx"
                        if ( opt.queue == null || opt.queue === true ) {
                            opt.queue = "fx";
                        }

                        // Queueing
                        opt.old = opt.complete;

                        opt.complete = function() {
                            if ( isFunction( opt.old ) ) {
                                opt.old.call( this );
                            }

                            if ( opt.queue ) {
                                jQuery.dequeue( this, opt.queue );
                            }
                        };

                        return opt;
                    };

                    jQuery.fn.extend( {
                        fadeTo: function( speed, to, easing, callback ) {

                            // Show any hidden elements after setting opacity to 0
                            return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

                                // Animate to the value specified
                                .end().animate( { opacity: to }, speed, easing, callback );
                        },
                        animate: function( prop, speed, easing, callback ) {
                            var empty = jQuery.isEmptyObject( prop ),
                                optall = jQuery.speed( speed, easing, callback ),
                                doAnimation = function() {

                                    // Operate on a copy of prop so per-property easing won't be lost
                                    var anim = Animation( this, jQuery.extend( {}, prop ), optall );

                                    // Empty animations, or finishing resolves immediately
                                    if ( empty || dataPriv.get( this, "finish" ) ) {
                                        anim.stop( true );
                                    }
                                };
                            doAnimation.finish = doAnimation;

                            return empty || optall.queue === false ?
                                this.each( doAnimation ) :
                                this.queue( optall.queue, doAnimation );
                        },
                        stop: function( type, clearQueue, gotoEnd ) {
                            var stopQueue = function( hooks ) {
                                var stop = hooks.stop;
                                delete hooks.stop;
                                stop( gotoEnd );
                            };

                            if ( typeof type !== "string" ) {
                                gotoEnd = clearQueue;
                                clearQueue = type;
                                type = undefined;
                            }
                            if ( clearQueue && type !== false ) {
                                this.queue( type || "fx", [] );
                            }

                            return this.each( function() {
                                var dequeue = true,
                                    index = type != null && type + "queueHooks",
                                    timers = jQuery.timers,
                                    data = dataPriv.get( this );

                                if ( index ) {
                                    if ( data[ index ] && data[ index ].stop ) {
                                        stopQueue( data[ index ] );
                                    }
                                } else {
                                    for ( index in data ) {
                                        if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
                                            stopQueue( data[ index ] );
                                        }
                                    }
                                }

                                for ( index = timers.length; index--; ) {
                                    if ( timers[ index ].elem === this &&
                                        ( type == null || timers[ index ].queue === type ) ) {

                                        timers[ index ].anim.stop( gotoEnd );
                                        dequeue = false;
                                        timers.splice( index, 1 );
                                    }
                                }

                                // Start the next in the queue if the last step wasn't forced.
                                // Timers currently will call their complete callbacks, which
                                // will dequeue but only if they were gotoEnd.
                                if ( dequeue || !gotoEnd ) {
                                    jQuery.dequeue( this, type );
                                }
                            } );
                        },
                        finish: function( type ) {
                            if ( type !== false ) {
                                type = type || "fx";
                            }
                            return this.each( function() {
                                var index,
                                    data = dataPriv.get( this ),
                                    queue = data[ type + "queue" ],
                                    hooks = data[ type + "queueHooks" ],
                                    timers = jQuery.timers,
                                    length = queue ? queue.length : 0;

                                // Enable finishing flag on private data
                                data.finish = true;

                                // Empty the queue first
                                jQuery.queue( this, type, [] );

                                if ( hooks && hooks.stop ) {
                                    hooks.stop.call( this, true );
                                }

                                // Look for any active animations, and finish them
                                for ( index = timers.length; index--; ) {
                                    if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
                                        timers[ index ].anim.stop( true );
                                        timers.splice( index, 1 );
                                    }
                                }

                                // Look for any animations in the old queue and finish them
                                for ( index = 0; index < length; index++ ) {
                                    if ( queue[ index ] && queue[ index ].finish ) {
                                        queue[ index ].finish.call( this );
                                    }
                                }

                                // Turn off finishing flag
                                delete data.finish;
                            } );
                        }
                    } );

                    jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
                        var cssFn = jQuery.fn[ name ];
                        jQuery.fn[ name ] = function( speed, easing, callback ) {
                            return speed == null || typeof speed === "boolean" ?
                                cssFn.apply( this, arguments ) :
                                this.animate( genFx( name, true ), speed, easing, callback );
                        };
                    } );

// Generate shortcuts for custom animations
                    jQuery.each( {
                        slideDown: genFx( "show" ),
                        slideUp: genFx( "hide" ),
                        slideToggle: genFx( "toggle" ),
                        fadeIn: { opacity: "show" },
                        fadeOut: { opacity: "hide" },
                        fadeToggle: { opacity: "toggle" }
                    }, function( name, props ) {
                        jQuery.fn[ name ] = function( speed, easing, callback ) {
                            return this.animate( props, speed, easing, callback );
                        };
                    } );

                    jQuery.timers = [];
                    jQuery.fx.tick = function() {
                        var timer,
                            i = 0,
                            timers = jQuery.timers;

                        fxNow = Date.now();

                        for ( ; i < timers.length; i++ ) {
                            timer = timers[ i ];

                            // Run the timer and safely remove it when done (allowing for external removal)
                            if ( !timer() && timers[ i ] === timer ) {
                                timers.splice( i--, 1 );
                            }
                        }

                        if ( !timers.length ) {
                            jQuery.fx.stop();
                        }
                        fxNow = undefined;
                    };

                    jQuery.fx.timer = function( timer ) {
                        jQuery.timers.push( timer );
                        jQuery.fx.start();
                    };

                    jQuery.fx.interval = 13;
                    jQuery.fx.start = function() {
                        if ( inProgress ) {
                            return;
                        }

                        inProgress = true;
                        schedule();
                    };

                    jQuery.fx.stop = function() {
                        inProgress = null;
                    };

                    jQuery.fx.speeds = {
                        slow: 600,
                        fast: 200,

                        // Default speed
                        _default: 400
                    };


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
                    jQuery.fn.delay = function( time, type ) {
                        time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
                        type = type || "fx";

                        return this.queue( type, function( next, hooks ) {
                            var timeout = window.setTimeout( next, time );
                            hooks.stop = function() {
                                window.clearTimeout( timeout );
                            };
                        } );
                    };


                    ( function() {
                        var input = document.createElement( "input" ),
                            select = document.createElement( "select" ),
                            opt = select.appendChild( document.createElement( "option" ) );

                        input.type = "checkbox";

                        // Support: Android <=4.3 only
                        // Default value for a checkbox should be "on"
                        support.checkOn = input.value !== "";

                        // Support: IE <=11 only
                        // Must access selectedIndex to make default options select
                        support.optSelected = opt.selected;

                        // Support: IE <=11 only
                        // An input loses its value after becoming a radio
                        input = document.createElement( "input" );
                        input.value = "t";
                        input.type = "radio";
                        support.radioValue = input.value === "t";
                    } )();


                    var boolHook,
                        attrHandle = jQuery.expr.attrHandle;

                    jQuery.fn.extend( {
                        attr: function( name, value ) {
                            return access( this, jQuery.attr, name, value, arguments.length > 1 );
                        },

                        removeAttr: function( name ) {
                            return this.each( function() {
                                jQuery.removeAttr( this, name );
                            } );
                        }
                    } );

                    jQuery.extend( {
                        attr: function( elem, name, value ) {
                            var ret, hooks,
                                nType = elem.nodeType;

                            // Don't get/set attributes on text, comment and attribute nodes
                            if ( nType === 3 || nType === 8 || nType === 2 ) {
                                return;
                            }

                            // Fallback to prop when attributes are not supported
                            if ( typeof elem.getAttribute === "undefined" ) {
                                return jQuery.prop( elem, name, value );
                            }

                            // Attribute hooks are determined by the lowercase version
                            // Grab necessary hook if one is defined
                            if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
                                hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
                                    ( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
                            }

                            if ( value !== undefined ) {
                                if ( value === null ) {
                                    jQuery.removeAttr( elem, name );
                                    return;
                                }

                                if ( hooks && "set" in hooks &&
                                    ( ret = hooks.set( elem, value, name ) ) !== undefined ) {
                                    return ret;
                                }

                                elem.setAttribute( name, value + "" );
                                return value;
                            }

                            if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
                                return ret;
                            }

                            ret = jQuery.find.attr( elem, name );

                            // Non-existent attributes return null, we normalize to undefined
                            return ret == null ? undefined : ret;
                        },

                        attrHooks: {
                            type: {
                                set: function( elem, value ) {
                                    if ( !support.radioValue && value === "radio" &&
                                        nodeName( elem, "input" ) ) {
                                        var val = elem.value;
                                        elem.setAttribute( "type", value );
                                        if ( val ) {
                                            elem.value = val;
                                        }
                                        return value;
                                    }
                                }
                            }
                        },

                        removeAttr: function( elem, value ) {
                            var name,
                                i = 0,

                                // Attribute names can contain non-HTML whitespace characters
                                // https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
                                attrNames = value && value.match( rnothtmlwhite );

                            if ( attrNames && elem.nodeType === 1 ) {
                                while ( ( name = attrNames[ i++ ] ) ) {
                                    elem.removeAttribute( name );
                                }
                            }
                        }
                    } );

// Hooks for boolean attributes
                    boolHook = {
                        set: function( elem, value, name ) {
                            if ( value === false ) {

                                // Remove boolean attributes when set to false
                                jQuery.removeAttr( elem, name );
                            } else {
                                elem.setAttribute( name, name );
                            }
                            return name;
                        }
                    };

                    jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
                        var getter = attrHandle[ name ] || jQuery.find.attr;

                        attrHandle[ name ] = function( elem, name, isXML ) {
                            var ret, handle,
                                lowercaseName = name.toLowerCase();

                            if ( !isXML ) {

                                // Avoid an infinite loop by temporarily removing this function from the getter
                                handle = attrHandle[ lowercaseName ];
                                attrHandle[ lowercaseName ] = ret;
                                ret = getter( elem, name, isXML ) != null ?
                                    lowercaseName :
                                    null;
                                attrHandle[ lowercaseName ] = handle;
                            }
                            return ret;
                        };
                    } );




                    var rfocusable = /^(?:input|select|textarea|button)$/i,
                        rclickable = /^(?:a|area)$/i;

                    jQuery.fn.extend( {
                        prop: function( name, value ) {
                            return access( this, jQuery.prop, name, value, arguments.length > 1 );
                        },

                        removeProp: function( name ) {
                            return this.each( function() {
                                delete this[ jQuery.propFix[ name ] || name ];
                            } );
                        }
                    } );

                    jQuery.extend( {
                        prop: function( elem, name, value ) {
                            var ret, hooks,
                                nType = elem.nodeType;

                            // Don't get/set properties on text, comment and attribute nodes
                            if ( nType === 3 || nType === 8 || nType === 2 ) {
                                return;
                            }

                            if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

                                // Fix name and attach hooks
                                name = jQuery.propFix[ name ] || name;
                                hooks = jQuery.propHooks[ name ];
                            }

                            if ( value !== undefined ) {
                                if ( hooks && "set" in hooks &&
                                    ( ret = hooks.set( elem, value, name ) ) !== undefined ) {
                                    return ret;
                                }

                                return ( elem[ name ] = value );
                            }

                            if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
                                return ret;
                            }

                            return elem[ name ];
                        },

                        propHooks: {
                            tabIndex: {
                                get: function( elem ) {

                                    // Support: IE <=9 - 11 only
                                    // elem.tabIndex doesn't always return the
                                    // correct value when it hasn't been explicitly set
                                    // https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
                                    // Use proper attribute retrieval(#12072)
                                    var tabindex = jQuery.find.attr( elem, "tabindex" );

                                    if ( tabindex ) {
                                        return parseInt( tabindex, 10 );
                                    }

                                    if (
                                        rfocusable.test( elem.nodeName ) ||
                                        rclickable.test( elem.nodeName ) &&
                                        elem.href
                                    ) {
                                        return 0;
                                    }

                                    return -1;
                                }
                            }
                        },

                        propFix: {
                            "for": "htmlFor",
                            "class": "className"
                        }
                    } );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
                    if ( !support.optSelected ) {
                        jQuery.propHooks.selected = {
                            get: function( elem ) {

                                /* eslint no-unused-expressions: "off" */

                                var parent = elem.parentNode;
                                if ( parent && parent.parentNode ) {
                                    parent.parentNode.selectedIndex;
                                }
                                return null;
                            },
                            set: function( elem ) {

                                /* eslint no-unused-expressions: "off" */

                                var parent = elem.parentNode;
                                if ( parent ) {
                                    parent.selectedIndex;

                                    if ( parent.parentNode ) {
                                        parent.parentNode.selectedIndex;
                                    }
                                }
                            }
                        };
                    }

                    jQuery.each( [
                        "tabIndex",
                        "readOnly",
                        "maxLength",
                        "cellSpacing",
                        "cellPadding",
                        "rowSpan",
                        "colSpan",
                        "useMap",
                        "frameBorder",
                        "contentEditable"
                    ], function() {
                        jQuery.propFix[ this.toLowerCase() ] = this;
                    } );




                    // Strip and collapse whitespace according to HTML spec
                    // https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
                    function stripAndCollapse( value ) {
                        var tokens = value.match( rnothtmlwhite ) || [];
                        return tokens.join( " " );
                    }


                    function getClass( elem ) {
                        return elem.getAttribute && elem.getAttribute( "class" ) || "";
                    }

                    function classesToArray( value ) {
                        if ( Array.isArray( value ) ) {
                            return value;
                        }
                        if ( typeof value === "string" ) {
                            return value.match( rnothtmlwhite ) || [];
                        }
                        return [];
                    }

                    jQuery.fn.extend( {
                        addClass: function( value ) {
                            var classes, elem, cur, curValue, clazz, j, finalValue,
                                i = 0;

                            if ( isFunction( value ) ) {
                                return this.each( function( j ) {
                                    jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
                                } );
                            }

                            classes = classesToArray( value );

                            if ( classes.length ) {
                                while ( ( elem = this[ i++ ] ) ) {
                                    curValue = getClass( elem );
                                    cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

                                    if ( cur ) {
                                        j = 0;
                                        while ( ( clazz = classes[ j++ ] ) ) {
                                            if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
                                                cur += clazz + " ";
                                            }
                                        }

                                        // Only assign if different to avoid unneeded rendering.
                                        finalValue = stripAndCollapse( cur );
                                        if ( curValue !== finalValue ) {
                                            elem.setAttribute( "class", finalValue );
                                        }
                                    }
                                }
                            }

                            return this;
                        },

                        removeClass: function( value ) {
                            var classes, elem, cur, curValue, clazz, j, finalValue,
                                i = 0;

                            if ( isFunction( value ) ) {
                                return this.each( function( j ) {
                                    jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
                                } );
                            }

                            if ( !arguments.length ) {
                                return this.attr( "class", "" );
                            }

                            classes = classesToArray( value );

                            if ( classes.length ) {
                                while ( ( elem = this[ i++ ] ) ) {
                                    curValue = getClass( elem );

                                    // This expression is here for better compressibility (see addClass)
                                    cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

                                    if ( cur ) {
                                        j = 0;
                                        while ( ( clazz = classes[ j++ ] ) ) {

                                            // Remove *all* instances
                                            while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
                                                cur = cur.replace( " " + clazz + " ", " " );
                                            }
                                        }

                                        // Only assign if different to avoid unneeded rendering.
                                        finalValue = stripAndCollapse( cur );
                                        if ( curValue !== finalValue ) {
                                            elem.setAttribute( "class", finalValue );
                                        }
                                    }
                                }
                            }

                            return this;
                        },

                        toggleClass: function( value, stateVal ) {
                            var type = typeof value,
                                isValidValue = type === "string" || Array.isArray( value );

                            if ( typeof stateVal === "boolean" && isValidValue ) {
                                return stateVal ? this.addClass( value ) : this.removeClass( value );
                            }

                            if ( isFunction( value ) ) {
                                return this.each( function( i ) {
                                    jQuery( this ).toggleClass(
                                        value.call( this, i, getClass( this ), stateVal ),
                                        stateVal
                                    );
                                } );
                            }

                            return this.each( function() {
                                var className, i, self, classNames;

                                if ( isValidValue ) {

                                    // Toggle individual class names
                                    i = 0;
                                    self = jQuery( this );
                                    classNames = classesToArray( value );

                                    while ( ( className = classNames[ i++ ] ) ) {

                                        // Check each className given, space separated list
                                        if ( self.hasClass( className ) ) {
                                            self.removeClass( className );
                                        } else {
                                            self.addClass( className );
                                        }
                                    }

                                    // Toggle whole class name
                                } else if ( value === undefined || type === "boolean" ) {
                                    className = getClass( this );
                                    if ( className ) {

                                        // Store className if set
                                        dataPriv.set( this, "__className__", className );
                                    }

                                    // If the element has a class name or if we're passed `false`,
                                    // then remove the whole classname (if there was one, the above saved it).
                                    // Otherwise bring back whatever was previously saved (if anything),
                                    // falling back to the empty string if nothing was stored.
                                    if ( this.setAttribute ) {
                                        this.setAttribute( "class",
                                            className || value === false ?
                                                "" :
                                                dataPriv.get( this, "__className__" ) || ""
                                        );
                                    }
                                }
                            } );
                        },

                        hasClass: function( selector ) {
                            var className, elem,
                                i = 0;

                            className = " " + selector + " ";
                            while ( ( elem = this[ i++ ] ) ) {
                                if ( elem.nodeType === 1 &&
                                    ( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
                                    return true;
                                }
                            }

                            return false;
                        }
                    } );




                    var rreturn = /\r/g;

                    jQuery.fn.extend( {
                        val: function( value ) {
                            var hooks, ret, valueIsFunction,
                                elem = this[ 0 ];

                            if ( !arguments.length ) {
                                if ( elem ) {
                                    hooks = jQuery.valHooks[ elem.type ] ||
                                        jQuery.valHooks[ elem.nodeName.toLowerCase() ];

                                    if ( hooks &&
                                        "get" in hooks &&
                                        ( ret = hooks.get( elem, "value" ) ) !== undefined
                                    ) {
                                        return ret;
                                    }

                                    ret = elem.value;

                                    // Handle most common string cases
                                    if ( typeof ret === "string" ) {
                                        return ret.replace( rreturn, "" );
                                    }

                                    // Handle cases where value is null/undef or number
                                    return ret == null ? "" : ret;
                                }

                                return;
                            }

                            valueIsFunction = isFunction( value );

                            return this.each( function( i ) {
                                var val;

                                if ( this.nodeType !== 1 ) {
                                    return;
                                }

                                if ( valueIsFunction ) {
                                    val = value.call( this, i, jQuery( this ).val() );
                                } else {
                                    val = value;
                                }

                                // Treat null/undefined as ""; convert numbers to string
                                if ( val == null ) {
                                    val = "";

                                } else if ( typeof val === "number" ) {
                                    val += "";

                                } else if ( Array.isArray( val ) ) {
                                    val = jQuery.map( val, function( value ) {
                                        return value == null ? "" : value + "";
                                    } );
                                }

                                hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

                                // If set returns undefined, fall back to normal setting
                                if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
                                    this.value = val;
                                }
                            } );
                        }
                    } );

                    jQuery.extend( {
                        valHooks: {
                            option: {
                                get: function( elem ) {

                                    var val = jQuery.find.attr( elem, "value" );
                                    return val != null ?
                                        val :

                                        // Support: IE <=10 - 11 only
                                        // option.text throws exceptions (#14686, #14858)
                                        // Strip and collapse whitespace
                                        // https://html.spec.whatwg.org/#strip-and-collapse-whitespace
                                        stripAndCollapse( jQuery.text( elem ) );
                                }
                            },
                            select: {
                                get: function( elem ) {
                                    var value, option, i,
                                        options = elem.options,
                                        index = elem.selectedIndex,
                                        one = elem.type === "select-one",
                                        values = one ? null : [],
                                        max = one ? index + 1 : options.length;

                                    if ( index < 0 ) {
                                        i = max;

                                    } else {
                                        i = one ? index : 0;
                                    }

                                    // Loop through all the selected options
                                    for ( ; i < max; i++ ) {
                                        option = options[ i ];

                                        // Support: IE <=9 only
                                        // IE8-9 doesn't update selected after form reset (#2551)
                                        if ( ( option.selected || i === index ) &&

                                            // Don't return options that are disabled or in a disabled optgroup
                                            !option.disabled &&
                                            ( !option.parentNode.disabled ||
                                                !nodeName( option.parentNode, "optgroup" ) ) ) {

                                            // Get the specific value for the option
                                            value = jQuery( option ).val();

                                            // We don't need an array for one selects
                                            if ( one ) {
                                                return value;
                                            }

                                            // Multi-Selects return an array
                                            values.push( value );
                                        }
                                    }

                                    return values;
                                },

                                set: function( elem, value ) {
                                    var optionSet, option,
                                        options = elem.options,
                                        values = jQuery.makeArray( value ),
                                        i = options.length;

                                    while ( i-- ) {
                                        option = options[ i ];

                                        /* eslint-disable no-cond-assign */

                                        if ( option.selected =
                                            jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
                                        ) {
                                            optionSet = true;
                                        }

                                        /* eslint-enable no-cond-assign */
                                    }

                                    // Force browsers to behave consistently when non-matching value is set
                                    if ( !optionSet ) {
                                        elem.selectedIndex = -1;
                                    }
                                    return values;
                                }
                            }
                        }
                    } );

// Radios and checkboxes getter/setter
                    jQuery.each( [ "radio", "checkbox" ], function() {
                        jQuery.valHooks[ this ] = {
                            set: function( elem, value ) {
                                if ( Array.isArray( value ) ) {
                                    return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
                                }
                            }
                        };
                        if ( !support.checkOn ) {
                            jQuery.valHooks[ this ].get = function( elem ) {
                                return elem.getAttribute( "value" ) === null ? "on" : elem.value;
                            };
                        }
                    } );




// Return jQuery for attributes-only inclusion


                    support.focusin = "onfocusin" in window;


                    var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
                        stopPropagationCallback = function( e ) {
                            e.stopPropagation();
                        };

                    jQuery.extend( jQuery.event, {

                        trigger: function( event, data, elem, onlyHandlers ) {

                            var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
                                eventPath = [ elem || document ],
                                type = hasOwn.call( event, "type" ) ? event.type : event,
                                namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

                            cur = lastElement = tmp = elem = elem || document;

                            // Don't do events on text and comment nodes
                            if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
                                return;
                            }

                            // focus/blur morphs to focusin/out; ensure we're not firing them right now
                            if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
                                return;
                            }

                            if ( type.indexOf( "." ) > -1 ) {

                                // Namespaced trigger; create a regexp to match event type in handle()
                                namespaces = type.split( "." );
                                type = namespaces.shift();
                                namespaces.sort();
                            }
                            ontype = type.indexOf( ":" ) < 0 && "on" + type;

                            // Caller can pass in a jQuery.Event object, Object, or just an event type string
                            event = event[ jQuery.expando ] ?
                                event :
                                new jQuery.Event( type, typeof event === "object" && event );

                            // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
                            event.isTrigger = onlyHandlers ? 2 : 3;
                            event.namespace = namespaces.join( "." );
                            event.rnamespace = event.namespace ?
                                new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
                                null;

                            // Clean up the event in case it is being reused
                            event.result = undefined;
                            if ( !event.target ) {
                                event.target = elem;
                            }

                            // Clone any incoming data and prepend the event, creating the handler arg list
                            data = data == null ?
                                [ event ] :
                                jQuery.makeArray( data, [ event ] );

                            // Allow special events to draw outside the lines
                            special = jQuery.event.special[ type ] || {};
                            if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
                                return;
                            }

                            // Determine event propagation path in advance, per W3C events spec (#9951)
                            // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
                            if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

                                bubbleType = special.delegateType || type;
                                if ( !rfocusMorph.test( bubbleType + type ) ) {
                                    cur = cur.parentNode;
                                }
                                for ( ; cur; cur = cur.parentNode ) {
                                    eventPath.push( cur );
                                    tmp = cur;
                                }

                                // Only add window if we got to document (e.g., not plain obj or detached DOM)
                                if ( tmp === ( elem.ownerDocument || document ) ) {
                                    eventPath.push( tmp.defaultView || tmp.parentWindow || window );
                                }
                            }

                            // Fire handlers on the event path
                            i = 0;
                            while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
                                lastElement = cur;
                                event.type = i > 1 ?
                                    bubbleType :
                                    special.bindType || type;

                                // jQuery handler
                                handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
                                    dataPriv.get( cur, "handle" );
                                if ( handle ) {
                                    handle.apply( cur, data );
                                }

                                // Native handler
                                handle = ontype && cur[ ontype ];
                                if ( handle && handle.apply && acceptData( cur ) ) {
                                    event.result = handle.apply( cur, data );
                                    if ( event.result === false ) {
                                        event.preventDefault();
                                    }
                                }
                            }
                            event.type = type;

                            // If nobody prevented the default action, do it now
                            if ( !onlyHandlers && !event.isDefaultPrevented() ) {

                                if ( ( !special._default ||
                                    special._default.apply( eventPath.pop(), data ) === false ) &&
                                    acceptData( elem ) ) {

                                    // Call a native DOM method on the target with the same name as the event.
                                    // Don't do default actions on window, that's where global variables be (#6170)
                                    if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

                                        // Don't re-trigger an onFOO event when we call its FOO() method
                                        tmp = elem[ ontype ];

                                        if ( tmp ) {
                                            elem[ ontype ] = null;
                                        }

                                        // Prevent re-triggering of the same event, since we already bubbled it above
                                        jQuery.event.triggered = type;

                                        if ( event.isPropagationStopped() ) {
                                            lastElement.addEventListener( type, stopPropagationCallback );
                                        }

                                        elem[ type ]();

                                        if ( event.isPropagationStopped() ) {
                                            lastElement.removeEventListener( type, stopPropagationCallback );
                                        }

                                        jQuery.event.triggered = undefined;

                                        if ( tmp ) {
                                            elem[ ontype ] = tmp;
                                        }
                                    }
                                }
                            }

                            return event.result;
                        },

                        // Piggyback on a donor event to simulate a different one
                        // Used only for `focus(in | out)` events
                        simulate: function( type, elem, event ) {
                            var e = jQuery.extend(
                                new jQuery.Event(),
                                event,
                                {
                                    type: type,
                                    isSimulated: true
                                }
                            );

                            jQuery.event.trigger( e, null, elem );
                        }

                    } );

                    jQuery.fn.extend( {

                        trigger: function( type, data ) {
                            return this.each( function() {
                                jQuery.event.trigger( type, data, this );
                            } );
                        },
                        triggerHandler: function( type, data ) {
                            var elem = this[ 0 ];
                            if ( elem ) {
                                return jQuery.event.trigger( type, data, elem, true );
                            }
                        }
                    } );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
                    if ( !support.focusin ) {
                        jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

                            // Attach a single capturing handler on the document while someone wants focusin/focusout
                            var handler = function( event ) {
                                jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
                            };

                            jQuery.event.special[ fix ] = {
                                setup: function() {
                                    var doc = this.ownerDocument || this,
                                        attaches = dataPriv.access( doc, fix );

                                    if ( !attaches ) {
                                        doc.addEventListener( orig, handler, true );
                                    }
                                    dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
                                },
                                teardown: function() {
                                    var doc = this.ownerDocument || this,
                                        attaches = dataPriv.access( doc, fix ) - 1;

                                    if ( !attaches ) {
                                        doc.removeEventListener( orig, handler, true );
                                        dataPriv.remove( doc, fix );

                                    } else {
                                        dataPriv.access( doc, fix, attaches );
                                    }
                                }
                            };
                        } );
                    }
                    var location = window.location;

                    var nonce = Date.now();

                    var rquery = ( /\?/ );



// Cross-browser xml parsing
                    jQuery.parseXML = function( data ) {
                        var xml;
                        if ( !data || typeof data !== "string" ) {
                            return null;
                        }

                        // Support: IE 9 - 11 only
                        // IE throws on parseFromString with invalid input.
                        try {
                            xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
                        } catch ( e ) {
                            xml = undefined;
                        }

                        if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
                            jQuery.error( "Invalid XML: " + data );
                        }
                        return xml;
                    };


                    var
                        rbracket = /\[\]$/,
                        rCRLF = /\r?\n/g,
                        rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
                        rsubmittable = /^(?:input|select|textarea|keygen)/i;

                    function buildParams( prefix, obj, traditional, add ) {
                        var name;

                        if ( Array.isArray( obj ) ) {

                            // Serialize array item.
                            jQuery.each( obj, function( i, v ) {
                                if ( traditional || rbracket.test( prefix ) ) {

                                    // Treat each array item as a scalar.
                                    add( prefix, v );

                                } else {

                                    // Item is non-scalar (array or object), encode its numeric index.
                                    buildParams(
                                        prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
                                        v,
                                        traditional,
                                        add
                                    );
                                }
                            } );

                        } else if ( !traditional && toType( obj ) === "object" ) {

                            // Serialize object item.
                            for ( name in obj ) {
                                buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
                            }

                        } else {

                            // Serialize scalar item.
                            add( prefix, obj );
                        }
                    }

// Serialize an array of form elements or a set of
// key/values into a query string
                    jQuery.param = function( a, traditional ) {
                        var prefix,
                            s = [],
                            add = function( key, valueOrFunction ) {

                                // If value is a function, invoke it and use its return value
                                var value = isFunction( valueOrFunction ) ?
                                    valueOrFunction() :
                                    valueOrFunction;

                                s[ s.length ] = encodeURIComponent( key ) + "=" +
                                    encodeURIComponent( value == null ? "" : value );
                            };

                        // If an array was passed in, assume that it is an array of form elements.
                        if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

                            // Serialize the form elements
                            jQuery.each( a, function() {
                                add( this.name, this.value );
                            } );

                        } else {

                            // If traditional, encode the "old" way (the way 1.3.2 or older
                            // did it), otherwise encode params recursively.
                            for ( prefix in a ) {
                                buildParams( prefix, a[ prefix ], traditional, add );
                            }
                        }

                        // Return the resulting serialization
                        return s.join( "&" );
                    };

                    jQuery.fn.extend( {
                        serialize: function() {
                            return jQuery.param( this.serializeArray() );
                        },
                        serializeArray: function() {
                            return this.map( function() {

                                // Can add propHook for "elements" to filter or add form elements
                                var elements = jQuery.prop( this, "elements" );
                                return elements ? jQuery.makeArray( elements ) : this;
                            } )
                                .filter( function() {
                                    var type = this.type;

                                    // Use .is( ":disabled" ) so that fieldset[disabled] works
                                    return this.name && !jQuery( this ).is( ":disabled" ) &&
                                        rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
                                        ( this.checked || !rcheckableType.test( type ) );
                                } )
                                .map( function( i, elem ) {
                                    var val = jQuery( this ).val();

                                    if ( val == null ) {
                                        return null;
                                    }

                                    if ( Array.isArray( val ) ) {
                                        return jQuery.map( val, function( val ) {
                                            return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
                                        } );
                                    }

                                    return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
                                } ).get();
                        }
                    } );


                    var
                        r20 = /%20/g,
                        rhash = /#.*$/,
                        rantiCache = /([?&])_=[^&]*/,
                        rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

                        // #7653, #8125, #8152: local protocol detection
                        rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
                        rnoContent = /^(?:GET|HEAD)$/,
                        rprotocol = /^\/\//,

                        /* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
                        prefilters = {},

                        /* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
                        transports = {},

                        // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
                        allTypes = "*/".concat( "*" ),

                        // Anchor tag for parsing the document origin
                        originAnchor = document.createElement( "a" );
                    originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
                    function addToPrefiltersOrTransports( structure ) {

                        // dataTypeExpression is optional and defaults to "*"
                        return function( dataTypeExpression, func ) {

                            if ( typeof dataTypeExpression !== "string" ) {
                                func = dataTypeExpression;
                                dataTypeExpression = "*";
                            }

                            var dataType,
                                i = 0,
                                dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

                            if ( isFunction( func ) ) {

                                // For each dataType in the dataTypeExpression
                                while ( ( dataType = dataTypes[ i++ ] ) ) {

                                    // Prepend if requested
                                    if ( dataType[ 0 ] === "+" ) {
                                        dataType = dataType.slice( 1 ) || "*";
                                        ( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

                                        // Otherwise append
                                    } else {
                                        ( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
                                    }
                                }
                            }
                        };
                    }

// Base inspection function for prefilters and transports
                    function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

                        var inspected = {},
                            seekingTransport = ( structure === transports );

                        function inspect( dataType ) {
                            var selected;
                            inspected[ dataType ] = true;
                            jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
                                var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
                                if ( typeof dataTypeOrTransport === "string" &&
                                    !seekingTransport && !inspected[ dataTypeOrTransport ] ) {

                                    options.dataTypes.unshift( dataTypeOrTransport );
                                    inspect( dataTypeOrTransport );
                                    return false;
                                } else if ( seekingTransport ) {
                                    return !( selected = dataTypeOrTransport );
                                }
                            } );
                            return selected;
                        }

                        return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
                    }

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
                    function ajaxExtend( target, src ) {
                        var key, deep,
                            flatOptions = jQuery.ajaxSettings.flatOptions || {};

                        for ( key in src ) {
                            if ( src[ key ] !== undefined ) {
                                ( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
                            }
                        }
                        if ( deep ) {
                            jQuery.extend( true, target, deep );
                        }

                        return target;
                    }

                    /* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
                    function ajaxHandleResponses( s, jqXHR, responses ) {

                        var ct, type, finalDataType, firstDataType,
                            contents = s.contents,
                            dataTypes = s.dataTypes;

                        // Remove auto dataType and get content-type in the process
                        while ( dataTypes[ 0 ] === "*" ) {
                            dataTypes.shift();
                            if ( ct === undefined ) {
                                ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
                            }
                        }

                        // Check if we're dealing with a known content-type
                        if ( ct ) {
                            for ( type in contents ) {
                                if ( contents[ type ] && contents[ type ].test( ct ) ) {
                                    dataTypes.unshift( type );
                                    break;
                                }
                            }
                        }

                        // Check to see if we have a response for the expected dataType
                        if ( dataTypes[ 0 ] in responses ) {
                            finalDataType = dataTypes[ 0 ];
                        } else {

                            // Try convertible dataTypes
                            for ( type in responses ) {
                                if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
                                    finalDataType = type;
                                    break;
                                }
                                if ( !firstDataType ) {
                                    firstDataType = type;
                                }
                            }

                            // Or just use first one
                            finalDataType = finalDataType || firstDataType;
                        }

                        // If we found a dataType
                        // We add the dataType to the list if needed
                        // and return the corresponding response
                        if ( finalDataType ) {
                            if ( finalDataType !== dataTypes[ 0 ] ) {
                                dataTypes.unshift( finalDataType );
                            }
                            return responses[ finalDataType ];
                        }
                    }

                    /* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
                    function ajaxConvert( s, response, jqXHR, isSuccess ) {
                        var conv2, current, conv, tmp, prev,
                            converters = {},

                            // Work with a copy of dataTypes in case we need to modify it for conversion
                            dataTypes = s.dataTypes.slice();

                        // Create converters map with lowercased keys
                        if ( dataTypes[ 1 ] ) {
                            for ( conv in s.converters ) {
                                converters[ conv.toLowerCase() ] = s.converters[ conv ];
                            }
                        }

                        current = dataTypes.shift();

                        // Convert to each sequential dataType
                        while ( current ) {

                            if ( s.responseFields[ current ] ) {
                                jqXHR[ s.responseFields[ current ] ] = response;
                            }

                            // Apply the dataFilter if provided
                            if ( !prev && isSuccess && s.dataFilter ) {
                                response = s.dataFilter( response, s.dataType );
                            }

                            prev = current;
                            current = dataTypes.shift();

                            if ( current ) {

                                // There's only work to do if current dataType is non-auto
                                if ( current === "*" ) {

                                    current = prev;

                                    // Convert response if prev dataType is non-auto and differs from current
                                } else if ( prev !== "*" && prev !== current ) {

                                    // Seek a direct converter
                                    conv = converters[ prev + " " + current ] || converters[ "* " + current ];

                                    // If none found, seek a pair
                                    if ( !conv ) {
                                        for ( conv2 in converters ) {

                                            // If conv2 outputs current
                                            tmp = conv2.split( " " );
                                            if ( tmp[ 1 ] === current ) {

                                                // If prev can be converted to accepted input
                                                conv = converters[ prev + " " + tmp[ 0 ] ] ||
                                                    converters[ "* " + tmp[ 0 ] ];
                                                if ( conv ) {

                                                    // Condense equivalence converters
                                                    if ( conv === true ) {
                                                        conv = converters[ conv2 ];

                                                        // Otherwise, insert the intermediate dataType
                                                    } else if ( converters[ conv2 ] !== true ) {
                                                        current = tmp[ 0 ];
                                                        dataTypes.unshift( tmp[ 1 ] );
                                                    }
                                                    break;
                                                }
                                            }
                                        }
                                    }

                                    // Apply converter (if not an equivalence)
                                    if ( conv !== true ) {

                                        // Unless errors are allowed to bubble, catch and return them
                                        if ( conv && s.throws ) {
                                            response = conv( response );
                                        } else {
                                            try {
                                                response = conv( response );
                                            } catch ( e ) {
                                                return {
                                                    state: "parsererror",
                                                    error: conv ? e : "No conversion from " + prev + " to " + current
                                                };
                                            }
                                        }
                                    }
                                }
                            }
                        }

                        return { state: "success", data: response };
                    }

                    jQuery.extend( {

                        // Counter for holding the number of active queries
                        active: 0,

                        // Last-Modified header cache for next request
                        lastModified: {},
                        etag: {},

                        ajaxSettings: {
                            url: location.href,
                            type: "GET",
                            isLocal: rlocalProtocol.test( location.protocol ),
                            global: true,
                            processData: true,
                            async: true,
                            contentType: "application/x-www-form-urlencoded; charset=UTF-8",

                            /*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

                            accepts: {
                                "*": allTypes,
                                text: "text/plain",
                                html: "text/html",
                                xml: "application/xml, text/xml",
                                json: "application/json, text/javascript"
                            },

                            contents: {
                                xml: /\bxml\b/,
                                html: /\bhtml/,
                                json: /\bjson\b/
                            },

                            responseFields: {
                                xml: "responseXML",
                                text: "responseText",
                                json: "responseJSON"
                            },

                            // Data converters
                            // Keys separate source (or catchall "*") and destination types with a single space
                            converters: {

                                // Convert anything to text
                                "* text": String,

                                // Text to html (true = no transformation)
                                "text html": true,

                                // Evaluate text as a json expression
                                "text json": JSON.parse,

                                // Parse text as xml
                                "text xml": jQuery.parseXML
                            },

                            // For options that shouldn't be deep extended:
                            // you can add your own custom options here if
                            // and when you create one that shouldn't be
                            // deep extended (see ajaxExtend)
                            flatOptions: {
                                url: true,
                                context: true
                            }
                        },

                        // Creates a full fledged settings object into target
                        // with both ajaxSettings and settings fields.
                        // If target is omitted, writes into ajaxSettings.
                        ajaxSetup: function( target, settings ) {
                            return settings ?

                                // Building a settings object
                                ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

                                // Extending ajaxSettings
                                ajaxExtend( jQuery.ajaxSettings, target );
                        },

                        ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
                        ajaxTransport: addToPrefiltersOrTransports( transports ),

                        // Main method
                        ajax: function( url, options ) {

                            // If url is an object, simulate pre-1.5 signature
                            if ( typeof url === "object" ) {
                                options = url;
                                url = undefined;
                            }

                            // Force options to be an object
                            options = options || {};

                            var transport,

                                // URL without anti-cache param
                                cacheURL,

                                // Response headers
                                responseHeadersString,
                                responseHeaders,

                                // timeout handle
                                timeoutTimer,

                                // Url cleanup var
                                urlAnchor,

                                // Request state (becomes false upon send and true upon completion)
                                completed,

                                // To know if global events are to be dispatched
                                fireGlobals,

                                // Loop variable
                                i,

                                // uncached part of the url
                                uncached,

                                // Create the final options object
                                s = jQuery.ajaxSetup( {}, options ),

                                // Callbacks context
                                callbackContext = s.context || s,

                                // Context for global events is callbackContext if it is a DOM node or jQuery collection
                                globalEventContext = s.context &&
                                ( callbackContext.nodeType || callbackContext.jquery ) ?
                                    jQuery( callbackContext ) :
                                    jQuery.event,

                                // Deferreds
                                deferred = jQuery.Deferred(),
                                completeDeferred = jQuery.Callbacks( "once memory" ),

                                // Status-dependent callbacks
                                statusCode = s.statusCode || {},

                                // Headers (they are sent all at once)
                                requestHeaders = {},
                                requestHeadersNames = {},

                                // Default abort message
                                strAbort = "canceled",

                                // Fake xhr
                                jqXHR = {
                                    readyState: 0,

                                    // Builds headers hashtable if needed
                                    getResponseHeader: function( key ) {
                                        var match;
                                        if ( completed ) {
                                            if ( !responseHeaders ) {
                                                responseHeaders = {};
                                                while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
                                                    responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
                                                }
                                            }
                                            match = responseHeaders[ key.toLowerCase() ];
                                        }
                                        return match == null ? null : match;
                                    },

                                    // Raw string
                                    getAllResponseHeaders: function() {
                                        return completed ? responseHeadersString : null;
                                    },

                                    // Caches the header
                                    setRequestHeader: function( name, value ) {
                                        if ( completed == null ) {
                                            name = requestHeadersNames[ name.toLowerCase() ] =
                                                requestHeadersNames[ name.toLowerCase() ] || name;
                                            requestHeaders[ name ] = value;
                                        }
                                        return this;
                                    },

                                    // Overrides response content-type header
                                    overrideMimeType: function( type ) {
                                        if ( completed == null ) {
                                            s.mimeType = type;
                                        }
                                        return this;
                                    },

                                    // Status-dependent callbacks
                                    statusCode: function( map ) {
                                        var code;
                                        if ( map ) {
                                            if ( completed ) {

                                                // Execute the appropriate callbacks
                                                jqXHR.always( map[ jqXHR.status ] );
                                            } else {

                                                // Lazy-add the new callbacks in a way that preserves old ones
                                                for ( code in map ) {
                                                    statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
                                                }
                                            }
                                        }
                                        return this;
                                    },

                                    // Cancel the request
                                    abort: function( statusText ) {
                                        var finalText = statusText || strAbort;
                                        if ( transport ) {
                                            transport.abort( finalText );
                                        }
                                        done( 0, finalText );
                                        return this;
                                    }
                                };

                            // Attach deferreds
                            deferred.promise( jqXHR );

                            // Add protocol if not provided (prefilters might expect it)
                            // Handle falsy url in the settings object (#10093: consistency with old signature)
                            // We also use the url parameter if available
                            s.url = ( ( url || s.url || location.href ) + "" )
                                .replace( rprotocol, location.protocol + "//" );

                            // Alias method option to type as per ticket #12004
                            s.type = options.method || options.type || s.method || s.type;

                            // Extract dataTypes list
                            s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

                            // A cross-domain request is in order when the origin doesn't match the current origin.
                            if ( s.crossDomain == null ) {
                                urlAnchor = document.createElement( "a" );

                                // Support: IE <=8 - 11, Edge 12 - 15
                                // IE throws exception on accessing the href property if url is malformed,
                                // e.g. http://example.com:80x/
                                try {
                                    urlAnchor.href = s.url;

                                    // Support: IE <=8 - 11 only
                                    // Anchor's host property isn't correctly set when s.url is relative
                                    urlAnchor.href = urlAnchor.href;
                                    s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
                                        urlAnchor.protocol + "//" + urlAnchor.host;
                                } catch ( e ) {

                                    // If there is an error parsing the URL, assume it is crossDomain,
                                    // it can be rejected by the transport if it is invalid
                                    s.crossDomain = true;
                                }
                            }

                            // Convert data if not already a string
                            if ( s.data && s.processData && typeof s.data !== "string" ) {
                                s.data = jQuery.param( s.data, s.traditional );
                            }

                            // Apply prefilters
                            inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

                            // If request was aborted inside a prefilter, stop there
                            if ( completed ) {
                                return jqXHR;
                            }

                            // We can fire global events as of now if asked to
                            // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
                            fireGlobals = jQuery.event && s.global;

                            // Watch for a new set of requests
                            if ( fireGlobals && jQuery.active++ === 0 ) {
                                jQuery.event.trigger( "ajaxStart" );
                            }

                            // Uppercase the type
                            s.type = s.type.toUpperCase();

                            // Determine if request has content
                            s.hasContent = !rnoContent.test( s.type );

                            // Save the URL in case we're toying with the If-Modified-Since
                            // and/or If-None-Match header later on
                            // Remove hash to simplify url manipulation
                            cacheURL = s.url.replace( rhash, "" );

                            // More options handling for requests with no content
                            if ( !s.hasContent ) {

                                // Remember the hash so we can put it back
                                uncached = s.url.slice( cacheURL.length );

                                // If data is available and should be processed, append data to url
                                if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
                                    cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

                                    // #9682: remove data so that it's not used in an eventual retry
                                    delete s.data;
                                }

                                // Add or update anti-cache param if needed
                                if ( s.cache === false ) {
                                    cacheURL = cacheURL.replace( rantiCache, "$1" );
                                    uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
                                }

                                // Put hash and anti-cache on the URL that will be requested (gh-1732)
                                s.url = cacheURL + uncached;

                                // Change '%20' to '+' if this is encoded form body content (gh-2658)
                            } else if ( s.data && s.processData &&
                                ( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
                                s.data = s.data.replace( r20, "+" );
                            }

                            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                            if ( s.ifModified ) {
                                if ( jQuery.lastModified[ cacheURL ] ) {
                                    jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
                                }
                                if ( jQuery.etag[ cacheURL ] ) {
                                    jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
                                }
                            }

                            // Set the correct header, if data is being sent
                            if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
                                jqXHR.setRequestHeader( "Content-Type", s.contentType );
                            }

                            // Set the Accepts header for the server, depending on the dataType
                            jqXHR.setRequestHeader(
                                "Accept",
                                s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
                                    s.accepts[ s.dataTypes[ 0 ] ] +
                                    ( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
                                    s.accepts[ "*" ]
                            );

                            // Check for headers option
                            for ( i in s.headers ) {
                                jqXHR.setRequestHeader( i, s.headers[ i ] );
                            }

                            // Allow custom headers/mimetypes and early abort
                            if ( s.beforeSend &&
                                ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

                                // Abort if not done already and return
                                return jqXHR.abort();
                            }

                            // Aborting is no longer a cancellation
                            strAbort = "abort";

                            // Install callbacks on deferreds
                            completeDeferred.add( s.complete );
                            jqXHR.done( s.success );
                            jqXHR.fail( s.error );

                            // Get transport
                            transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

                            // If no transport, we auto-abort
                            if ( !transport ) {
                                done( -1, "No Transport" );
                            } else {
                                jqXHR.readyState = 1;

                                // Send global event
                                if ( fireGlobals ) {
                                    globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
                                }

                                // If request was aborted inside ajaxSend, stop there
                                if ( completed ) {
                                    return jqXHR;
                                }

                                // Timeout
                                if ( s.async && s.timeout > 0 ) {
                                    timeoutTimer = window.setTimeout( function() {
                                        jqXHR.abort( "timeout" );
                                    }, s.timeout );
                                }

                                try {
                                    completed = false;
                                    transport.send( requestHeaders, done );
                                } catch ( e ) {

                                    // Rethrow post-completion exceptions
                                    if ( completed ) {
                                        throw e;
                                    }

                                    // Propagate others as results
                                    done( -1, e );
                                }
                            }

                            // Callback for when everything is done
                            function done( status, nativeStatusText, responses, headers ) {
                                var isSuccess, success, error, response, modified,
                                    statusText = nativeStatusText;

                                // Ignore repeat invocations
                                if ( completed ) {
                                    return;
                                }

                                completed = true;

                                // Clear timeout if it exists
                                if ( timeoutTimer ) {
                                    window.clearTimeout( timeoutTimer );
                                }

                                // Dereference transport for early garbage collection
                                // (no matter how long the jqXHR object will be used)
                                transport = undefined;

                                // Cache response headers
                                responseHeadersString = headers || "";

                                // Set readyState
                                jqXHR.readyState = status > 0 ? 4 : 0;

                                // Determine if successful
                                isSuccess = status >= 200 && status < 300 || status === 304;

                                // Get response data
                                if ( responses ) {
                                    response = ajaxHandleResponses( s, jqXHR, responses );
                                }

                                // Convert no matter what (that way responseXXX fields are always set)
                                response = ajaxConvert( s, response, jqXHR, isSuccess );

                                // If successful, handle type chaining
                                if ( isSuccess ) {

                                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
                                    if ( s.ifModified ) {
                                        modified = jqXHR.getResponseHeader( "Last-Modified" );
                                        if ( modified ) {
                                            jQuery.lastModified[ cacheURL ] = modified;
                                        }
                                        modified = jqXHR.getResponseHeader( "etag" );
                                        if ( modified ) {
                                            jQuery.etag[ cacheURL ] = modified;
                                        }
                                    }

                                    // if no content
                                    if ( status === 204 || s.type === "HEAD" ) {
                                        statusText = "nocontent";

                                        // if not modified
                                    } else if ( status === 304 ) {
                                        statusText = "notmodified";

                                        // If we have data, let's convert it
                                    } else {
                                        statusText = response.state;
                                        success = response.data;
                                        error = response.error;
                                        isSuccess = !error;
                                    }
                                } else {

                                    // Extract error from statusText and normalize for non-aborts
                                    error = statusText;
                                    if ( status || !statusText ) {
                                        statusText = "error";
                                        if ( status < 0 ) {
                                            status = 0;
                                        }
                                    }
                                }

                                // Set data for the fake xhr object
                                jqXHR.status = status;
                                jqXHR.statusText = ( nativeStatusText || statusText ) + "";

                                // Success/Error
                                if ( isSuccess ) {
                                    deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
                                } else {
                                    deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
                                }

                                // Status-dependent callbacks
                                jqXHR.statusCode( statusCode );
                                statusCode = undefined;

                                if ( fireGlobals ) {
                                    globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
                                        [ jqXHR, s, isSuccess ? success : error ] );
                                }

                                // Complete
                                completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

                                if ( fireGlobals ) {
                                    globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

                                    // Handle the global AJAX counter
                                    if ( !( --jQuery.active ) ) {
                                        jQuery.event.trigger( "ajaxStop" );
                                    }
                                }
                            }

                            return jqXHR;
                        },

                        getJSON: function( url, data, callback ) {
                            return jQuery.get( url, data, callback, "json" );
                        },

                        getScript: function( url, callback ) {
                            return jQuery.get( url, undefined, callback, "script" );
                        }
                    } );

                    jQuery.each( [ "get", "post" ], function( i, method ) {
                        jQuery[ method ] = function( url, data, callback, type ) {

                            // Shift arguments if data argument was omitted
                            if ( isFunction( data ) ) {
                                type = type || callback;
                                callback = data;
                                data = undefined;
                            }

                            // The url can be an options object (which then must have .url)
                            return jQuery.ajax( jQuery.extend( {
                                url: url,
                                type: method,
                                dataType: type,
                                data: data,
                                success: callback
                            }, jQuery.isPlainObject( url ) && url ) );
                        };
                    } );


                    jQuery._evalUrl = function( url ) {
                        return jQuery.ajax( {
                            url: url,

                            // Make this explicit, since user can override this through ajaxSetup (#11264)
                            type: "GET",
                            dataType: "script",
                            cache: true,
                            async: false,
                            global: false,
                            "throws": true
                        } );
                    };


                    jQuery.fn.extend( {
                        wrapAll: function( html ) {
                            var wrap;

                            if ( this[ 0 ] ) {
                                if ( isFunction( html ) ) {
                                    html = html.call( this[ 0 ] );
                                }

                                // The elements to wrap the target around
                                wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

                                if ( this[ 0 ].parentNode ) {
                                    wrap.insertBefore( this[ 0 ] );
                                }

                                wrap.map( function() {
                                    var elem = this;

                                    while ( elem.firstElementChild ) {
                                        elem = elem.firstElementChild;
                                    }

                                    return elem;
                                } ).append( this );
                            }

                            return this;
                        },

                        wrapInner: function( html ) {
                            if ( isFunction( html ) ) {
                                return this.each( function( i ) {
                                    jQuery( this ).wrapInner( html.call( this, i ) );
                                } );
                            }

                            return this.each( function() {
                                var self = jQuery( this ),
                                    contents = self.contents();

                                if ( contents.length ) {
                                    contents.wrapAll( html );

                                } else {
                                    self.append( html );
                                }
                            } );
                        },

                        wrap: function( html ) {
                            var htmlIsFunction = isFunction( html );

                            return this.each( function( i ) {
                                jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
                            } );
                        },

                        unwrap: function( selector ) {
                            this.parent( selector ).not( "body" ).each( function() {
                                jQuery( this ).replaceWith( this.childNodes );
                            } );
                            return this;
                        }
                    } );


                    jQuery.expr.pseudos.hidden = function( elem ) {
                        return !jQuery.expr.pseudos.visible( elem );
                    };
                    jQuery.expr.pseudos.visible = function( elem ) {
                        return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
                    };




                    jQuery.ajaxSettings.xhr = function() {
                        try {
                            return new window.XMLHttpRequest();
                        } catch ( e ) {}
                    };

                    var xhrSuccessStatus = {

                            // File protocol always yields status code 0, assume 200
                            0: 200,

                            // Support: IE <=9 only
                            // #1450: sometimes IE returns 1223 when it should be 204
                            1223: 204
                        },
                        xhrSupported = jQuery.ajaxSettings.xhr();

                    support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
                    support.ajax = xhrSupported = !!xhrSupported;

                    jQuery.ajaxTransport( function( options ) {
                        var callback, errorCallback;

                        // Cross domain only allowed if supported through XMLHttpRequest
                        if ( support.cors || xhrSupported && !options.crossDomain ) {
                            return {
                                send: function( headers, complete ) {
                                    var i,
                                        xhr = options.xhr();

                                    xhr.open(
                                        options.type,
                                        options.url,
                                        options.async,
                                        options.username,
                                        options.password
                                    );

                                    // Apply custom fields if provided
                                    if ( options.xhrFields ) {
                                        for ( i in options.xhrFields ) {
                                            xhr[ i ] = options.xhrFields[ i ];
                                        }
                                    }

                                    // Override mime type if needed
                                    if ( options.mimeType && xhr.overrideMimeType ) {
                                        xhr.overrideMimeType( options.mimeType );
                                    }

                                    // X-Requested-With header
                                    // For cross-domain requests, seeing as conditions for a preflight are
                                    // akin to a jigsaw puzzle, we simply never set it to be sure.
                                    // (it can always be set on a per-request basis or even using ajaxSetup)
                                    // For same-domain requests, won't change header if already provided.
                                    if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
                                        headers[ "X-Requested-With" ] = "XMLHttpRequest";
                                    }

                                    // Set headers
                                    for ( i in headers ) {
                                        xhr.setRequestHeader( i, headers[ i ] );
                                    }

                                    // Callback
                                    callback = function( type ) {
                                        return function() {
                                            if ( callback ) {
                                                callback = errorCallback = xhr.onload =
                                                    xhr.onerror = xhr.onabort = xhr.ontimeout =
                                                        xhr.onreadystatechange = null;

                                                if ( type === "abort" ) {
                                                    xhr.abort();
                                                } else if ( type === "error" ) {

                                                    // Support: IE <=9 only
                                                    // On a manual native abort, IE9 throws
                                                    // errors on any property access that is not readyState
                                                    if ( typeof xhr.status !== "number" ) {
                                                        complete( 0, "error" );
                                                    } else {
                                                        complete(

                                                            // File: protocol always yields status 0; see #8605, #14207
                                                            xhr.status,
                                                            xhr.statusText
                                                        );
                                                    }
                                                } else {
                                                    complete(
                                                        xhrSuccessStatus[ xhr.status ] || xhr.status,
                                                        xhr.statusText,

                                                        // Support: IE <=9 only
                                                        // IE9 has no XHR2 but throws on binary (trac-11426)
                                                        // For XHR2 non-text, let the caller handle it (gh-2498)
                                                        ( xhr.responseType || "text" ) !== "text"  ||
                                                        typeof xhr.responseText !== "string" ?
                                                            { binary: xhr.response } :
                                                            { text: xhr.responseText },
                                                        xhr.getAllResponseHeaders()
                                                    );
                                                }
                                            }
                                        };
                                    };

                                    // Listen to events
                                    xhr.onload = callback();
                                    errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

                                    // Support: IE 9 only
                                    // Use onreadystatechange to replace onabort
                                    // to handle uncaught aborts
                                    if ( xhr.onabort !== undefined ) {
                                        xhr.onabort = errorCallback;
                                    } else {
                                        xhr.onreadystatechange = function() {

                                            // Check readyState before timeout as it changes
                                            if ( xhr.readyState === 4 ) {

                                                // Allow onerror to be called first,
                                                // but that will not handle a native abort
                                                // Also, save errorCallback to a variable
                                                // as xhr.onerror cannot be accessed
                                                window.setTimeout( function() {
                                                    if ( callback ) {
                                                        errorCallback();
                                                    }
                                                } );
                                            }
                                        };
                                    }

                                    // Create the abort callback
                                    callback = callback( "abort" );

                                    try {

                                        // Do send the request (this may raise an exception)
                                        xhr.send( options.hasContent && options.data || null );
                                    } catch ( e ) {

                                        // #14683: Only rethrow if this hasn't been notified as an error yet
                                        if ( callback ) {
                                            throw e;
                                        }
                                    }
                                },

                                abort: function() {
                                    if ( callback ) {
                                        callback();
                                    }
                                }
                            };
                        }
                    } );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
                    jQuery.ajaxPrefilter( function( s ) {
                        if ( s.crossDomain ) {
                            s.contents.script = false;
                        }
                    } );

// Install script dataType
                    jQuery.ajaxSetup( {
                        accepts: {
                            script: "text/javascript, application/javascript, " +
                                "application/ecmascript, application/x-ecmascript"
                        },
                        contents: {
                            script: /\b(?:java|ecma)script\b/
                        },
                        converters: {
                            "text script": function( text ) {
                                jQuery.globalEval( text );
                                return text;
                            }
                        }
                    } );

// Handle cache's special case and crossDomain
                    jQuery.ajaxPrefilter( "script", function( s ) {
                        if ( s.cache === undefined ) {
                            s.cache = false;
                        }
                        if ( s.crossDomain ) {
                            s.type = "GET";
                        }
                    } );

// Bind script tag hack transport
                    jQuery.ajaxTransport( "script", function( s ) {

                        // This transport only deals with cross domain requests
                        if ( s.crossDomain ) {
                            var script, callback;
                            return {
                                send: function( _, complete ) {
                                    script = jQuery( "<script>" ).prop( {
                                        charset: s.scriptCharset,
                                        src: s.url
                                    } ).on(
                                        "load error",
                                        callback = function( evt ) {
                                            script.remove();
                                            callback = null;
                                            if ( evt ) {
                                                complete( evt.type === "error" ? 404 : 200, evt.type );
                                            }
                                        }
                                    );

                                    // Use native DOM manipulation to avoid our domManip AJAX trickery
                                    document.head.appendChild( script[ 0 ] );
                                },
                                abort: function() {
                                    if ( callback ) {
                                        callback();
                                    }
                                }
                            };
                        }
                    } );




                    var oldCallbacks = [],
                        rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
                    jQuery.ajaxSetup( {
                        jsonp: "callback",
                        jsonpCallback: function() {
                            var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
                            this[ callback ] = true;
                            return callback;
                        }
                    } );

// Detect, normalize options and install callbacks for jsonp requests
                    jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

                        var callbackName, overwritten, responseContainer,
                            jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
                                    "url" :
                                    typeof s.data === "string" &&
                                    ( s.contentType || "" )
                                        .indexOf( "application/x-www-form-urlencoded" ) === 0 &&
                                    rjsonp.test( s.data ) && "data"
                            );

                        // Handle iff the expected data type is "jsonp" or we have a parameter to set
                        if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

                            // Get callback name, remembering preexisting value associated with it
                            callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
                                s.jsonpCallback() :
                                s.jsonpCallback;

                            // Insert callback into url or form data
                            if ( jsonProp ) {
                                s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
                            } else if ( s.jsonp !== false ) {
                                s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
                            }

                            // Use data converter to retrieve json after script execution
                            s.converters[ "script json" ] = function() {
                                if ( !responseContainer ) {
                                    jQuery.error( callbackName + " was not called" );
                                }
                                return responseContainer[ 0 ];
                            };

                            // Force json dataType
                            s.dataTypes[ 0 ] = "json";

                            // Install callback
                            overwritten = window[ callbackName ];
                            window[ callbackName ] = function() {
                                responseContainer = arguments;
                            };

                            // Clean-up function (fires after converters)
                            jqXHR.always( function() {

                                // If previous value didn't exist - remove it
                                if ( overwritten === undefined ) {
                                    jQuery( window ).removeProp( callbackName );

                                    // Otherwise restore preexisting value
                                } else {
                                    window[ callbackName ] = overwritten;
                                }

                                // Save back as free
                                if ( s[ callbackName ] ) {

                                    // Make sure that re-using the options doesn't screw things around
                                    s.jsonpCallback = originalSettings.jsonpCallback;

                                    // Save the callback name for future use
                                    oldCallbacks.push( callbackName );
                                }

                                // Call if it was a function and we have a response
                                if ( responseContainer && isFunction( overwritten ) ) {
                                    overwritten( responseContainer[ 0 ] );
                                }

                                responseContainer = overwritten = undefined;
                            } );

                            // Delegate to script
                            return "script";
                        }
                    } );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
                    support.createHTMLDocument = ( function() {
                        var body = document.implementation.createHTMLDocument( "" ).body;
                        body.innerHTML = "<form></form><form></form>";
                        return body.childNodes.length === 2;
                    } )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
                    jQuery.parseHTML = function( data, context, keepScripts ) {
                        if ( typeof data !== "string" ) {
                            return [];
                        }
                        if ( typeof context === "boolean" ) {
                            keepScripts = context;
                            context = false;
                        }

                        var base, parsed, scripts;

                        if ( !context ) {

                            // Stop scripts or inline event handlers from being executed immediately
                            // by using document.implementation
                            if ( support.createHTMLDocument ) {
                                context = document.implementation.createHTMLDocument( "" );

                                // Set the base href for the created document
                                // so any parsed elements with URLs
                                // are based on the document's URL (gh-2965)
                                base = context.createElement( "base" );
                                base.href = document.location.href;
                                context.head.appendChild( base );
                            } else {
                                context = document;
                            }
                        }

                        parsed = rsingleTag.exec( data );
                        scripts = !keepScripts && [];

                        // Single tag
                        if ( parsed ) {
                            return [ context.createElement( parsed[ 1 ] ) ];
                        }

                        parsed = buildFragment( [ data ], context, scripts );

                        if ( scripts && scripts.length ) {
                            jQuery( scripts ).remove();
                        }

                        return jQuery.merge( [], parsed.childNodes );
                    };


                    /**
                     * Load a url into a page
                     */
                    jQuery.fn.load = function( url, params, callback ) {
                        var selector, type, response,
                            self = this,
                            off = url.indexOf( " " );

                        if ( off > -1 ) {
                            selector = stripAndCollapse( url.slice( off ) );
                            url = url.slice( 0, off );
                        }

                        // If it's a function
                        if ( isFunction( params ) ) {

                            // We assume that it's the callback
                            callback = params;
                            params = undefined;

                            // Otherwise, build a param string
                        } else if ( params && typeof params === "object" ) {
                            type = "POST";
                        }

                        // If we have elements to modify, make the request
                        if ( self.length > 0 ) {
                            jQuery.ajax( {
                                url: url,

                                // If "type" variable is undefined, then "GET" method will be used.
                                // Make value of this field explicit since
                                // user can override it through ajaxSetup method
                                type: type || "GET",
                                dataType: "html",
                                data: params
                            } ).done( function( responseText ) {

                                // Save response for use in complete callback
                                response = arguments;

                                self.html( selector ?

                                    // If a selector was specified, locate the right elements in a dummy div
                                    // Exclude scripts to avoid IE 'Permission Denied' errors
                                    jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

                                    // Otherwise use the full result
                                    responseText );

                                // If the request succeeds, this function gets "data", "status", "jqXHR"
                                // but they are ignored because response was set above.
                                // If it fails, this function gets "jqXHR", "status", "error"
                            } ).always( callback && function( jqXHR, status ) {
                                self.each( function() {
                                    callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
                                } );
                            } );
                        }

                        return this;
                    };




// Attach a bunch of functions for handling common AJAX events
                    jQuery.each( [
                        "ajaxStart",
                        "ajaxStop",
                        "ajaxComplete",
                        "ajaxError",
                        "ajaxSuccess",
                        "ajaxSend"
                    ], function( i, type ) {
                        jQuery.fn[ type ] = function( fn ) {
                            return this.on( type, fn );
                        };
                    } );




                    jQuery.expr.pseudos.animated = function( elem ) {
                        return jQuery.grep( jQuery.timers, function( fn ) {
                            return elem === fn.elem;
                        } ).length;
                    };




                    jQuery.offset = {
                        setOffset: function( elem, options, i ) {
                            var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
                                position = jQuery.css( elem, "position" ),
                                curElem = jQuery( elem ),
                                props = {};

                            // Set position first, in-case top/left are set even on static elem
                            if ( position === "static" ) {
                                elem.style.position = "relative";
                            }

                            curOffset = curElem.offset();
                            curCSSTop = jQuery.css( elem, "top" );
                            curCSSLeft = jQuery.css( elem, "left" );
                            calculatePosition = ( position === "absolute" || position === "fixed" ) &&
                                ( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

                            // Need to be able to calculate position if either
                            // top or left is auto and position is either absolute or fixed
                            if ( calculatePosition ) {
                                curPosition = curElem.position();
                                curTop = curPosition.top;
                                curLeft = curPosition.left;

                            } else {
                                curTop = parseFloat( curCSSTop ) || 0;
                                curLeft = parseFloat( curCSSLeft ) || 0;
                            }

                            if ( isFunction( options ) ) {

                                // Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
                                options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
                            }

                            if ( options.top != null ) {
                                props.top = ( options.top - curOffset.top ) + curTop;
                            }
                            if ( options.left != null ) {
                                props.left = ( options.left - curOffset.left ) + curLeft;
                            }

                            if ( "using" in options ) {
                                options.using.call( elem, props );

                            } else {
                                curElem.css( props );
                            }
                        }
                    };

                    jQuery.fn.extend( {

                        // offset() relates an element's border box to the document origin
                        offset: function( options ) {

                            // Preserve chaining for setter
                            if ( arguments.length ) {
                                return options === undefined ?
                                    this :
                                    this.each( function( i ) {
                                        jQuery.offset.setOffset( this, options, i );
                                    } );
                            }

                            var rect, win,
                                elem = this[ 0 ];

                            if ( !elem ) {
                                return;
                            }

                            // Return zeros for disconnected and hidden (display: none) elements (gh-2310)
                            // Support: IE <=11 only
                            // Running getBoundingClientRect on a
                            // disconnected node in IE throws an error
                            if ( !elem.getClientRects().length ) {
                                return { top: 0, left: 0 };
                            }

                            // Get document-relative position by adding viewport scroll to viewport-relative gBCR
                            rect = elem.getBoundingClientRect();
                            win = elem.ownerDocument.defaultView;
                            return {
                                top: rect.top + win.pageYOffset,
                                left: rect.left + win.pageXOffset
                            };
                        },

                        // position() relates an element's margin box to its offset parent's padding box
                        // This corresponds to the behavior of CSS absolute positioning
                        position: function() {
                            if ( !this[ 0 ] ) {
                                return;
                            }

                            var offsetParent, offset, doc,
                                elem = this[ 0 ],
                                parentOffset = { top: 0, left: 0 };

                            // position:fixed elements are offset from the viewport, which itself always has zero offset
                            if ( jQuery.css( elem, "position" ) === "fixed" ) {

                                // Assume position:fixed implies availability of getBoundingClientRect
                                offset = elem.getBoundingClientRect();

                            } else {
                                offset = this.offset();

                                // Account for the *real* offset parent, which can be the document or its root element
                                // when a statically positioned element is identified
                                doc = elem.ownerDocument;
                                offsetParent = elem.offsetParent || doc.documentElement;
                                while ( offsetParent &&
                                ( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
                                jQuery.css( offsetParent, "position" ) === "static" ) {

                                    offsetParent = offsetParent.parentNode;
                                }
                                if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

                                    // Incorporate borders into its offset, since they are outside its content origin
                                    parentOffset = jQuery( offsetParent ).offset();
                                    parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
                                    parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
                                }
                            }

                            // Subtract parent offsets and element margins
                            return {
                                top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
                                left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
                            };
                        },

                        // This method will return documentElement in the following cases:
                        // 1) For the element inside the iframe without offsetParent, this method will return
                        //    documentElement of the parent window
                        // 2) For the hidden or detached element
                        // 3) For body or html element, i.e. in case of the html node - it will return itself
                        //
                        // but those exceptions were never presented as a real life use-cases
                        // and might be considered as more preferable results.
                        //
                        // This logic, however, is not guaranteed and can change at any point in the future
                        offsetParent: function() {
                            return this.map( function() {
                                var offsetParent = this.offsetParent;

                                while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
                                    offsetParent = offsetParent.offsetParent;
                                }

                                return offsetParent || documentElement;
                            } );
                        }
                    } );

// Create scrollLeft and scrollTop methods
                    jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
                        var top = "pageYOffset" === prop;

                        jQuery.fn[ method ] = function( val ) {
                            return access( this, function( elem, method, val ) {

                                // Coalesce documents and windows
                                var win;
                                if ( isWindow( elem ) ) {
                                    win = elem;
                                } else if ( elem.nodeType === 9 ) {
                                    win = elem.defaultView;
                                }

                                if ( val === undefined ) {
                                    return win ? win[ prop ] : elem[ method ];
                                }

                                if ( win ) {
                                    win.scrollTo(
                                        !top ? val : win.pageXOffset,
                                        top ? val : win.pageYOffset
                                    );

                                } else {
                                    elem[ method ] = val;
                                }
                            }, method, val, arguments.length );
                        };
                    } );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
                    jQuery.each( [ "top", "left" ], function( i, prop ) {
                        jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
                            function( elem, computed ) {
                                if ( computed ) {
                                    computed = curCSS( elem, prop );

                                    // If curCSS returns percentage, fallback to offset
                                    return rnumnonpx.test( computed ) ?
                                        jQuery( elem ).position()[ prop ] + "px" :
                                        computed;
                                }
                            }
                        );
                    } );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
                    jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
                        jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
                            function( defaultExtra, funcName ) {

                                // Margin is only for outerHeight, outerWidth
                                jQuery.fn[ funcName ] = function( margin, value ) {
                                    var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
                                        extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

                                    return access( this, function( elem, type, value ) {
                                        var doc;

                                        if ( isWindow( elem ) ) {

                                            // $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
                                            return funcName.indexOf( "outer" ) === 0 ?
                                                elem[ "inner" + name ] :
                                                elem.document.documentElement[ "client" + name ];
                                        }

                                        // Get document width or height
                                        if ( elem.nodeType === 9 ) {
                                            doc = elem.documentElement;

                                            // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
                                            // whichever is greatest
                                            return Math.max(
                                                elem.body[ "scroll" + name ], doc[ "scroll" + name ],
                                                elem.body[ "offset" + name ], doc[ "offset" + name ],
                                                doc[ "client" + name ]
                                            );
                                        }

                                        return value === undefined ?

                                            // Get width or height on the element, requesting but not forcing parseFloat
                                            jQuery.css( elem, type, extra ) :

                                            // Set width or height on the element
                                            jQuery.style( elem, type, value, extra );
                                    }, type, chainable ? margin : undefined, chainable );
                                };
                            } );
                    } );


                    jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
                        "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
                        "change select submit keydown keypress keyup contextmenu" ).split( " " ),
                        function( i, name ) {

                            // Handle event binding
                            jQuery.fn[ name ] = function( data, fn ) {
                                return arguments.length > 0 ?
                                    this.on( name, null, data, fn ) :
                                    this.trigger( name );
                            };
                        } );

                    jQuery.fn.extend( {
                        hover: function( fnOver, fnOut ) {
                            return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
                        }
                    } );




                    jQuery.fn.extend( {

                        bind: function( types, data, fn ) {
                            return this.on( types, null, data, fn );
                        },
                        unbind: function( types, fn ) {
                            return this.off( types, null, fn );
                        },

                        delegate: function( selector, types, data, fn ) {
                            return this.on( types, selector, data, fn );
                        },
                        undelegate: function( selector, types, fn ) {

                            // ( namespace ) or ( selector, types [, fn] )
                            return arguments.length === 1 ?
                                this.off( selector, "**" ) :
                                this.off( types, selector || "**", fn );
                        }
                    } );

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
                    jQuery.proxy = function( fn, context ) {
                        var tmp, args, proxy;

                        if ( typeof context === "string" ) {
                            tmp = fn[ context ];
                            context = fn;
                            fn = tmp;
                        }

                        // Quick check to determine if target is callable, in the spec
                        // this throws a TypeError, but we will just return undefined.
                        if ( !isFunction( fn ) ) {
                            return undefined;
                        }

                        // Simulated bind
                        args = slice.call( arguments, 2 );
                        proxy = function() {
                            return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
                        };

                        // Set the guid of unique handler to the same of original handler, so it can be removed
                        proxy.guid = fn.guid = fn.guid || jQuery.guid++;

                        return proxy;
                    };

                    jQuery.holdReady = function( hold ) {
                        if ( hold ) {
                            jQuery.readyWait++;
                        } else {
                            jQuery.ready( true );
                        }
                    };
                    jQuery.isArray = Array.isArray;
                    jQuery.parseJSON = JSON.parse;
                    jQuery.nodeName = nodeName;
                    jQuery.isFunction = isFunction;
                    jQuery.isWindow = isWindow;
                    jQuery.camelCase = camelCase;
                    jQuery.type = toType;

                    jQuery.now = Date.now;

                    jQuery.isNumeric = function( obj ) {

                        // As of jQuery 3.0, isNumeric is limited to
                        // strings and numbers (primitives or objects)
                        // that can be coerced to finite numbers (gh-2662)
                        var type = jQuery.type( obj );
                        return ( type === "number" || type === "string" ) &&

                            // parseFloat NaNs numeric-cast false positives ("")
                            // ...but misinterprets leading-number strings, particularly hex literals ("0x...")
                            // subtraction forces infinities to NaN
                            !isNaN( obj - parseFloat( obj ) );
                    };




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

                    if ( true ) {
                        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
                            return jQuery;
                        }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
                        __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
                    }




                    var

                        // Map over jQuery in case of overwrite
                        _jQuery = window.jQuery,

                        // Map over the $ in case of overwrite
                        _$ = window.$;

                    jQuery.noConflict = function( deep ) {
                        if ( window.$ === jQuery ) {
                            window.$ = _$;
                        }

                        if ( deep && window.jQuery === jQuery ) {
                            window.jQuery = _jQuery;
                        }

                        return jQuery;
                    };

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
                    if ( !noGlobal ) {
                        window.jQuery = window.$ = jQuery;
                    }




                    return jQuery;
                } );


                /***/ }),
            /* 76 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                module.exports = function bind(fn, thisArg) {
                    return function wrap() {
                        var args = new Array(arguments.length);
                        for (var i = 0; i < args.length; i++) {
                            args[i] = arguments[i];
                        }
                        return fn.apply(thisArg, args);
                    };
                };


                /***/ }),
            /* 77 */
            /***/ (function(module, exports) {

// shim for using process in browser
                var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

                var cachedSetTimeout;
                var cachedClearTimeout;

                function defaultSetTimout() {
                    throw new Error('setTimeout has not been defined');
                }
                function defaultClearTimeout () {
                    throw new Error('clearTimeout has not been defined');
                }
                (function () {
                    try {
                        if (typeof setTimeout === 'function') {
                            cachedSetTimeout = setTimeout;
                        } else {
                            cachedSetTimeout = defaultSetTimout;
                        }
                    } catch (e) {
                        cachedSetTimeout = defaultSetTimout;
                    }
                    try {
                        if (typeof clearTimeout === 'function') {
                            cachedClearTimeout = clearTimeout;
                        } else {
                            cachedClearTimeout = defaultClearTimeout;
                        }
                    } catch (e) {
                        cachedClearTimeout = defaultClearTimeout;
                    }
                } ())
                function runTimeout(fun) {
                    if (cachedSetTimeout === setTimeout) {
                        //normal enviroments in sane situations
                        return setTimeout(fun, 0);
                    }
                    // if setTimeout wasn't available but was latter defined
                    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
                        cachedSetTimeout = setTimeout;
                        return setTimeout(fun, 0);
                    }
                    try {
                        // when when somebody has screwed with setTimeout but no I.E. maddness
                        return cachedSetTimeout(fun, 0);
                    } catch(e){
                        try {
                            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                            return cachedSetTimeout.call(null, fun, 0);
                        } catch(e){
                            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                            return cachedSetTimeout.call(this, fun, 0);
                        }
                    }


                }
                function runClearTimeout(marker) {
                    if (cachedClearTimeout === clearTimeout) {
                        //normal enviroments in sane situations
                        return clearTimeout(marker);
                    }
                    // if clearTimeout wasn't available but was latter defined
                    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                        cachedClearTimeout = clearTimeout;
                        return clearTimeout(marker);
                    }
                    try {
                        // when when somebody has screwed with setTimeout but no I.E. maddness
                        return cachedClearTimeout(marker);
                    } catch (e){
                        try {
                            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                            return cachedClearTimeout.call(null, marker);
                        } catch (e){
                            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                            return cachedClearTimeout.call(this, marker);
                        }
                    }



                }
                var queue = [];
                var draining = false;
                var currentQueue;
                var queueIndex = -1;

                function cleanUpNextTick() {
                    if (!draining || !currentQueue) {
                        return;
                    }
                    draining = false;
                    if (currentQueue.length) {
                        queue = currentQueue.concat(queue);
                    } else {
                        queueIndex = -1;
                    }
                    if (queue.length) {
                        drainQueue();
                    }
                }

                function drainQueue() {
                    if (draining) {
                        return;
                    }
                    var timeout = runTimeout(cleanUpNextTick);
                    draining = true;

                    var len = queue.length;
                    while(len) {
                        currentQueue = queue;
                        queue = [];
                        while (++queueIndex < len) {
                            if (currentQueue) {
                                currentQueue[queueIndex].run();
                            }
                        }
                        queueIndex = -1;
                        len = queue.length;
                    }
                    currentQueue = null;
                    draining = false;
                    runClearTimeout(timeout);
                }

                process.nextTick = function (fun) {
                    var args = new Array(arguments.length - 1);
                    if (arguments.length > 1) {
                        for (var i = 1; i < arguments.length; i++) {
                            args[i - 1] = arguments[i];
                        }
                    }
                    queue.push(new Item(fun, args));
                    if (queue.length === 1 && !draining) {
                        runTimeout(drainQueue);
                    }
                };

// v8 likes predictible objects
                function Item(fun, array) {
                    this.fun = fun;
                    this.array = array;
                }
                Item.prototype.run = function () {
                    this.fun.apply(null, this.array);
                };
                process.title = 'browser';
                process.browser = true;
                process.env = {};
                process.argv = [];
                process.version = ''; // empty string to avoid regexp issues
                process.versions = {};

                function noop() {}

                process.on = noop;
                process.addListener = noop;
                process.once = noop;
                process.off = noop;
                process.removeListener = noop;
                process.removeAllListeners = noop;
                process.emit = noop;
                process.prependListener = noop;
                process.prependOnceListener = noop;

                process.listeners = function (name) { return [] }

                process.binding = function (name) {
                    throw new Error('process.binding is not supported');
                };

                process.cwd = function () { return '/' };
                process.chdir = function (dir) {
                    throw new Error('process.chdir is not supported');
                };
                process.umask = function() { return 0; };


                /***/ }),
            /* 78 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var utils = __webpack_require__(7);
                var settle = __webpack_require__(162);
                var buildURL = __webpack_require__(164);
                var parseHeaders = __webpack_require__(165);
                var isURLSameOrigin = __webpack_require__(166);
                var createError = __webpack_require__(79);
                var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(167);

                module.exports = function xhrAdapter(config) {
                    return new Promise(function dispatchXhrRequest(resolve, reject) {
                        var requestData = config.data;
                        var requestHeaders = config.headers;

                        if (utils.isFormData(requestData)) {
                            delete requestHeaders['Content-Type']; // Let the browser set it
                        }

                        var request = new XMLHttpRequest();
                        var loadEvent = 'onreadystatechange';
                        var xDomain = false;

                        // For IE 8/9 CORS support
                        // Only supports POST and GET calls and doesn't returns the response headers.
                        // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
                        if ("development" !== 'test' &&
                            typeof window !== 'undefined' &&
                            window.XDomainRequest && !('withCredentials' in request) &&
                            !isURLSameOrigin(config.url)) {
                            request = new window.XDomainRequest();
                            loadEvent = 'onload';
                            xDomain = true;
                            request.onprogress = function handleProgress() {};
                            request.ontimeout = function handleTimeout() {};
                        }

                        // HTTP basic authentication
                        if (config.auth) {
                            var username = config.auth.username || '';
                            var password = config.auth.password || '';
                            requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
                        }

                        request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

                        // Set the request timeout in MS
                        request.timeout = config.timeout;

                        // Listen for ready state
                        request[loadEvent] = function handleLoad() {
                            if (!request || (request.readyState !== 4 && !xDomain)) {
                                return;
                            }

                            // The request errored out and we didn't get a response, this will be
                            // handled by onerror instead
                            // With one exception: request that using file: protocol, most browsers
                            // will return status as 0 even though it's a successful request
                            if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
                                return;
                            }

                            // Prepare the response
                            var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
                            var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
                            var response = {
                                data: responseData,
                                // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)
                                status: request.status === 1223 ? 204 : request.status,
                                statusText: request.status === 1223 ? 'No Content' : request.statusText,
                                headers: responseHeaders,
                                config: config,
                                request: request
                            };

                            settle(resolve, reject, response);

                            // Clean up request
                            request = null;
                        };

                        // Handle low level network errors
                        request.onerror = function handleError() {
                            // Real errors are hidden from us by the browser
                            // onerror should only fire if it's a network error
                            reject(createError('Network Error', config, null, request));

                            // Clean up request
                            request = null;
                        };

                        // Handle timeout
                        request.ontimeout = function handleTimeout() {
                            reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
                                request));

                            // Clean up request
                            request = null;
                        };

                        // Add xsrf header
                        // This is only done if running in a standard browser environment.
                        // Specifically not if we're in a web worker, or react-native.
                        if (utils.isStandardBrowserEnv()) {
                            var cookies = __webpack_require__(168);

                            // Add xsrf header
                            var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
                                cookies.read(config.xsrfCookieName) :
                                undefined;

                            if (xsrfValue) {
                                requestHeaders[config.xsrfHeaderName] = xsrfValue;
                            }
                        }

                        // Add headers to the request
                        if ('setRequestHeader' in request) {
                            utils.forEach(requestHeaders, function setRequestHeader(val, key) {
                                if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
                                    // Remove Content-Type if data is undefined
                                    delete requestHeaders[key];
                                } else {
                                    // Otherwise add header to the request
                                    request.setRequestHeader(key, val);
                                }
                            });
                        }

                        // Add withCredentials to request if needed
                        if (config.withCredentials) {
                            request.withCredentials = true;
                        }

                        // Add responseType to request if needed
                        if (config.responseType) {
                            try {
                                request.responseType = config.responseType;
                            } catch (e) {
                                // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
                                // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
                                if (config.responseType !== 'json') {
                                    throw e;
                                }
                            }
                        }

                        // Handle progress if needed
                        if (typeof config.onDownloadProgress === 'function') {
                            request.addEventListener('progress', config.onDownloadProgress);
                        }

                        // Not all browsers support upload events
                        if (typeof config.onUploadProgress === 'function' && request.upload) {
                            request.upload.addEventListener('progress', config.onUploadProgress);
                        }

                        if (config.cancelToken) {
                            // Handle cancellation
                            config.cancelToken.promise.then(function onCanceled(cancel) {
                                if (!request) {
                                    return;
                                }

                                request.abort();
                                reject(cancel);
                                // Clean up request
                                request = null;
                            });
                        }

                        if (requestData === undefined) {
                            requestData = null;
                        }

                        // Send the request
                        request.send(requestData);
                    });
                };


                /***/ }),
            /* 79 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var enhanceError = __webpack_require__(163);

                /**
                 * Create an Error with the specified message, config, error code, request and response.
                 *
                 * @param {string} message The error message.
                 * @param {Object} config The config.
                 * @param {string} [code] The error code (for example, 'ECONNABORTED').
                 * @param {Object} [request] The request.
                 * @param {Object} [response] The response.
                 * @returns {Error} The created error.
                 */
                module.exports = function createError(message, config, code, request, response) {
                    var error = new Error(message);
                    return enhanceError(error, config, code, request, response);
                };


                /***/ }),
            /* 80 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                module.exports = function isCancel(value) {
                    return !!(value && value.__CANCEL__);
                };


                /***/ }),
            /* 81 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                /**
                 * A `Cancel` is an object that is thrown when an operation is canceled.
                 *
                 * @class
                 * @param {string=} message The message.
                 */
                function Cancel(message) {
                    this.message = message;
                }

                Cancel.prototype.toString = function toString() {
                    return 'Cancel' + (this.message ? ': ' + this.message : '');
                };

                Cancel.prototype.__CANCEL__ = true;

                module.exports = Cancel;


                /***/ }),
            /* 82 */
            /***/ (function(module, __webpack_exports__, __webpack_require__) {

                "use strict";
                Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "intl", function() { return intl$1; });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "IntlProvider", function() { return IntlProvider; });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Text", function() { return Text; });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MarkupText", function() { return MarkupText; });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Localizer", function() { return Localizer; });
                /* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "withText", function() { return withText; });
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_preact__ = __webpack_require__(0);
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_dlv__ = __webpack_require__(180);
                /* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_dlv___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_dlv__);



                /** Check if an object is not null or undefined
                 *	@private
                 */
                function defined(obj) {
                    return obj!==null && obj!==undefined;
                }


                /** A simpler Object.assign
                 *  @private
                 */
                function assign(obj, props) {
                    for (var i in props) {
                        obj[i] = props[i];
                    }
                    return obj;
                }


                /** Recursively copy keys from `source` to `target`, skipping truthy values already in `target`.
                 *	@private
                 */
                function deepAssign(target, source) {
                    var out = assign({}, target);
                    for (var i in source) {
                        if (source.hasOwnProperty(i)) {
                            if (target[i] && source[i] && typeof target[i]==='object' && typeof source[i]==='object') {
                                out[i] = deepAssign(target[i], source[i]);
                            }
                            else {
                                out[i] = target[i] || source[i];
                            }
                        }
                    }
                    return out;
                }

                /** select('foo,bar') creates a mapping: `{ foo, bar }`
                 *	@private
                 */
                function select(properties) {
                    properties = properties || {};
                    if (typeof properties==='string') {
                        properties = properties.split(',');
                    }
                    if ('join' in properties) {
                        var selected = {};
                        for (var i=0; i<properties.length; i++) {
                            var val = properties[i].trim();
                            if (val) { selected[val.split('.').pop()] = val; }
                        }
                        return selected;
                    }
                    return properties;
                }

                var URL_FLAG = /[?&#]intl=show/;


                /** `<IntlProvider>` is a nestable internationalization definition provider.
                 *	It exposes an Intl scope & definition into the tree,
                 *	making them available to descendant components.
                 *
                 *	> **Note:** When nested, gives precedence to keys higher up the tree!
                 *	> This means lower-level components can set their defaults by wrapping themselves
                 *	> in an `<IntlProvider>`, but still remain localizable by their parent components.
                 *
                 *	@name IntlProvider
                 *	@param props
                 *	@param {String} [props.scope]			Nest `definition` under a root key, and set the active scope for the tree (essentially prefixing all `<Text />` keys).
                 *	@param {Boolean} [props.mark=false]		If `true`, all `<Text>` elements will be shown with a red/green background indicating whether they have valid Intl keys.
                 *	@param {Object} [props.definition={}]	Merge the given definition into the current intl definition, giving the *current* definition precedence (i.e., only adding keys, acting as defaults)
                 *
                 *	@example
                 *	// generally imported from a JSON file:
                 *	let definition = {
                 *		foo: 'Le Feux'
                 *	};
                 *
                 *	<IntlProvider scope="weather" definition={definition}>
                 *		<Text key="foo">The Foo</Text>
                 *	</IntlProvider>
                 *
                 *	// This will render the text:
                 *	"Le Feux"
                 */
                var IntlProvider = (function (Component$$1) {
                    function IntlProvider () {
                        Component$$1.apply(this, arguments);
                    }

                    if ( Component$$1 ) IntlProvider.__proto__ = Component$$1;
                    IntlProvider.prototype = Object.create( Component$$1 && Component$$1.prototype );
                    IntlProvider.prototype.constructor = IntlProvider;

                    IntlProvider.prototype.getChildContext = function getChildContext () {
                        var ref = this.props;
                        var scope = ref.scope;
                        var definition = ref.definition;
                        var mark = ref.mark;
                        var intl = assign({}, this.context.intl || {});

                        // set active scope for the tree if given
                        if (scope) { intl.scope = scope; }

                        // merge definition into current with lower precedence
                        if (definition) {
                            intl.dictionary = deepAssign(intl.dictionary || {}, definition);
                        }

                        if (mark || (typeof location!=='undefined' && String(location).match(URL_FLAG))) {
                            intl.mark = true;
                        }

                        return { intl: intl };
                    };

                    IntlProvider.prototype.render = function render (ref) {
                        var children = ref.children;

                        return children && children[0] || null;
                    };

                    return IntlProvider;
                }(__WEBPACK_IMPORTED_MODULE_0_preact__["Component"]));

                /**
                 * Higher-order function that creates an `<IntlProvider />` wrapper component for the given component.  It
                 * takes two forms depending on how many arguments it's given:
                 * It can take a functional form like:
                 * intl(ComponentToWrap, options)
                 *
                 * or it can take an annotation form like:
                 * @intl(options)
                 * class ComponentToWrap extends Component {}
                 *
                 *	@param {Component or Object} args[0] If there are two arguments, the first argument is the Component to wrap in `<IntlProvider/>`. If there is just one argument, this is the options object to pass as `props` to `<IntlProvider/>`. See the definition of the options param below for details.
                 *	@param {Object} options If there are two arguments, the second argument is Passed as `props` to `<IntlProvider />`
                 *	@param [options.scope]			Nest `definition` under a root key, and set the active scope for the tree (essentially prefixing all `<Text />` keys).
                 *	@param [options.definition={}]	Merge the given definition into the current intl definition, giving the *current* definition precedence (i.e., only adding keys, acting as defaults)
                 */
                function intl$1(Child, options) {
                    if (arguments.length<2) {
                        options = Child;
                        return function (Child) { return intl$1(Child, options); };
                    }
                    return function IntlProviderWrapper(props) {
                        return Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])(
                            IntlProvider,
                            options || {},
                            Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])(Child, props)
                        );
                    };
                }

                var EMPTY = {};

                var currentFields;

                /** Populate {{template.fields}} within a given string.
                 *
                 *	@private
                 *	@param {String} template	The string containing fields to be resolved
                 *	@param {Object} [fields={}]	Optionally nested object of fields, referencable from `template`.
                 *	@example
                 *		template('foo{{bar}}', { bar:'baz' }) === 'foobaz'
                 */
                function template(template, fields) {
                    currentFields = fields || EMPTY;
                    return template && template.replace(/\{\{([\w.-]+)\}\}/g, replacer);
                }

                /** Replacement callback for injecting fields into a String
                 *	@private
                 */
                function replacer(s, field) {
                    var parts = field.split('.'),
                        v = currentFields;
                    for (var i=0; i<parts.length; i++) {
                        v = v[parts[i]];
                        if (v == null) { return ''; } // eslint-disable-line eqeqeq
                    }
                    // allow for recursive {{config.xx}} references:
                    if (typeof v==='string' && v.match(/\{\{/)) {
                        v = template(v, currentFields);
                    }
                    return v;
                }

                /** Attempts to look up a translated value from a given dictionary.
                 *  Also supports json templating using the format: {{variable}}
                 *	Falls back to default text.
                 *
                 *	@private
                 *	@param {String} id				Intl field name/id (subject to scope)
                 *	@param {String} [scope='']		Scope, which prefixes `id` with `${scope}.`
                 *	@param {Object} dictionary		A nested object containing translations
                 *	@param {Object} [fields={}]		Template fields for use by translated strings
                 *	@param {Number} [plural]		Indicates a quantity, used to trigger pluralization
                 *	@param {String|Array} [fallback]	Text to return if no translation is found
                 *	@returns {String} translated
                 */
                function translate(id, scope, dictionary, fields, plural, fallback) {
                    if (scope) { id = scope + '.' + id; }

                    var value = dictionary && __WEBPACK_IMPORTED_MODULE_1_dlv___default()(dictionary, id);

                    // plural forms:
                    // key: ['plural', 'singular']
                    // key: { none, one, many }
                    // key: { singular, plural }
                    if ((plural || plural===0) && value && typeof value==='object') {
                        if (value.splice) {
                            value = value[plural] || value[0];
                        }
                        else if (plural===0 && defined(value.none)) {
                            value = value.none;
                        }
                        else if (plural===1 && defined(value.one || value.singular)) {
                            value = value.one || value.singular;
                        }
                        else {
                            value = value.some || value.many || value.plural || value.other || value;
                        }
                    }

                    return value && template(value, fields) || fallback || null;
                }

                /** Highlight/colorize the i18n'd node if `mark` is set on `intl` in context.  If not, just returns `value`
                 *
                 *	@private
                 *	@param {String|VNode} value	The l10n'd text/vnode to highlight or pass through
                 *	@param {string} id	The key used to lookup the value in the intl dictionary
                 */
                function HighlightI18N(ref, ref$1) {
                    var value = ref.value;
                    var id = ref.id;
                    var intl = ref$1.intl;


                    if (intl && intl.mark) {
                        var dictionaryKey = "dictionary" + (intl && intl.scope ? ("." + (intl.scope)) : '') + "." + id;
                        return Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])('mark', {
                            style: 'background: ' + (
                                value
                                    ? __WEBPACK_IMPORTED_MODULE_1_dlv___default()(intl, dictionaryKey)
                                    ? 'rgba(119,231,117,.5)'      // Green = this string is fully internationalized
                                    : 'rgba(229,226,41,.5)'       // Yellow = this string does not have a value in the dictionary, but it has a fallback value
                                    : 'rgba(228,147,51,.5)'         // Red = this string has no value and no fallback
                            ),
                            title: id
                        }, value);
                    }

                    return 	value ;
                }

                /** `<Text>` renders internationalized text.
                 *	It attempts to look up translated values from a dictionary in context.
                 *
                 *	Template strings can contain `{{field}}` placeholders,
                 *	which injects values from the `fields` prop.
                 *
                 *	When string lookup fails, renders its children as fallback text.
                 *
                 *	@param {Object} props				props
                 *	@param {String} props.id			Key to look up in intl dictionary, within any parent scopes (`$scope1.$scope2.$id`)
                 *	@param {Object} [props.fields={}]	Values to inject into template `{{fields}}`
                 *	@param {Number} [props.plural]		Integer "count", used to select plural forms
                 *	@param {Object} context
                 *	@param {Object} context.intl		[internal] dictionary and scope info
                 *
                 *	@example
                 *	// If there is no dictionary in context..
                 *	<Text id="foo">The Foo</Text>
                 *	// ..produces the text:
                 *	"The Foo"
                 *
                 *	@example
                 *	// Given a dictionary and some fields..
                 *	<IntlProvider definition={{ foo:'Le Feux {{bar}}' }}>
                 *		<Text id="foo" fields={{ bar: 'BEAR' }}>The Foo</Text>
                 *	</IntlProvider>
                 *	// ..produces the text:
                 *	"Le Feux BEAR"
                 *
                 *	@example
                 *	// Within a scope, both `id` and the definition are namespaced..
                 *	<IntlProvider scope="weather" definition={{ foo:'Le Feux' }}>
                 *		<Text id="foo">The Foo</Text>
                 *	</IntlProvider>
                 *	// ..produces the text:
                 *	"Le Feux"
                 */
                function Text(ref, ref$1) {
                    var id = ref.id;
                    var children = ref.children;
                    var plural = ref.plural;
                    var fields = ref.fields;
                    var intl = ref$1.intl;


                    var fallback = children && children[0];

                    var value = translate(
                        id,
                        intl && intl.scope,
                        intl && intl.dictionary,
                        fields,
                        plural,
                        fallback
                    );

                    return Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])( HighlightI18N, { id: id, value: value });
                }

                /** Translates the property values in an Object, returning a copy.
                 *	**Note:** By default, `String` keys will be treated as Intl ID's.
                 *	Pass `true` to return an Object containing *only* translated
                 *	values where the prop is a <Text /> node.
                 *
                 *	@private
                 *	@param {Object} props	An object with values to translate
                 *	@param {Object} intl	An intl context object (eg: `context.intl`)
                 *	@param {Boolean} [onlyTextNodes=false]	Only process `<Text />` values
                 *	@returns {Object} translatedProps
                 */
                function translateMapping(props, intl, onlyTextNodes) {
                    var out = {};
                    intl = intl || {};
                    props = select(props);
                    for (var name in props) {
                        if (props.hasOwnProperty(name) && props[name]) {
                            var def = props[name];

                            // if onlyTextNodes=true, skip any props that aren't <Text /> vnodes
                            if (!onlyTextNodes && typeof def==='string') {
                                out[name] = translate(def, intl.scope, intl.dictionary);
                            }
                            else if (def.nodeName===Text) {
                                // it's a <Text />, just grab its props:
                                var c = def.children;
                                def = assign({
                                    //no fallback if there are no children.  Return first child if there is only 1, or array of children if there are more than one
                                    fallback: c.length && (c.length === 1 ? c[0] : c)
                                }, def.attributes);
                                out[name] = translate(def.id, intl.scope, intl.dictionary, def.fields, def.plural, def.fallback);
                            }
                        }
                    }
                    return out;
                }

                /** `<Localizer />` is a Compositional Component.
                 *	It "renders" out any `<Text />` values in its child's props.
                 *
                 *	@name Localizer
                 *	@param {Object} props
                 *	@param {Object} props.children	Child components with props to localize.
                 *	@param {Object} context
                 *	@param {Object} context.intl		[internal] dictionary and scope info
                 *	@example
                 *	<Localizer>
                 *		<input placeholder={<Text id="username.placeholder" />} />
                 *	</Localizer>
                 *	// produces:
                 *	<input placeholder="foo" />
                 *
                 *	@example
                 *	<Localizer>
                 *		<abbr title={<Text id="oss-title">Open Source Software</Text>}>
                 *			<Text id="oss">OSS</Text>
                 *		</abbr>
                 *	</Localizer>
                 *	// produces:
                 *	<abbr title="Open Source Software">OSS</abbr>
                 */
                function Localizer(ref, ref$1) {
                    var children = ref.children;
                    var intl = ref$1.intl;

                    var child = children && children[0];
                    return child && Object(__WEBPACK_IMPORTED_MODULE_0_preact__["cloneElement"])(child, translateMapping(child.attributes, intl, true));
                }

                /* eslint-disable react/no-danger */

                /** `<MarkupText>` is just like {@link Text} but it can also contain html markup in rendered strings.  It wraps its contents in a `<span>` tag.
                 *
                 *	@param {Object} props				props
                 *	@param {String} props.id			Key to look up in intl dictionary, within any parent scopes (`$scope1.$scope2.$id`)
                 *	@param {Object} [props.fields={}]	Values to inject into template `{{fields}}`
                 *	@param {Number} [props.plural]		Integer "count", used to select plural forms
                 *	@param {Object} context
                 *	@param {Object} context.intl		[internal] dictionary and scope info
                 *
                 *	@example
                 *	// If there is no dictionary in context..
                 *	<MarkupText id="foo"><b>The Foo</b></MarkupText>
                 *	// ..produces the vnode:
                 *	<span><b>The Foo</b></span>
                 *
                 *	@example
                 *	// Given a dictionary and some fields..
                 *	<IntlProvider definition={{ foo:'Le Feux <b>{{bar}}</b>' }}>
                 *		<MarkupText id="foo" fields={{ bar: 'BEAR' }}>The Foo</MarkupText>
                 *	</IntlProvider>
                 *	// ..produces the vnode:
                 *	<span>Le Feux <b>BEAR</b></span>
                 *
                 *	@example
                 *	// Within a scope, both `id` and the definition are namespaced..
                 *	<IntlProvider scope="weather" definition={{ foo:'Le <a href="http://foo.com">Feux</a>' }}>
                 *		<MarkupText id="foo">The Foo</MarkupText>
                 *	</IntlProvider>
                 *	// ..produces the vnode:
                 *	<span>Le <a href="http://foo.com">Feux</a></span>
                 *
                 *	@example
                 *	// renders nothing if there is no key match and no fallback
                 *	<div><MarkupText /></div>
                 *	// ..produces the vnode:
                 *	<div/>
                 */
                function MarkupText(props) {
                    return (
                        Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])( Localizer, null,
                            Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])( Html, { html: Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])( Text, props), id: props.id })
                        )
                    );
                }

                function Html(ref) {
                    var html = ref.html;
                    var id = ref.id;

                    var value = !html ? html : typeof html === 'string' ? Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])( 'span', { dangerouslySetInnerHTML: { __html: html } }) : Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])( 'span', null, html );
                    return Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])( HighlightI18N, { id: id, value: value });
                }

                /** `@withText()` is a Higher Order Component, often used as a decorator.
                 *
                 *	It wraps a child component and passes it translations
                 *	based on a mapping to the dictionary & scope in context.
                 *
                 *	@param {Object|Function|String} mapping		Maps prop names to intl keys (or `<Text>` nodes).
                 *
                 *	@example @withText({
                 *		placeholder: 'user.placeholder'
                 *	})
                 *	class Foo {
                 *		// now the `placeholder` prop is our localized String:
                 *		render({ placeholder }) {
                 *			return <input placeholder={placeholder} />
                 *		}
                 *	}
                 *
                 *	@example @withText({
                 *		placeholder: <Text id="user.placeholder">fallback text</Text>
                 *	})
                 *	class Foo {
                 *		render({ placeholder }) {
                 *			return <input placeholder={placeholder} />
                 *		}
                 *	}
                 *
                 *	@example @withText('user.placeholder')
                 *	class Foo {
                 *		// for Strings/Arrays, the last path segment becomes the prop name:
                 *		render({ placeholder }) {
                 *			return <input placeholder={placeholder} />
                 *		}
                 *	}
                 *
                 *	@example
                 *	// Works with functional components, too:
                 *	const Foo = withText('user.placeholder')( props =>
                 *		<input placeholder={props.placeholder} />
                 *	)
                 */
                function withText(mapping) {
                    return function withTextWrapper(Child) {
                        return function WithTextWrapper(props, context) {
                            var map = typeof mapping==='function' ? mapping(props, context) : mapping;
                            var translations = translateMapping(map, context.intl);
                            return Object(__WEBPACK_IMPORTED_MODULE_0_preact__["h"])(Child, assign(assign({}, props), translations));
                        };
                    };
                }

                intl$1.intl = intl$1;
                intl$1.IntlProvider = IntlProvider;
                intl$1.Text = Text;
                intl$1.MarkupText = MarkupText;
                intl$1.Localizer = Localizer;
                intl$1.withText = withText;

                /* harmony default export */ __webpack_exports__["default"] = (intl$1);
//# sourceMappingURL=preact-i18n.esm.js.map


                /***/ }),
            /* 83 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Loader=function(_Component){_inherits(Loader,_Component);function Loader(props){_classCallCheck(this,Loader);return _possibleConstructorReturn(this,_Component.call(this,props));}Loader.prototype.render=function render(){var isLoading=this.props.isLoading;return isLoading&&h("div",{className:"paazl-delimiter loader"});};return Loader;}(_preact.Component);exports.default=Loader;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 84 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _OpeningHoursContainer=__webpack_require__(85);var _OpeningHoursContainer2=_interopRequireDefault(_OpeningHoursContainer);var _AppUtils=__webpack_require__(11);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var OpeningHoursTooltipLink=function(_Component){_inherits(OpeningHoursTooltipLink,_Component);function OpeningHoursTooltipLink(props){_classCallCheck(this,OpeningHoursTooltipLink);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.onShowOpeningHours=function(e){e.preventDefault();e.stopPropagation();_this.setState({visible:true});document.addEventListener('click',_this.onHideOpeningHours);};_this.onHideOpeningHours=function(){_this.setState({visible:false});document.removeEventListener('click',_this.onHideOpeningHours);};_this.state={tooltipId:(0,_AppUtils.generateId)("tooltip"),visible:false};return _this;}OpeningHoursTooltipLink.prototype.render=function render(){var _state=this.state,tooltipId=_state.tooltipId,visible=_state.visible;var openingTimes=this.props.openingTimes;return h("li",{className:"point__options__item"},h("button",{type:"button",className:"point__options__link link link--info","aria-describedby":tooltipId,onClick:this.onShowOpeningHours},h("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20"},h("g",{fill:"none","fill-rule":"evenodd"},h("path",{d:"M0 0h20v20H0z"}),h("path",{className:"colorable",fill:"#000",d:"M10 0C4.478 0 0 4.477 0 10s4.477 10 10 10c5.522 0 10-4.477 10-10S15.522 0 10 0zm.934 3.61c.975 0 1.261.566 1.261 1.213 0 .807-.646 1.554-1.749 1.554-.923 0-1.362-.464-1.335-1.231 0-.647.54-1.536 1.823-1.536zM8.436 15.99c-.667 0-1.153-.405-.687-2.181l.763-3.151c.132-.504.154-.706 0-.706-.199 0-1.064.347-1.575.691l-.332-.545c1.62-1.353 3.482-2.146 4.279-2.146.666 0 .777.787.445 2l-.875 3.312c-.156.585-.089.787.066.787.2 0 .854-.241 1.498-.749l.377.507c-1.576 1.575-3.293 2.18-3.959 2.18z"}))),h(_TextWrapper2.default,{id:"pickupLocations.openingHours"})),h("aside",{role:"tooltip",id:tooltipId,className:(0,_classnames2.default)("widget-tooltip widget-tooltip--hours tooltip--hours",{"widget-tooltip--focused":visible})},h(_OpeningHoursContainer2.default,{openingTimes:openingTimes})));};return OpeningHoursTooltipLink;}(_preact.Component);exports.default=OpeningHoursTooltipLink;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 85 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _preact=__webpack_require__(0);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _DateTimeUtils=__webpack_require__(13);var _I18nResolver=__webpack_require__(28);var _OpeningHoursRow=__webpack_require__(209);var _OpeningHoursRow2=_interopRequireDefault(_OpeningHoursRow);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var OpeningHoursContainer=function(_Component){_inherits(OpeningHoursContainer,_Component);function OpeningHoursContainer(props){_classCallCheck(this,OpeningHoursContainer);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.calculateTime=function(businessHours){var closed=(0,_I18nResolver.getCurrentTranslation)().pickupLocations.closed;if(businessHours[0]&&businessHours[1]&&businessHours[0].to&&businessHours[1].from&&businessHours[0].to===businessHours[1].from){return{firstPart:_this.convertOpeningDate(businessHours[0].from,businessHours[1].to)};}var firstPart=businessHours[0]&&_this.convertOpeningDate(businessHours[0].from,businessHours[0].to);var secondPart=businessHours[1]&&_this.convertOpeningDate(businessHours[1].from,businessHours[1].to);if(firstPart&&secondPart){return{firstPart:firstPart+"\xA0\xA0\xA0",secondPart:secondPart};}else if(firstPart&&!secondPart){return{firstPart:firstPart};}else if(!firstPart&&secondPart){return{secondPart:secondPart};}return{firstPart:closed};};_this.convertOpeningDate=function(dateFrom,dateTill){var unknown=(0,_I18nResolver.getCurrentTranslation)().common.unknown;if(dateFrom&&dateTill){return dateFrom+" - "+dateTill;}else if(!dateFrom&&dateTill){return unknown+" - "+dateTill;}else if(dateFrom&&!dateTill){return dateFrom+" - "+unknown;}return null;};return _this;}OpeningHoursContainer.prototype.getBusinessHoursInWeek=function getBusinessHoursInWeek(){var _this2=this;var openingTimes=this.props.openingTimes;var translation=(0,_I18nResolver.getCurrentTranslation)();var closed=translation.pickupLocations.closed;var unknown=translation.common.unknown;var alwaysAvailable=translation.pickupLocations.alwaysAvailable;var week={MONDAY:{day:(0,_DateTimeUtils.getDayOfWeek)(1),time:{firstPart:closed}},TUESDAY:{day:(0,_DateTimeUtils.getDayOfWeek)(2),time:{firstPart:closed}},WEDNESDAY:{day:(0,_DateTimeUtils.getDayOfWeek)(3),time:{firstPart:closed}},THURSDAY:{day:(0,_DateTimeUtils.getDayOfWeek)(4),time:{firstPart:closed}},FRIDAY:{day:(0,_DateTimeUtils.getDayOfWeek)(5),time:{firstPart:closed}},SATURDAY:{day:(0,_DateTimeUtils.getDayOfWeek)(6),time:{firstPart:closed}},SUNDAY:{day:(0,_DateTimeUtils.getDayOfWeek)(0),time:{firstPart:closed}}};openingTimes.map(function(day){var entry=week[day.day];var time=unknown;if(day.alwaysOpen===true){time={firstPart:alwaysAvailable};}else{time=_this2.calculateTime(day.businessHours);}week[day.day]=_extends({},entry,{time:time});});return week;};OpeningHoursContainer.prototype.render=function render(){var openingHours=this.getBusinessHoursInWeek();return h("div",{className:"paazl-delimiter"},h(_TextWrapper2.default,{Tag:"h5",id:"pickupLocations.openingHours",additionalClassName:"tooltip__listing__title"}),h("ul",{className:"tooltip__listing"},openingHours&&Object.keys(openingHours).map(function(key){var timeFirstPart=openingHours[key].time.firstPart;var timeSecondPart=openingHours[key].time.secondPart;return h(_OpeningHoursRow2.default,{dayOfWeek:openingHours[key].day,timeFirstPart:timeFirstPart,timeSecondPart:timeSecondPart});})));};return OpeningHoursContainer;}(_preact.Component);exports.default=OpeningHoursContainer;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 86 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LabelAddressForm=function(_Component){_inherits(LabelAddressForm,_Component);function LabelAddressForm(props){_classCallCheck(this,LabelAddressForm);return _possibleConstructorReturn(this,_Component.call(this,props));}LabelAddressForm.prototype.render=function render(){var _props=this.props,address=_props.address,storeLogoMissing=_props.storeLogoMissing;var addressLine=[address.street,address.streetNumber,address.streetNumberSuffix].join(' ');var cityLine=[address.postalCode,address.city].join(' ');return h("div",{className:"paazl-delimiter"},h("p",{className:(0,_classnames2.default)("point__label__address",{"store-logo-missing":storeLogoMissing})},h(_StringWrapper2.default,{content:addressLine,additionalClassName:"point__address",notranslate:true}),h(_StringWrapper2.default,{content:cityLine,additionalClassName:"point__postal",notranslate:true})));};return LabelAddressForm;}(_preact.Component);exports.default=LabelAddressForm;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 87 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);var _CurrencyUtils=__webpack_require__(17);var _ConversionUtils=__webpack_require__(210);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LabelPriceDistanceAsideForm=function(_Component){_inherits(LabelPriceDistanceAsideForm,_Component);function LabelPriceDistanceAsideForm(props){_classCallCheck(this,LabelPriceDistanceAsideForm);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.getPrice=function(){var _this$props=_this.props,config=_this$props.config,pickupLocation=_this$props.pickupLocation;var rate=(0,_CurrencyUtils.getPickupLocationShippingRate)(pickupLocation);return(0,_CurrencyUtils.formatPrice)(rate,config,"point__cost");};return _this;}LabelPriceDistanceAsideForm.prototype.render=function render(){var pickupLocation=this.props.pickupLocation;var distance=(0,_ConversionUtils.formatDistance)(pickupLocation.distance);return h("section",{className:"point__aside"},this.getPrice(),distance&&h(_StringWrapper2.default,{content:distance,additionalClassName:"point__distance"}));};return LabelPriceDistanceAsideForm;}(_preact.Component);exports.default=LabelPriceDistanceAsideForm;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 88 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var StoreLogoForm=function(_Component){_inherits(StoreLogoForm,_Component);function StoreLogoForm(props){_classCallCheck(this,StoreLogoForm);return _possibleConstructorReturn(this,_Component.call(this,props));}StoreLogoForm.prototype.render=function render(){var _props=this.props,isStorePickup=_props.isStorePickup,storeLogo=_props.storeLogo;return h("section",{className:(0,_classnames2.default)({"point__main__logo":isStorePickup&&storeLogo})},isStorePickup&&storeLogo&&h("figure",{className:"point__logo"},h("img",{src:storeLogo,className:"point__logo__source"})));};return StoreLogoForm;}(_preact.Component);exports.default=StoreLogoForm;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 89 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _class,_temp;var _preact=__webpack_require__(0);var _googleMapReact=__webpack_require__(213);var _googleMapReact2=_interopRequireDefault(_googleMapReact);var _MapMarker=__webpack_require__(237);var _MapMarker2=_interopRequireDefault(_MapMarker);var _constants=__webpack_require__(1);var _NetworkUtils=__webpack_require__(12);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PickupLocationMapForm=(_temp=_class=function(_Component){_inherits(PickupLocationMapForm,_Component);function PickupLocationMapForm(props){_classCallCheck(this,PickupLocationMapForm);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.setTooltipRef=function(node){_this.tooltipRef=node;};_this.updateMapPosition=function(skipZoomRecalculation,pickupLocations){var _this$props=_this.props,open=_this$props.open,propsPickupLocations=_this$props.pickupLocations;var _this$state=_this.state,oldCenter=_this$state.center,oldZoom=_this$state.zoom;if(!pickupLocations){pickupLocations=propsPickupLocations;}if(open){var zoom=skipZoomRecalculation?oldZoom:_this.calculateZoom();var currentPoint=pickupLocations&&pickupLocations.find(function(pickupLocation){return pickupLocation.checked;});var center=currentPoint?_this.calculateMapCenter(currentPoint,zoom):oldCenter;_this.setState({zoom:zoom,center:center});}};_this.equalsLists=function(primary,secondary){if(!primary||!secondary||primary.length!==secondary.length){return false;}for(var i=0;i<primary.length;i++){if(primary[i].code!==secondary[i].code){return false;}}return true;};_this.calculateZoom=function(){var distance=_this.haversine();var zoom=20;while(_constants.MAP_ZOOMS[--zoom]){if(distance<_constants.MAP_ZOOMS[zoom]*_this.state.size.width*0.8){break;}}return zoom;};_this.getBoundCoordinates=function(){var pickupLocations=_this.props.pickupLocations;if(pickupLocations){var latArray=pickupLocations.filter(function(s){return s.coordinates&&s.coordinates.latitude;}).map(function(s){return s.coordinates.latitude;});var lngArray=pickupLocations.filter(function(s){return s.coordinates&&s.coordinates.longitude;}).map(function(s){return s.coordinates.longitude;});if(latArray&&lngArray){var maxLat=Math.max.apply(null,latArray);var minLat=Math.min.apply(null,latArray);var maxLng=Math.max.apply(null,lngArray);var minLng=Math.min.apply(null,lngArray);return{maxLat:maxLat,minLat:minLat,maxLng:maxLng,minLng:minLng};}}};_this.toRadians=function(degrees){return degrees/57.2957795;};_this.haversine=function(){var coordinates=_this.getBoundCoordinates();if(coordinates){var maxLat=coordinates.maxLat;var minLat=coordinates.minLat;var maxLng=coordinates.maxLng;var minLng=coordinates.minLng;var dLat=_this.toRadians(maxLat-minLat);var dLng=_this.toRadians(maxLng-minLng);var a=Math.sin(dLat/2)*Math.sin(dLat/2)+Math.cos(_this.toRadians(maxLat))*Math.cos(_this.toRadians(minLat))*Math.sin(dLng/2)*Math.sin(dLng/2);var c=2*Math.atan2(Math.sqrt(a),Math.sqrt(1-a));return 6371000*c;//6371000 - radius of Earth in meters.
                }};_this.calculateMapCenter=function(pickupLocation,zoom){if(pickupLocation&&pickupLocation.coordinates){return{lat:pickupLocation.coordinates.latitude+_this.calculateMarginTopDistance(zoom),lng:pickupLocation.coordinates.longitude};}};_this.calculateMarginTopDistance=function(zoom){if(zoom===-1||!_this.tooltipRef){return 0;}var zoomMeters=_constants.MAP_ZOOMS[zoom];return _constants.METER_IN_DEGREE*zoomMeters*(_constants.TOOLTIP_TOP_MARGIN_IN_PIXEL+_this.tooltipRef.clientHeight-_this.state.size.height/2);};_this.onMapChange=function(mapProps){var zoom=mapProps.zoom,size=mapProps.size,center=mapProps.center;var _this$state2=_this.state,oldZoom=_this$state2.zoom,oldSize=_this$state2.size,oldCenter=_this$state2.center;if(zoom!==0&&zoom!==oldZoom||oldSize.width!==size.width||oldSize.height!==size.height||oldCenter.lat!==center.lat||oldCenter.lng!==center.lng){_this.setState({zoom:zoom,size:size,center:center});}};_this.state={googleMapsApiKey:null,zoom:15,size:{width:700,height:500},center:{lat:50.449549,lng:30.525376}};return _this;}PickupLocationMapForm.prototype.componentDidMount=function componentDidMount(){var _this2=this;var config=this.props.config;if(!window.PAAZL_CHECKOUT_WIDGET_API_URL){(0,_NetworkUtils.doGet)(_constants.GOOGLE_MAPS_API_KEY_URL,config).then(function(response){_this2.setState({googleMapsApiKey:response.data});}).catch(function(error){console.error(error);_this2.setState({googleMapsApiKey:_constants.GOOGLE_API_KEY});});}else{this.setState({googleMapsApiKey:_constants.GOOGLE_API_KEY});}window.addEventListener("resize",this.updateMapPosition);};PickupLocationMapForm.prototype.componentWillUnmount=function componentWillUnmount(){window.removeEventListener("resize",this.updateMapPosition);};PickupLocationMapForm.prototype.componentWillReceiveProps=function componentWillReceiveProps(nextProps,nextState){var _props=this.props,open=_props.open,pickupLocations=_props.pickupLocations;var modalOpened=!open&&nextProps.open;var listChanged=nextProps.pickupLocations&&!this.equalsLists(nextProps.pickupLocations,pickupLocations);if(this.state.zoom!==nextState.zoom){this.updateMapPosition(modalOpened||listChanged,nextProps.pickupLocations);}};/**
                 * Calculate distance between Latitude/Longitude points.
                 * Detailed documentation: http://www.movable-type.co.uk/scripts/latlong.html
                 *
                 * @returns distance
                 */PickupLocationMapForm.prototype.render=function render(){var _this3=this;var _props2=this.props,pickupLocations=_props2.pickupLocations,onSelectPickupLocation=_props2.onSelectPickupLocation,open=_props2.open,simple=_props2.simple,isStorePickup=_props2.isStorePickup,storeLogo=_props2.storeLogo,config=_props2.config;var _state=this.state,center=_state.center,zoom=_state.zoom,googleMapsApiKey=_state.googleMapsApiKey;var containerClassName=simple?"window__map-simple":"window__map";return h('div',{className:containerClassName},open&&googleMapsApiKey&&h('div',{className:'map-container'},h(_googleMapReact2.default,{bootstrapURLKeys:{key:[googleMapsApiKey]},center:center,zoom:zoom,onChange:this.onMapChange},pickupLocations&&pickupLocations.length>0&&pickupLocations.filter(function(pickupLocation){return _this3.hasCoordinates(pickupLocation);}).map(function(pickupLocation){return h(_MapMarker2.default,{lat:pickupLocation.coordinates.latitude,lng:pickupLocation.coordinates.longitude,pickupLocation:pickupLocation,isStorePickup:isStorePickup,storeLogo:storeLogo,onSelectPickupLocation:onSelectPickupLocation,updateMapPosition:_this3.updateMapPosition,setTooltipRef:_this3.setTooltipRef,config:config});}))));};PickupLocationMapForm.prototype.hasCoordinates=function hasCoordinates(pickupLocation){return pickupLocation.coordinates&&pickupLocation.coordinates.latitude&&pickupLocation.coordinates.longitude;};return PickupLocationMapForm;}(_preact.Component),_class.defaultProps={open:false},_temp);exports.default=PickupLocationMapForm;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 90 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                if (false) {
                    module.exports = require('./cjs/react-is.production.min.js');
                } else {
                    module.exports = __webpack_require__(215);
                }


                /***/ }),
            /* 91 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /**
                 * Copyright (c) 2013-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */



                var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';

                module.exports = ReactPropTypesSecret;


                /***/ }),
            /* 92 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;

                var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

                var _react = __webpack_require__(29);

                var _react2 = _interopRequireDefault(_react);

                var _propTypes = __webpack_require__(54);

                var _propTypes2 = _interopRequireDefault(_propTypes);

                var _omit = __webpack_require__(93);

                var _omit2 = _interopRequireDefault(_omit);

                var _shallowEqual = __webpack_require__(94);

                var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

                function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// utils


                var mainStyle = {
                    width: '100%',
                    height: '100%',
                    left: 0,
                    top: 0,
                    margin: 0,
                    padding: 0,
                    position: 'absolute'
                };

                var style = {
                    width: 0,
                    height: 0,
                    left: 0,
                    top: 0,
                    backgroundColor: 'transparent',
                    position: 'absolute'
                };

                var GoogleMapMarkers = function (_Component) {
                    _inherits(GoogleMapMarkers, _Component);

                    /* eslint-disable react/forbid-prop-types */
                    function GoogleMapMarkers(props) {
                        _classCallCheck(this, GoogleMapMarkers);

                        var _this = _possibleConstructorReturn(this, _Component.call(this, props));

                        _this._getState = function () {
                            return {
                                children: _this.props.dispatcher.getChildren(),
                                updateCounter: _this.props.dispatcher.getUpdateCounter()
                            };
                        };

                        _this._onChangeHandler = function () {
                            if (!_this.dimensionsCache_) {
                                return;
                            }

                            var prevChildCount = (_this.state.children || []).length;
                            var state = _this._getState();

                            _this.setState(state, function () {
                                return (state.children || []).length !== prevChildCount && _this._onMouseChangeHandler();
                            });
                        };

                        _this._onChildClick = function () {
                            if (_this.props.onChildClick) {
                                if (_this.hoverChildProps_) {
                                    var hoverKey = _this.hoverKey_;
                                    var childProps = _this.hoverChildProps_;
                                    // click works only on hovered item
                                    _this.props.onChildClick(hoverKey, childProps);
                                }
                            }
                        };

                        _this._onChildMouseDown = function () {
                            if (_this.props.onChildMouseDown) {
                                if (_this.hoverChildProps_) {
                                    var hoverKey = _this.hoverKey_;
                                    var childProps = _this.hoverChildProps_;
                                    // works only on hovered item
                                    _this.props.onChildMouseDown(hoverKey, childProps);
                                }
                            }
                        };

                        _this._onChildMouseEnter = function (hoverKey, childProps) {
                            if (!_this.dimensionsCache_) {
                                return;
                            }

                            if (_this.props.onChildMouseEnter) {
                                _this.props.onChildMouseEnter(hoverKey, childProps);
                            }

                            _this.hoverChildProps_ = childProps;
                            _this.hoverKey_ = hoverKey;
                            _this.setState({ hoverKey: hoverKey });
                        };

                        _this._onChildMouseLeave = function () {
                            if (!_this.dimensionsCache_) {
                                return;
                            }

                            var hoverKey = _this.hoverKey_;
                            var childProps = _this.hoverChildProps_;

                            if (hoverKey !== undefined && hoverKey !== null) {
                                if (_this.props.onChildMouseLeave) {
                                    _this.props.onChildMouseLeave(hoverKey, childProps);
                                }

                                _this.hoverKey_ = null;
                                _this.hoverChildProps_ = null;
                                _this.setState({ hoverKey: null });
                            }
                        };

                        _this._onMouseAllow = function (value) {
                            if (!value) {
                                _this._onChildMouseLeave();
                            }

                            _this.allowMouse_ = value;
                        };

                        _this._onMouseChangeHandler = function () {
                            if (_this.allowMouse_) {
                                _this._onMouseChangeHandlerRaf();
                            }
                        };

                        _this._onMouseChangeHandlerRaf = function () {
                            if (!_this.dimensionsCache_) {
                                return;
                            }

                            var mp = _this.props.dispatcher.getMousePosition();

                            if (mp) {
                                var distances = [];
                                var hoverDistance = _this.props.getHoverDistance();

                                _react2.default.Children.forEach(_this.state.children, function (child, childIndex) {
                                    if (!child) return;
                                    // layers
                                    if (child.props.latLng === undefined && child.props.lat === undefined && child.props.lng === undefined) {
                                        return;
                                    }

                                    var childKey = child.key !== undefined && child.key !== null ? child.key : childIndex;
                                    var dist = _this.props.distanceToMouse(_this.dimensionsCache_[childKey], mp, child.props);
                                    if (dist < hoverDistance) {
                                        distances.push({
                                            key: childKey,
                                            dist: dist,
                                            props: child.props
                                        });
                                    }
                                });

                                if (distances.length) {
                                    distances.sort(function (a, b) {
                                        return a.dist - b.dist;
                                    });
                                    var hoverKey = distances[0].key;
                                    var childProps = distances[0].props;

                                    if (_this.hoverKey_ !== hoverKey) {
                                        _this._onChildMouseLeave();

                                        _this._onChildMouseEnter(hoverKey, childProps);
                                    }
                                } else {
                                    _this._onChildMouseLeave();
                                }
                            } else {
                                _this._onChildMouseLeave();
                            }
                        };

                        _this._getDimensions = function (key) {
                            var childKey = key;
                            return _this.dimensionsCache_[childKey];
                        };

                        _this.props.dispatcher.on('kON_CHANGE', _this._onChangeHandler);
                        _this.props.dispatcher.on('kON_MOUSE_POSITION_CHANGE', _this._onMouseChangeHandler);
                        _this.props.dispatcher.on('kON_CLICK', _this._onChildClick);
                        _this.props.dispatcher.on('kON_MDOWN', _this._onChildMouseDown);

                        _this.dimensionsCache_ = {};
                        _this.hoverKey_ = null;
                        _this.hoverChildProps_ = null;
                        _this.allowMouse_ = true;

                        _this.state = _extends({}, _this._getState(), { hoverKey: null });
                        return _this;
                    }
                    /* eslint-enable react/forbid-prop-types */

                    GoogleMapMarkers.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
                        if (this.props.experimental === true) {
                            return !(0, _shallowEqual2.default)(this.props, nextProps) || !(0, _shallowEqual2.default)((0, _omit2.default)(this.state, ['hoverKey']), (0, _omit2.default)(nextState, ['hoverKey']));
                        }

                        return !(0, _shallowEqual2.default)(this.props, nextProps) || !(0, _shallowEqual2.default)(this.state, nextState);
                    };

                    GoogleMapMarkers.prototype.componentWillUnmount = function componentWillUnmount() {
                        this.props.dispatcher.removeListener('kON_CHANGE', this._onChangeHandler);
                        this.props.dispatcher.removeListener('kON_MOUSE_POSITION_CHANGE', this._onMouseChangeHandler);
                        this.props.dispatcher.removeListener('kON_CLICK', this._onChildClick);
                        this.props.dispatcher.removeListener('kON_MDOWN', this._onChildMouseDown);

                        this.dimensionsCache_ = null;
                    };

                    GoogleMapMarkers.prototype.render = function render() {
                        var _this2 = this;

                        var mainElementStyle = this.props.style || mainStyle;
                        this.dimensionsCache_ = {};

                        var markers = _react2.default.Children.map(this.state.children, function (child, childIndex) {
                            if (!child) return undefined;
                            if (child.props.latLng === undefined && child.props.lat === undefined && child.props.lng === undefined) {
                                return _react2.default.cloneElement(child, {
                                    $geoService: _this2.props.geoService,
                                    $onMouseAllow: _this2._onMouseAllow,
                                    $prerender: _this2.props.prerender
                                });
                            }

                            var latLng = child.props.latLng !== undefined ? child.props.latLng : { lat: child.props.lat, lng: child.props.lng };

                            var pt = _this2.props.insideMapPanes ? _this2.props.geoService.fromLatLngToDivPixel(latLng) : _this2.props.geoService.fromLatLngToCenterPixel(latLng);

                            var stylePtPos = {
                                left: pt.x,
                                top: pt.y
                            };

                            // If the component has a southeast corner defined (either as a LatLng, or a separate
                            // lat and lng pair), set the width and height based on the distance between the northwest
                            // and the southeast corner to lock the overlay to the correct geographic bounds.
                            if (child.props.seLatLng !== undefined || child.props.seLat !== undefined && child.props.seLng !== undefined) {
                                var seLatLng = child.props.seLatLng !== undefined ? child.props.seLatLng : { lat: child.props.seLat, lng: child.props.seLng };

                                var sePt = _this2.props.insideMapPanes ? _this2.props.geoService.fromLatLngToDivPixel(seLatLng) : _this2.props.geoService.fromLatLngToCenterPixel(seLatLng);

                                stylePtPos.width = sePt.x - pt.x;
                                stylePtPos.height = sePt.y - pt.y;
                            }

                            var containerPt = _this2.props.geoService.fromLatLngToContainerPixel(latLng);

                            // to prevent rerender on child element i need to pass
                            // const params $getDimensions and $dimensionKey instead of dimension object
                            var childKey = child.key !== undefined && child.key !== null ? child.key : childIndex;

                            _this2.dimensionsCache_[childKey] = _extends({
                                x: containerPt.x,
                                y: containerPt.y
                            }, latLng);

                            return _react2.default.createElement(
                                'div',
                                {
                                    key: childKey,
                                    style: _extends({}, style, stylePtPos),
                                    className: child.props.$markerHolderClassName
                                },
                                _react2.default.cloneElement(child, {
                                    $hover: childKey === _this2.state.hoverKey,
                                    $getDimensions: _this2._getDimensions,
                                    $dimensionKey: childKey,
                                    $geoService: _this2.props.geoService,
                                    $onMouseAllow: _this2._onMouseAllow,
                                    $prerender: _this2.props.prerender
                                })
                            );
                        });

                        return _react2.default.createElement(
                            'div',
                            { style: mainElementStyle },
                            markers
                        );
                    };

                    return GoogleMapMarkers;
                }(_react.Component);

                GoogleMapMarkers.propTypes = {
                    geoService: _propTypes2.default.any,
                    style: _propTypes2.default.any,
                    distanceToMouse: _propTypes2.default.func,
                    dispatcher: _propTypes2.default.any,
                    onChildClick: _propTypes2.default.func,
                    onChildMouseDown: _propTypes2.default.func,
                    onChildMouseLeave: _propTypes2.default.func,
                    onChildMouseEnter: _propTypes2.default.func,
                    getHoverDistance: _propTypes2.default.func,
                    insideMapPanes: _propTypes2.default.bool,
                    prerender: _propTypes2.default.bool
                };
                GoogleMapMarkers.defaultProps = {
                    insideMapPanes: false,
                    prerender: false
                };
                exports.default = GoogleMapMarkers;

                /***/ }),
            /* 93 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;

                function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

// https://github.com/acdlite/recompose/blob/master/src/packages/recompose/utils/omit.js
                var omit = function omit(obj, keys) {
                    var rest = _objectWithoutProperties(obj, []);

                    for (var i = 0; i < keys.length; i++) {
                        var key = keys[i];
                        if (key in rest) {
                            delete rest[key];
                        }
                    }
                    return rest;
                };

                exports.default = omit;

                /***/ }),
            /* 94 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

                /**
                 * Copyright (c) 2013-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 *
                 * @providesModule shallowEqual
                 * @typechecks
                 *
                 */

                var hasOwnProperty = Object.prototype.hasOwnProperty;

                /**
                 * inlined Object.is polyfill to avoid requiring consumers ship their own
                 * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
                 */
                function is(x, y) {
                    // SameValue algorithm
                    if (x === y) {
                        // Steps 1-5, 7-10
                        // Steps 6.b-6.e: +0 != -0
                        // Added the nonzero y check to make Flow happy, but it is redundant
                        return x !== 0 || y !== 0 || 1 / x === 1 / y;
                    }
                    // Step 6.a: NaN == NaN
                    // eslint-disable-next-line no-self-compare
                    return x !== x && y !== y;
                }

                /**
                 * Performs equality by iterating through keys on an object and returning false
                 * when any key has values which are not strictly equal between the arguments.
                 * Returns true when the values of all keys are strictly equal.
                 */
                function shallowEqual(objA, objB) {
                    if (is(objA, objB)) {
                        return true;
                    }

                    if ((typeof objA === 'undefined' ? 'undefined' : _typeof(objA)) !== 'object' || objA === null || (typeof objB === 'undefined' ? 'undefined' : _typeof(objB)) !== 'object' || objB === null) {
                        return false;
                    }

                    var keysA = Object.keys(objA);
                    var keysB = Object.keys(objB);

                    if (keysA.length !== keysB.length) {
                        return false;
                    }

                    // Test for A's keys different from B.
                    for (var i = 0; i < keysA.length; i++) {
                        if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
                            return false;
                        }
                    }

                    return true;
                }

                module.exports = shallowEqual;
                /* src: https://github.com/facebook/fbjs/blob/master/packages/fbjs/src/core/shallowEqual.js */

                /***/ }),
            /* 95 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                module.exports = Point;

                /**
                 * A standalone point geometry with useful accessor, comparison, and
                 * modification methods.
                 *
                 * @class Point
                 * @param {Number} x the x-coordinate. this could be longitude or screen
                 * pixels, or any other sort of unit.
                 * @param {Number} y the y-coordinate. this could be latitude or screen
                 * pixels, or any other sort of unit.
                 * @example
                 * var point = new Point(-77, 38);
                 */
                function Point(x, y) {
                    this.x = x;
                    this.y = y;
                }

                Point.prototype = {

                    /**
                     * Clone this point, returning a new point that can be modified
                     * without affecting the old one.
                     * @return {Point} the clone
                     */
                    clone: function() { return new Point(this.x, this.y); },

                    /**
                     * Add this point's x & y coordinates to another point,
                     * yielding a new point.
                     * @param {Point} p the other point
                     * @return {Point} output point
                     */
                    add:     function(p) { return this.clone()._add(p); },

                    /**
                     * Subtract this point's x & y coordinates to from point,
                     * yielding a new point.
                     * @param {Point} p the other point
                     * @return {Point} output point
                     */
                    sub:     function(p) { return this.clone()._sub(p); },

                    /**
                     * Multiply this point's x & y coordinates by point,
                     * yielding a new point.
                     * @param {Point} p the other point
                     * @return {Point} output point
                     */
                    multByPoint:    function(p) { return this.clone()._multByPoint(p); },

                    /**
                     * Divide this point's x & y coordinates by point,
                     * yielding a new point.
                     * @param {Point} p the other point
                     * @return {Point} output point
                     */
                    divByPoint:     function(p) { return this.clone()._divByPoint(p); },

                    /**
                     * Multiply this point's x & y coordinates by a factor,
                     * yielding a new point.
                     * @param {Point} k factor
                     * @return {Point} output point
                     */
                    mult:    function(k) { return this.clone()._mult(k); },

                    /**
                     * Divide this point's x & y coordinates by a factor,
                     * yielding a new point.
                     * @param {Point} k factor
                     * @return {Point} output point
                     */
                    div:     function(k) { return this.clone()._div(k); },

                    /**
                     * Rotate this point around the 0, 0 origin by an angle a,
                     * given in radians
                     * @param {Number} a angle to rotate around, in radians
                     * @return {Point} output point
                     */
                    rotate:  function(a) { return this.clone()._rotate(a); },

                    /**
                     * Rotate this point around p point by an angle a,
                     * given in radians
                     * @param {Number} a angle to rotate around, in radians
                     * @param {Point} p Point to rotate around
                     * @return {Point} output point
                     */
                    rotateAround:  function(a,p) { return this.clone()._rotateAround(a,p); },

                    /**
                     * Multiply this point by a 4x1 transformation matrix
                     * @param {Array<Number>} m transformation matrix
                     * @return {Point} output point
                     */
                    matMult: function(m) { return this.clone()._matMult(m); },

                    /**
                     * Calculate this point but as a unit vector from 0, 0, meaning
                     * that the distance from the resulting point to the 0, 0
                     * coordinate will be equal to 1 and the angle from the resulting
                     * point to the 0, 0 coordinate will be the same as before.
                     * @return {Point} unit vector point
                     */
                    unit:    function() { return this.clone()._unit(); },

                    /**
                     * Compute a perpendicular point, where the new y coordinate
                     * is the old x coordinate and the new x coordinate is the old y
                     * coordinate multiplied by -1
                     * @return {Point} perpendicular point
                     */
                    perp:    function() { return this.clone()._perp(); },

                    /**
                     * Return a version of this point with the x & y coordinates
                     * rounded to integers.
                     * @return {Point} rounded point
                     */
                    round:   function() { return this.clone()._round(); },

                    /**
                     * Return the magitude of this point: this is the Euclidean
                     * distance from the 0, 0 coordinate to this point's x and y
                     * coordinates.
                     * @return {Number} magnitude
                     */
                    mag: function() {
                        return Math.sqrt(this.x * this.x + this.y * this.y);
                    },

                    /**
                     * Judge whether this point is equal to another point, returning
                     * true or false.
                     * @param {Point} other the other point
                     * @return {boolean} whether the points are equal
                     */
                    equals: function(other) {
                        return this.x === other.x &&
                            this.y === other.y;
                    },

                    /**
                     * Calculate the distance from this point to another point
                     * @param {Point} p the other point
                     * @return {Number} distance
                     */
                    dist: function(p) {
                        return Math.sqrt(this.distSqr(p));
                    },

                    /**
                     * Calculate the distance from this point to another point,
                     * without the square root step. Useful if you're comparing
                     * relative distances.
                     * @param {Point} p the other point
                     * @return {Number} distance
                     */
                    distSqr: function(p) {
                        var dx = p.x - this.x,
                            dy = p.y - this.y;
                        return dx * dx + dy * dy;
                    },

                    /**
                     * Get the angle from the 0, 0 coordinate to this point, in radians
                     * coordinates.
                     * @return {Number} angle
                     */
                    angle: function() {
                        return Math.atan2(this.y, this.x);
                    },

                    /**
                     * Get the angle from this point to another point, in radians
                     * @param {Point} b the other point
                     * @return {Number} angle
                     */
                    angleTo: function(b) {
                        return Math.atan2(this.y - b.y, this.x - b.x);
                    },

                    /**
                     * Get the angle between this point and another point, in radians
                     * @param {Point} b the other point
                     * @return {Number} angle
                     */
                    angleWith: function(b) {
                        return this.angleWithSep(b.x, b.y);
                    },

                    /*
     * Find the angle of the two vectors, solving the formula for
     * the cross product a x b = |a||b|sin(θ) for θ.
     * @param {Number} x the x-coordinate
     * @param {Number} y the y-coordinate
     * @return {Number} the angle in radians
     */
                    angleWithSep: function(x, y) {
                        return Math.atan2(
                            this.x * y - this.y * x,
                            this.x * x + this.y * y);
                    },

                    _matMult: function(m) {
                        var x = m[0] * this.x + m[1] * this.y,
                            y = m[2] * this.x + m[3] * this.y;
                        this.x = x;
                        this.y = y;
                        return this;
                    },

                    _add: function(p) {
                        this.x += p.x;
                        this.y += p.y;
                        return this;
                    },

                    _sub: function(p) {
                        this.x -= p.x;
                        this.y -= p.y;
                        return this;
                    },

                    _mult: function(k) {
                        this.x *= k;
                        this.y *= k;
                        return this;
                    },

                    _div: function(k) {
                        this.x /= k;
                        this.y /= k;
                        return this;
                    },

                    _multByPoint: function(p) {
                        this.x *= p.x;
                        this.y *= p.y;
                        return this;
                    },

                    _divByPoint: function(p) {
                        this.x /= p.x;
                        this.y /= p.y;
                        return this;
                    },

                    _unit: function() {
                        this._div(this.mag());
                        return this;
                    },

                    _perp: function() {
                        var y = this.y;
                        this.y = this.x;
                        this.x = -y;
                        return this;
                    },

                    _rotate: function(angle) {
                        var cos = Math.cos(angle),
                            sin = Math.sin(angle),
                            x = cos * this.x - sin * this.y,
                            y = sin * this.x + cos * this.y;
                        this.x = x;
                        this.y = y;
                        return this;
                    },

                    _rotateAround: function(angle, p) {
                        var cos = Math.cos(angle),
                            sin = Math.sin(angle),
                            x = p.x + cos * (this.x - p.x) - sin * (this.y - p.y),
                            y = p.y + sin * (this.x - p.x) + cos * (this.y - p.y);
                        this.x = x;
                        this.y = y;
                        return this;
                    },

                    _round: function() {
                        this.x = Math.round(this.x);
                        this.y = Math.round(this.y);
                        return this;
                    }
                };

                /**
                 * Construct a point from an array if necessary, otherwise if the input
                 * is already a Point, or an unknown type, return it unchanged
                 * @param {Array<Number>|Point|*} a any kind of input value
                 * @return {Point} constructed point, or passed-through value.
                 * @example
                 * // this
                 * var point = Point.convert([0, 1]);
                 * // is equivalent to
                 * var point = new Point(0, 1);
                 */
                Point.convert = function (a) {
                    if (a instanceof Point) {
                        return a;
                    }
                    if (Array.isArray(a)) {
                        return new Point(a[0], a[1]);
                    }
                    return a;
                };


                /***/ }),
            /* 96 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;

                var _wrap2 = __webpack_require__(97);

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                var LatLng = function () {
                    function LatLng(lat, lng) {
                        _classCallCheck(this, LatLng);

                        if (isNaN(lat) || isNaN(lng)) {
                            throw new Error('Invalid LatLng object: (' + lat + ', ' + lng + ')');
                        }
                        this.lat = +lat;
                        this.lng = +lng;
                    }

                    LatLng.prototype.wrap = function wrap() {
                        return new LatLng(this.lat, (0, _wrap2.wrap)(this.lng, -180, 180));
                    };

                    return LatLng;
                }();

                LatLng.convert = function (a) {
                    if (a instanceof LatLng) {
                        return a;
                    }

                    if (Array.isArray(a)) {
                        return new LatLng(a[0], a[1]);
                    }

                    if ('lng' in a && 'lat' in a) {
                        return new LatLng(a.lat, a.lng);
                    }

                    return a;
                };

                exports.default = LatLng;

                /***/ }),
            /* 97 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;
                exports.wrap = wrap;
                /* eslint-disable import/prefer-default-export */

                function wrap(n, min, max) {
                    var d = max - min;
                    return n === max ? n : ((n - min) % d + d) % d + min;
                }

                /***/ }),
            /* 98 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;
                exports.default = addPassiveEventListener;
// feature detection for passive support
// see: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support
                function hasPassiveSupport() {
                    var passiveSupported = false;

                    try {
                        var options = Object.defineProperty({}, 'passive', {
                            get: function get() {
                                passiveSupported = true;
                            }
                        });

                        window.addEventListener('test', options, options);
                        window.removeEventListener('test', options, options);
                    } catch (err) {
                        passiveSupported = false;
                    }

                    return passiveSupported;
                }

                function addPassiveEventListener(element, eventName, func, capture) {
                    element.addEventListener(eventName, func, hasPassiveSupport() ? {
                        capture: capture,
                        passive: true
                    } : capture);
                }

                /***/ }),
            /* 99 */
            /***/ (function(module, exports, __webpack_require__) {

                var requireObjectCoercible = __webpack_require__(39);

// `ToObject` abstract operation
// https://tc39.github.io/ecma262/#sec-toobject
                module.exports = function (argument) {
                    return Object(requireObjectCoercible(argument));
                };


                /***/ }),
            /* 100 */
            /***/ (function(module, exports, __webpack_require__) {

                var wellKnownSymbol = __webpack_require__(5);
                var create = __webpack_require__(43);
                var hide = __webpack_require__(9);

                var UNSCOPABLES = wellKnownSymbol('unscopables');
                var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
                if (ArrayPrototype[UNSCOPABLES] == undefined) {
                    hide(ArrayPrototype, UNSCOPABLES, create(null));
                }

// add a key to Array.prototype[@@unscopables]
                module.exports = function (key) {
                    ArrayPrototype[UNSCOPABLES][key] = true;
                };


                /***/ }),
            /* 101 */
            /***/ (function(module, exports) {

                module.exports = function (it, Constructor, name) {
                    if (!(it instanceof Constructor)) {
                        throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
                    } return it;
                };


                /***/ }),
            /* 102 */
            /***/ (function(module, exports, __webpack_require__) {

                var toInteger = __webpack_require__(42);

                var max = Math.max;
                var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(length, length).
                module.exports = function (index, length) {
                    var integer = toInteger(index);
                    return integer < 0 ? max(integer + length, 0) : min(integer, length);
                };


                /***/ }),
            /* 103 */
            /***/ (function(module, exports, __webpack_require__) {

                var internalObjectKeys = __webpack_require__(70);
                var enumBugKeys = __webpack_require__(50);

                var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.github.io/ecma262/#sec-object.getownpropertynames
                exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
                    return internalObjectKeys(O, hiddenKeys);
                };


                /***/ }),
            /* 104 */
            /***/ (function(module, exports, __webpack_require__) {

                var redefine = __webpack_require__(21);

                module.exports = function (target, src, options) {
                    for (var key in src) redefine(target, key, src[key], options);
                    return target;
                };


                /***/ }),
            /* 105 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var getBuiltIn = __webpack_require__(20);
                var definePropertyModule = __webpack_require__(24);
                var wellKnownSymbol = __webpack_require__(5);
                var DESCRIPTORS = __webpack_require__(19);

                var SPECIES = wellKnownSymbol('species');

                module.exports = function (CONSTRUCTOR_NAME) {
                    var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
                    var defineProperty = definePropertyModule.f;

                    if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
                        defineProperty(Constructor, SPECIES, {
                            configurable: true,
                            get: function () { return this; }
                        });
                    }
                };


                /***/ }),
            /* 106 */
            /***/ (function(module, exports, __webpack_require__) {

                var toInteger = __webpack_require__(42);
                var requireObjectCoercible = __webpack_require__(39);

// `String.prototype.{ codePointAt, at }` methods implementation
                var createMethod = function (CONVERT_TO_STRING) {
                    return function ($this, pos) {
                        var S = String(requireObjectCoercible($this));
                        var position = toInteger(pos);
                        var size = S.length;
                        var first, second;
                        if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
                        first = S.charCodeAt(position);
                        return first < 0xD800 || first > 0xDBFF || position + 1 === size
                        || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF
                            ? CONVERT_TO_STRING ? S.charAt(position) : first
                            : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
                    };
                };

                module.exports = {
                    // `String.prototype.codePointAt` method
                    // https://tc39.github.io/ecma262/#sec-string.prototype.codepointat
                    codeAt: createMethod(false),
                    // `String.prototype.at` method
                    // https://github.com/mathiasbynens/String.prototype.at
                    charAt: createMethod(true)
                };


                /***/ }),
            /* 107 */
            /***/ (function(module, exports, __webpack_require__) {

                var fails = __webpack_require__(15);
                var classof = __webpack_require__(25);

                var split = ''.split;

// fallback for non-array-like ES3 and non-enumerable old V8 strings
                module.exports = fails(function () {
                    // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
                    // eslint-disable-next-line no-prototype-builtins
                    return !Object('z').propertyIsEnumerable(0);
                }) ? function (it) {
                    return classof(it) == 'String' ? split.call(it, '') : Object(it);
                } : Object;


                /***/ }),
            /* 108 */
            /***/ (function(module, exports, __webpack_require__) {

                var toIndexedObject = __webpack_require__(32);
                var toLength = __webpack_require__(55);
                var toAbsoluteIndex = __webpack_require__(102);

// `Array.prototype.{ indexOf, includes }` methods implementation
                var createMethod = function (IS_INCLUDES) {
                    return function ($this, el, fromIndex) {
                        var O = toIndexedObject($this);
                        var length = toLength(O.length);
                        var index = toAbsoluteIndex(fromIndex, length);
                        var value;
                        // Array#includes uses SameValueZero equality algorithm
                        // eslint-disable-next-line no-self-compare
                        if (IS_INCLUDES && el != el) while (length > index) {
                            value = O[index++];
                            // eslint-disable-next-line no-self-compare
                            if (value != value) return true;
                            // Array#indexOf ignores holes, Array#includes - not
                        } else for (;length > index; index++) {
                            if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
                        } return !IS_INCLUDES && -1;
                    };
                };

                module.exports = {
                    // `Array.prototype.includes` method
                    // https://tc39.github.io/ecma262/#sec-array.prototype.includes
                    includes: createMethod(true),
                    // `Array.prototype.indexOf` method
                    // https://tc39.github.io/ecma262/#sec-array.prototype.indexof
                    indexOf: createMethod(false)
                };


                /***/ }),
            /* 109 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var IteratorPrototype = __webpack_require__(71).IteratorPrototype;
                var create = __webpack_require__(43);
                var createPropertyDescriptor = __webpack_require__(33);
                var setToStringTag = __webpack_require__(44);
                var Iterators = __webpack_require__(26);

                var returnThis = function () { return this; };

                module.exports = function (IteratorConstructor, NAME, next) {
                    var TO_STRING_TAG = NAME + ' Iterator';
                    IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(1, next) });
                    setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
                    Iterators[TO_STRING_TAG] = returnThis;
                    return IteratorConstructor;
                };


                /***/ }),
            /* 110 */
            /***/ (function(module, exports, __webpack_require__) {

                var internalObjectKeys = __webpack_require__(70);
                var enumBugKeys = __webpack_require__(50);

// `Object.keys` method
// https://tc39.github.io/ecma262/#sec-object.keys
                module.exports = Object.keys || function keys(O) {
                    return internalObjectKeys(O, enumBugKeys);
                };


                /***/ }),
            /* 111 */
            /***/ (function(module, exports, __webpack_require__) {

                var classof = __webpack_require__(61);
                var Iterators = __webpack_require__(26);
                var wellKnownSymbol = __webpack_require__(5);

                var ITERATOR = wellKnownSymbol('iterator');

                module.exports = function (it) {
                    if (it != undefined) return it[ITERATOR]
                        || it['@@iterator']
                        || Iterators[classof(it)];
                };


                /***/ }),
            /* 112 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var nativePropertyIsEnumerable = {}.propertyIsEnumerable;
                var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
                var NASHORN_BUG = getOwnPropertyDescriptor && !nativePropertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.propertyisenumerable
                exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
                    var descriptor = getOwnPropertyDescriptor(this, V);
                    return !!descriptor && descriptor.enumerable;
                } : nativePropertyIsEnumerable;


                /***/ }),
            /* 113 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var toIndexedObject = __webpack_require__(32);
                var addToUnscopables = __webpack_require__(100);
                var Iterators = __webpack_require__(26);
                var InternalStateModule = __webpack_require__(31);
                var defineIterator = __webpack_require__(64);

                var ARRAY_ITERATOR = 'Array Iterator';
                var setInternalState = InternalStateModule.set;
                var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.github.io/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.github.io/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.github.io/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.github.io/ecma262/#sec-createarrayiterator
                module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
                    setInternalState(this, {
                        type: ARRAY_ITERATOR,
                        target: toIndexedObject(iterated), // target
                        index: 0,                          // next index
                        kind: kind                         // kind
                    });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%arrayiteratorprototype%.next
                }, function () {
                    var state = getInternalState(this);
                    var target = state.target;
                    var kind = state.kind;
                    var index = state.index++;
                    if (!target || index >= target.length) {
                        state.target = undefined;
                        return { value: undefined, done: true };
                    }
                    if (kind == 'keys') return { value: index, done: false };
                    if (kind == 'values') return { value: target[index], done: false };
                    return { value: [index, target[index]], done: false };
                }, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.github.io/ecma262/#sec-createunmappedargumentsobject
// https://tc39.github.io/ecma262/#sec-createmappedargumentsobject
                Iterators.Arguments = Iterators.Array;

// https://tc39.github.io/ecma262/#sec-array.prototype-@@unscopables
                addToUnscopables('keys');
                addToUnscopables('values');
                addToUnscopables('entries');


                /***/ }),
            /* 114 */
            /***/ (function(module, exports, __webpack_require__) {

                var wellKnownSymbol = __webpack_require__(5);

                var ITERATOR = wellKnownSymbol('iterator');
                var SAFE_CLOSING = false;

                try {
                    var called = 0;
                    var iteratorWithReturn = {
                        next: function () {
                            return { done: !!called++ };
                        },
                        'return': function () {
                            SAFE_CLOSING = true;
                        }
                    };
                    iteratorWithReturn[ITERATOR] = function () {
                        return this;
                    };
                    // eslint-disable-next-line no-throw-literal
                    Array.from(iteratorWithReturn, function () { throw 2; });
                } catch (error) { /* empty */ }

                module.exports = function (exec, SKIP_CLOSING) {
                    if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
                    var ITERATION_SUPPORT = false;
                    try {
                        var object = {};
                        object[ITERATOR] = function () {
                            return {
                                next: function () {
                                    return { done: ITERATION_SUPPORT = true };
                                }
                            };
                        };
                        exec(object);
                    } catch (error) { /* empty */ }
                    return ITERATION_SUPPORT;
                };


                /***/ }),
            /* 115 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var charAt = __webpack_require__(106).charAt;
                var InternalStateModule = __webpack_require__(31);
                var defineIterator = __webpack_require__(64);

                var STRING_ITERATOR = 'String Iterator';
                var setInternalState = InternalStateModule.set;
                var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.github.io/ecma262/#sec-string.prototype-@@iterator
                defineIterator(String, 'String', function (iterated) {
                    setInternalState(this, {
                        type: STRING_ITERATOR,
                        string: String(iterated),
                        index: 0
                    });
// `%StringIteratorPrototype%.next` method
// https://tc39.github.io/ecma262/#sec-%stringiteratorprototype%.next
                }, function next() {
                    var state = getInternalState(this);
                    var string = state.string;
                    var index = state.index;
                    var point;
                    if (index >= string.length) return { value: undefined, done: true };
                    point = charAt(string, index);
                    state.index += point.length;
                    return { value: point, done: false };
                });


                /***/ }),
            /* 116 */
            /***/ (function(module, exports, __webpack_require__) {

                var getBuiltIn = __webpack_require__(20);
                var getOwnPropertyNamesModule = __webpack_require__(103);
                var getOwnPropertySymbolsModule = __webpack_require__(117);
                var anObject = __webpack_require__(8);

// all object keys, includes non-enumerable and symbols
                module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
                    var keys = getOwnPropertyNamesModule.f(anObject(it));
                    var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
                    return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
                };


                /***/ }),
            /* 117 */
            /***/ (function(module, exports) {

                exports.f = Object.getOwnPropertySymbols;


                /***/ }),
            /* 118 */
            /***/ (function(module, exports, __webpack_require__) {

                var fails = __webpack_require__(15);

                module.exports = !fails(function () {
                    function F() { /* empty */ }
                    F.prototype.constructor = null;
                    return Object.getPrototypeOf(new F()) !== F.prototype;
                });


                /***/ }),
            /* 119 */
            /***/ (function(module, exports, __webpack_require__) {

                var DESCRIPTORS = __webpack_require__(19);
                var definePropertyModule = __webpack_require__(24);
                var anObject = __webpack_require__(8);
                var objectKeys = __webpack_require__(110);

// `Object.defineProperties` method
// https://tc39.github.io/ecma262/#sec-object.defineproperties
                module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
                    anObject(O);
                    var keys = objectKeys(Properties);
                    var length = keys.length;
                    var index = 0;
                    var key;
                    while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);
                    return O;
                };


                /***/ }),
            /* 120 */
            /***/ (function(module, exports, __webpack_require__) {

                var wellKnownSymbol = __webpack_require__(5);
                var Iterators = __webpack_require__(26);

                var ITERATOR = wellKnownSymbol('iterator');
                var ArrayPrototype = Array.prototype;

// check on default Array iterator
                module.exports = function (it) {
                    return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
                };


                /***/ }),
            /* 121 */
            /***/ (function(module, exports, __webpack_require__) {

                var redefine = __webpack_require__(21);
                var toString = __webpack_require__(142);

                var ObjectPrototype = Object.prototype;

// `Object.prototype.toString` method
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
                if (toString !== ObjectPrototype.toString) {
                    redefine(ObjectPrototype, 'toString', toString, { unsafe: true });
                }


                /***/ }),
            /* 122 */
            /***/ (function(module, exports, __webpack_require__) {

                var global = __webpack_require__(4);
                var nativeFunctionToString = __webpack_require__(69);

                var WeakMap = global.WeakMap;

                module.exports = typeof WeakMap === 'function' && /native code/.test(nativeFunctionToString.call(WeakMap));


                /***/ }),
            /* 123 */
            /***/ (function(module, exports, __webpack_require__) {

                var fails = __webpack_require__(15);

                module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
                    // Chrome 38 Symbol has incorrect toString conversion
                    // eslint-disable-next-line no-undef
                    return !String(Symbol());
                });


                /***/ }),
            /* 124 */
            /***/ (function(module, exports, __webpack_require__) {

                var has = __webpack_require__(10);
                var ownKeys = __webpack_require__(116);
                var getOwnPropertyDescriptorModule = __webpack_require__(40);
                var definePropertyModule = __webpack_require__(24);

                module.exports = function (target, source) {
                    var keys = ownKeys(source);
                    var defineProperty = definePropertyModule.f;
                    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
                    for (var i = 0; i < keys.length; i++) {
                        var key = keys[i];
                        if (!has(target, key)) defineProperty(target, key, getOwnPropertyDescriptor(source, key));
                    }
                };


                /***/ }),
            /* 125 */
            /***/ (function(module, exports, __webpack_require__) {

                var isObject = __webpack_require__(16);

                module.exports = function (it) {
                    if (!isObject(it) && it !== null) {
                        throw TypeError("Can't set " + String(it) + ' as a prototype');
                    } return it;
                };


                /***/ }),
            /* 126 */
            /***/ (function(module, exports, __webpack_require__) {

                var global = __webpack_require__(4);
                var DOMIterables = __webpack_require__(127);
                var ArrayIteratorMethods = __webpack_require__(113);
                var hide = __webpack_require__(9);
                var wellKnownSymbol = __webpack_require__(5);

                var ITERATOR = wellKnownSymbol('iterator');
                var TO_STRING_TAG = wellKnownSymbol('toStringTag');
                var ArrayValues = ArrayIteratorMethods.values;

                for (var COLLECTION_NAME in DOMIterables) {
                    var Collection = global[COLLECTION_NAME];
                    var CollectionPrototype = Collection && Collection.prototype;
                    if (CollectionPrototype) {
                        // some Chrome versions have non-configurable methods on DOMTokenList
                        if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
                            hide(CollectionPrototype, ITERATOR, ArrayValues);
                        } catch (error) {
                            CollectionPrototype[ITERATOR] = ArrayValues;
                        }
                        if (!CollectionPrototype[TO_STRING_TAG]) hide(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
                        if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
                            // some Chrome versions have non-configurable methods on DOMTokenList
                            if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
                                hide(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
                            } catch (error) {
                                CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
                            }
                        }
                    }
                }


                /***/ }),
            /* 127 */
            /***/ (function(module, exports) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
                module.exports = {
                    CSSRuleList: 0,
                    CSSStyleDeclaration: 0,
                    CSSValueList: 0,
                    ClientRectList: 0,
                    DOMRectList: 0,
                    DOMStringList: 0,
                    DOMTokenList: 1,
                    DataTransferItemList: 0,
                    FileList: 0,
                    HTMLAllCollection: 0,
                    HTMLCollection: 0,
                    HTMLFormElement: 0,
                    HTMLSelectElement: 0,
                    MediaList: 0,
                    MimeTypeArray: 0,
                    NamedNodeMap: 0,
                    NodeList: 1,
                    PaintRequestList: 0,
                    Plugin: 0,
                    PluginArray: 0,
                    SVGLengthList: 0,
                    SVGNumberList: 0,
                    SVGPathSegList: 0,
                    SVGPointList: 0,
                    SVGStringList: 0,
                    SVGTransformList: 0,
                    SourceBufferList: 0,
                    StyleSheetList: 0,
                    TextTrackCueList: 0,
                    TextTrackList: 0,
                    TouchList: 0
                };


                /***/ }),
            /* 128 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var $ = __webpack_require__(14);
                var IS_PURE = __webpack_require__(23);
                var global = __webpack_require__(4);
                var path = __webpack_require__(45);
                var NativePromise = __webpack_require__(73);
                var redefine = __webpack_require__(21);
                var redefineAll = __webpack_require__(104);
                var setToStringTag = __webpack_require__(44);
                var setSpecies = __webpack_require__(105);
                var isObject = __webpack_require__(16);
                var aFunction = __webpack_require__(18);
                var anInstance = __webpack_require__(101);
                var classof = __webpack_require__(25);
                var iterate = __webpack_require__(30);
                var checkCorrectnessOfIteration = __webpack_require__(114);
                var speciesConstructor = __webpack_require__(57);
                var task = __webpack_require__(65).set;
                var microtask = __webpack_require__(130);
                var promiseResolve = __webpack_require__(74);
                var hostReportErrors = __webpack_require__(131);
                var newPromiseCapabilityModule = __webpack_require__(27);
                var perform = __webpack_require__(35);
                var userAgent = __webpack_require__(63);
                var InternalStateModule = __webpack_require__(31);
                var isForced = __webpack_require__(62);
                var wellKnownSymbol = __webpack_require__(5);

                var SPECIES = wellKnownSymbol('species');
                var PROMISE = 'Promise';
                var getInternalState = InternalStateModule.get;
                var setInternalState = InternalStateModule.set;
                var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
                var PromiseConstructor = NativePromise;
                var TypeError = global.TypeError;
                var document = global.document;
                var process = global.process;
                var $fetch = global.fetch;
                var versions = process && process.versions;
                var v8 = versions && versions.v8 || '';
                var newPromiseCapability = newPromiseCapabilityModule.f;
                var newGenericPromiseCapability = newPromiseCapability;
                var IS_NODE = classof(process) == 'process';
                var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
                var UNHANDLED_REJECTION = 'unhandledrejection';
                var REJECTION_HANDLED = 'rejectionhandled';
                var PENDING = 0;
                var FULFILLED = 1;
                var REJECTED = 2;
                var HANDLED = 1;
                var UNHANDLED = 2;
                var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

                var FORCED = isForced(PROMISE, function () {
                    // correct subclassing with @@species support
                    var promise = PromiseConstructor.resolve(1);
                    var empty = function () { /* empty */ };
                    var FakePromise = (promise.constructor = {})[SPECIES] = function (exec) {
                        exec(empty, empty);
                    };
                    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
                    return !((IS_NODE || typeof PromiseRejectionEvent == 'function')
                        && (!IS_PURE || promise['finally'])
                        && promise.then(empty) instanceof FakePromise
                        // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
                        // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
                        // we can't detect it synchronously, so just check versions
                        && v8.indexOf('6.6') !== 0
                        && userAgent.indexOf('Chrome/66') === -1);
                });

                var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
                    PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
                });

// helpers
                var isThenable = function (it) {
                    var then;
                    return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
                };

                var notify = function (promise, state, isReject) {
                    if (state.notified) return;
                    state.notified = true;
                    var chain = state.reactions;
                    microtask(function () {
                        var value = state.value;
                        var ok = state.state == FULFILLED;
                        var index = 0;
                        // variable length - can't use forEach
                        while (chain.length > index) {
                            var reaction = chain[index++];
                            var handler = ok ? reaction.ok : reaction.fail;
                            var resolve = reaction.resolve;
                            var reject = reaction.reject;
                            var domain = reaction.domain;
                            var result, then, exited;
                            try {
                                if (handler) {
                                    if (!ok) {
                                        if (state.rejection === UNHANDLED) onHandleUnhandled(promise, state);
                                        state.rejection = HANDLED;
                                    }
                                    if (handler === true) result = value;
                                    else {
                                        if (domain) domain.enter();
                                        result = handler(value); // can throw
                                        if (domain) {
                                            domain.exit();
                                            exited = true;
                                        }
                                    }
                                    if (result === reaction.promise) {
                                        reject(TypeError('Promise-chain cycle'));
                                    } else if (then = isThenable(result)) {
                                        then.call(result, resolve, reject);
                                    } else resolve(result);
                                } else reject(value);
                            } catch (error) {
                                if (domain && !exited) domain.exit();
                                reject(error);
                            }
                        }
                        state.reactions = [];
                        state.notified = false;
                        if (isReject && !state.rejection) onUnhandled(promise, state);
                    });
                };

                var dispatchEvent = function (name, promise, reason) {
                    var event, handler;
                    if (DISPATCH_EVENT) {
                        event = document.createEvent('Event');
                        event.promise = promise;
                        event.reason = reason;
                        event.initEvent(name, false, true);
                        global.dispatchEvent(event);
                    } else event = { promise: promise, reason: reason };
                    if (handler = global['on' + name]) handler(event);
                    else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
                };

                var onUnhandled = function (promise, state) {
                    task.call(global, function () {
                        var value = state.value;
                        var IS_UNHANDLED = isUnhandled(state);
                        var result;
                        if (IS_UNHANDLED) {
                            result = perform(function () {
                                if (IS_NODE) {
                                    process.emit('unhandledRejection', value, promise);
                                } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
                            });
                            // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
                            state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
                            if (result.error) throw result.value;
                        }
                    });
                };

                var isUnhandled = function (state) {
                    return state.rejection !== HANDLED && !state.parent;
                };

                var onHandleUnhandled = function (promise, state) {
                    task.call(global, function () {
                        if (IS_NODE) {
                            process.emit('rejectionHandled', promise);
                        } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
                    });
                };

                var bind = function (fn, promise, state, unwrap) {
                    return function (value) {
                        fn(promise, state, value, unwrap);
                    };
                };

                var internalReject = function (promise, state, value, unwrap) {
                    if (state.done) return;
                    state.done = true;
                    if (unwrap) state = unwrap;
                    state.value = value;
                    state.state = REJECTED;
                    notify(promise, state, true);
                };

                var internalResolve = function (promise, state, value, unwrap) {
                    if (state.done) return;
                    state.done = true;
                    if (unwrap) state = unwrap;
                    try {
                        if (promise === value) throw TypeError("Promise can't be resolved itself");
                        var then = isThenable(value);
                        if (then) {
                            microtask(function () {
                                var wrapper = { done: false };
                                try {
                                    then.call(value,
                                        bind(internalResolve, promise, wrapper, state),
                                        bind(internalReject, promise, wrapper, state)
                                    );
                                } catch (error) {
                                    internalReject(promise, wrapper, error, state);
                                }
                            });
                        } else {
                            state.value = value;
                            state.state = FULFILLED;
                            notify(promise, state, false);
                        }
                    } catch (error) {
                        internalReject(promise, { done: false }, error, state);
                    }
                };

// constructor polyfill
                if (FORCED) {
                    // 25.4.3.1 Promise(executor)
                    PromiseConstructor = function Promise(executor) {
                        anInstance(this, PromiseConstructor, PROMISE);
                        aFunction(executor);
                        Internal.call(this);
                        var state = getInternalState(this);
                        try {
                            executor(bind(internalResolve, this, state), bind(internalReject, this, state));
                        } catch (error) {
                            internalReject(this, state, error);
                        }
                    };
                    // eslint-disable-next-line no-unused-vars
                    Internal = function Promise(executor) {
                        setInternalState(this, {
                            type: PROMISE,
                            done: false,
                            notified: false,
                            parent: false,
                            reactions: [],
                            rejection: false,
                            state: PENDING,
                            value: undefined
                        });
                    };
                    Internal.prototype = redefineAll(PromiseConstructor.prototype, {
                        // `Promise.prototype.then` method
                        // https://tc39.github.io/ecma262/#sec-promise.prototype.then
                        then: function then(onFulfilled, onRejected) {
                            var state = getInternalPromiseState(this);
                            var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
                            reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
                            reaction.fail = typeof onRejected == 'function' && onRejected;
                            reaction.domain = IS_NODE ? process.domain : undefined;
                            state.parent = true;
                            state.reactions.push(reaction);
                            if (state.state != PENDING) notify(this, state, false);
                            return reaction.promise;
                        },
                        // `Promise.prototype.catch` method
                        // https://tc39.github.io/ecma262/#sec-promise.prototype.catch
                        'catch': function (onRejected) {
                            return this.then(undefined, onRejected);
                        }
                    });
                    OwnPromiseCapability = function () {
                        var promise = new Internal();
                        var state = getInternalState(promise);
                        this.promise = promise;
                        this.resolve = bind(internalResolve, promise, state);
                        this.reject = bind(internalReject, promise, state);
                    };
                    newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
                        return C === PromiseConstructor || C === PromiseWrapper
                            ? new OwnPromiseCapability(C)
                            : newGenericPromiseCapability(C);
                    };

                    if (!IS_PURE && typeof NativePromise == 'function') {
                        nativeThen = NativePromise.prototype.then;

                        // wrap native Promise#then for native async functions
                        redefine(NativePromise.prototype, 'then', function then(onFulfilled, onRejected) {
                            var that = this;
                            return new PromiseConstructor(function (resolve, reject) {
                                nativeThen.call(that, resolve, reject);
                            }).then(onFulfilled, onRejected);
                        });

                        // wrap fetch result
                        if (typeof $fetch == 'function') $({ global: true, enumerable: true, forced: true }, {
                            // eslint-disable-next-line no-unused-vars
                            fetch: function fetch(input) {
                                return promiseResolve(PromiseConstructor, $fetch.apply(global, arguments));
                            }
                        });
                    }
                }

                $({ global: true, wrap: true, forced: FORCED }, {
                    Promise: PromiseConstructor
                });

                setToStringTag(PromiseConstructor, PROMISE, false, true);
                setSpecies(PROMISE);

                PromiseWrapper = path[PROMISE];

// statics
                $({ target: PROMISE, stat: true, forced: FORCED }, {
                    // `Promise.reject` method
                    // https://tc39.github.io/ecma262/#sec-promise.reject
                    reject: function reject(r) {
                        var capability = newPromiseCapability(this);
                        capability.reject.call(undefined, r);
                        return capability.promise;
                    }
                });

                $({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
                    // `Promise.resolve` method
                    // https://tc39.github.io/ecma262/#sec-promise.resolve
                    resolve: function resolve(x) {
                        return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
                    }
                });

                $({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
                    // `Promise.all` method
                    // https://tc39.github.io/ecma262/#sec-promise.all
                    all: function all(iterable) {
                        var C = this;
                        var capability = newPromiseCapability(C);
                        var resolve = capability.resolve;
                        var reject = capability.reject;
                        var result = perform(function () {
                            var $promiseResolve = aFunction(C.resolve);
                            var values = [];
                            var counter = 0;
                            var remaining = 1;
                            iterate(iterable, function (promise) {
                                var index = counter++;
                                var alreadyCalled = false;
                                values.push(undefined);
                                remaining++;
                                $promiseResolve.call(C, promise).then(function (value) {
                                    if (alreadyCalled) return;
                                    alreadyCalled = true;
                                    values[index] = value;
                                    --remaining || resolve(values);
                                }, reject);
                            });
                            --remaining || resolve(values);
                        });
                        if (result.error) reject(result.value);
                        return capability.promise;
                    },
                    // `Promise.race` method
                    // https://tc39.github.io/ecma262/#sec-promise.race
                    race: function race(iterable) {
                        var C = this;
                        var capability = newPromiseCapability(C);
                        var reject = capability.reject;
                        var result = perform(function () {
                            var $promiseResolve = aFunction(C.resolve);
                            iterate(iterable, function (promise) {
                                $promiseResolve.call(C, promise).then(capability.resolve, reject);
                            });
                        });
                        if (result.error) reject(result.value);
                        return capability.promise;
                    }
                });


                /***/ }),
            /* 129 */
            /***/ (function(module, exports, __webpack_require__) {

                var anObject = __webpack_require__(8);

// call something on iterator step with safe closing on error
                module.exports = function (iterator, fn, value, ENTRIES) {
                    try {
                        return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
                        // 7.4.6 IteratorClose(iterator, completion)
                    } catch (error) {
                        var returnMethod = iterator['return'];
                        if (returnMethod !== undefined) anObject(returnMethod.call(iterator));
                        throw error;
                    }
                };


                /***/ }),
            /* 130 */
            /***/ (function(module, exports, __webpack_require__) {

                var global = __webpack_require__(4);
                var getOwnPropertyDescriptor = __webpack_require__(40).f;
                var classof = __webpack_require__(25);
                var macrotask = __webpack_require__(65).set;
                var userAgent = __webpack_require__(63);

                var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
                var process = global.process;
                var Promise = global.Promise;
                var IS_NODE = classof(process) == 'process';
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
                var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
                var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

                var flush, head, last, notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
                if (!queueMicrotask) {
                    flush = function () {
                        var parent, fn;
                        if (IS_NODE && (parent = process.domain)) parent.exit();
                        while (head) {
                            fn = head.fn;
                            head = head.next;
                            try {
                                fn();
                            } catch (error) {
                                if (head) notify();
                                else last = undefined;
                                throw error;
                            }
                        } last = undefined;
                        if (parent) parent.enter();
                    };

                    // Node.js
                    if (IS_NODE) {
                        notify = function () {
                            process.nextTick(flush);
                        };
                        // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
                    } else if (MutationObserver && !/(iphone|ipod|ipad).*applewebkit/i.test(userAgent)) {
                        toggle = true;
                        node = document.createTextNode('');
                        new MutationObserver(flush).observe(node, { characterData: true }); // eslint-disable-line no-new
                        notify = function () {
                            node.data = toggle = !toggle;
                        };
                        // environments with maybe non-completely correct, but existent Promise
                    } else if (Promise && Promise.resolve) {
                        // Promise.resolve without an argument throws an error in LG WebOS 2
                        promise = Promise.resolve(undefined);
                        then = promise.then;
                        notify = function () {
                            then.call(promise, flush);
                        };
                        // for other environments - macrotask based on:
                        // - setImmediate
                        // - MessageChannel
                        // - window.postMessag
                        // - onreadystatechange
                        // - setTimeout
                    } else {
                        notify = function () {
                            // strange IE + webpack dev server bug - use .call(global)
                            macrotask.call(global, flush);
                        };
                    }
                }

                module.exports = queueMicrotask || function (fn) {
                    var task = { fn: fn, next: undefined };
                    if (last) last.next = task;
                    if (!head) {
                        head = task;
                        notify();
                    } last = task;
                };


                /***/ }),
            /* 131 */
            /***/ (function(module, exports, __webpack_require__) {

                var global = __webpack_require__(4);

                module.exports = function (a, b) {
                    var console = global.console;
                    if (console && console.error) {
                        arguments.length === 1 ? console.error(a) : console.error(a, b);
                    }
                };


                /***/ }),
            /* 132 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var $ = __webpack_require__(14);
                var IS_PURE = __webpack_require__(23);
                var NativePromise = __webpack_require__(73);
                var getBuiltIn = __webpack_require__(20);
                var speciesConstructor = __webpack_require__(57);
                var promiseResolve = __webpack_require__(74);
                var redefine = __webpack_require__(21);

// `Promise.prototype.finally` method
// https://tc39.github.io/ecma262/#sec-promise.prototype.finally
                $({ target: 'Promise', proto: true, real: true }, {
                    'finally': function (onFinally) {
                        var C = speciesConstructor(this, getBuiltIn('Promise'));
                        var isFunction = typeof onFinally == 'function';
                        return this.then(
                            isFunction ? function (x) {
                                return promiseResolve(C, onFinally()).then(function () { return x; });
                            } : onFinally,
                            isFunction ? function (e) {
                                return promiseResolve(C, onFinally()).then(function () { throw e; });
                            } : onFinally
                        );
                    }
                });

// patch native Promise.prototype for native async functions
                if (!IS_PURE && typeof NativePromise == 'function' && !NativePromise.prototype['finally']) {
                    redefine(NativePromise.prototype, 'finally', getBuiltIn('Promise').prototype['finally']);
                }


                /***/ }),
            /* 133 */
            /***/ (function(module, exports, __webpack_require__) {

                var $ = __webpack_require__(14);
                var getPrototypeOf = __webpack_require__(41);
                var setPrototypeOf = __webpack_require__(59);
                var create = __webpack_require__(43);
                var createPropertyDescriptor = __webpack_require__(33);
                var iterate = __webpack_require__(30);
                var hide = __webpack_require__(9);

                var $AggregateError = function AggregateError(errors, message) {
                    var that = this;
                    if (!(that instanceof $AggregateError)) return new $AggregateError(errors, message);
                    if (setPrototypeOf) {
                        that = setPrototypeOf(new Error(message), getPrototypeOf(that));
                    }
                    var errorsArray = [];
                    iterate(errors, errorsArray.push, errorsArray);
                    hide(that, 'errors', errorsArray);
                    if (message !== undefined) hide(that, 'message', String(message));
                    return that;
                };

                $AggregateError.prototype = create(Error.prototype, {
                    constructor: createPropertyDescriptor(5, $AggregateError),
                    name: createPropertyDescriptor(5, 'AggregateError')
                });

                $({ global: true }, {
                    AggregateError: $AggregateError
                });


                /***/ }),
            /* 134 */
            /***/ (function(module, exports, __webpack_require__) {

// TODO: Remove from `core-js@4`
                __webpack_require__(66);


                /***/ }),
            /* 135 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var $ = __webpack_require__(14);
                var newPromiseCapabilityModule = __webpack_require__(27);
                var perform = __webpack_require__(35);

// `Promise.try` method
// https://github.com/tc39/proposal-promise-try
                $({ target: 'Promise', stat: true }, {
                    'try': function (callbackfn) {
                        var promiseCapability = newPromiseCapabilityModule.f(this);
                        var result = perform(callbackfn);
                        (result.error ? promiseCapability.reject : promiseCapability.resolve)(result.value);
                        return promiseCapability.promise;
                    }
                });


                /***/ }),
            /* 136 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var $ = __webpack_require__(14);
                var aFunction = __webpack_require__(18);
                var getBuiltIn = __webpack_require__(20);
                var newPromiseCapabilityModule = __webpack_require__(27);
                var perform = __webpack_require__(35);
                var iterate = __webpack_require__(30);

                var PROMISE_ANY_ERROR = 'No one promise resolved';

// `Promise.any` method
// https://github.com/tc39/proposal-promise-any
                $({ target: 'Promise', stat: true }, {
                    any: function any(iterable) {
                        var C = this;
                        var capability = newPromiseCapabilityModule.f(C);
                        var resolve = capability.resolve;
                        var reject = capability.reject;
                        var result = perform(function () {
                            var promiseResolve = aFunction(C.resolve);
                            var errors = [];
                            var counter = 0;
                            var remaining = 1;
                            var alreadyResolved = false;
                            iterate(iterable, function (promise) {
                                var index = counter++;
                                var alreadyRejected = false;
                                errors.push(undefined);
                                remaining++;
                                promiseResolve.call(C, promise).then(function (value) {
                                    if (alreadyRejected || alreadyResolved) return;
                                    alreadyResolved = true;
                                    resolve(value);
                                }, function (e) {
                                    if (alreadyRejected || alreadyResolved) return;
                                    alreadyRejected = true;
                                    errors[index] = e;
                                    --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));
                                });
                            });
                            --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));
                        });
                        if (result.error) reject(result.value);
                        return capability.promise;
                    }
                });


                /***/ }),
            /* 137 */
            /***/ (function(module, exports, __webpack_require__) {

                __webpack_require__(138);
                __webpack_require__(139);
                module.exports = __webpack_require__(143);


                /***/ }),
            /* 138 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* eslint-disable */var prepareUrl=function prepareUrl(url){return url.replace(/(^\w+:|^)\/\//,'//')+'/';};__webpack_require__.p=prepareUrl(window.PAAZL_CHECKOUT_WIDGET_RESOURCE_URL||"https://widget-acc.paazl.com/v1/"||"http://localhost:3000");

                /***/ }),
            /* 139 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                __webpack_require__(140);if(!Element.prototype.scrollIntoViewIfNeeded){Element.prototype.scrollIntoViewIfNeeded=function(centerIfNeeded){"use strict";function makeRange(start,length){return{"start":start,"length":length,"end":start+length};}function coverRange(inner,outer){if(false===centerIfNeeded||outer.start<inner.end&&inner.start<outer.end){return Math.max(inner.end-outer.length,Math.min(outer.start,inner.start));}return(inner.start+inner.end-outer.length)/2;}function makePoint(x,y){return{"x":x,"y":y,"translate":function translate(dX,dY){return makePoint(x+dX,y+dY);}};}function absolute(elem,pt){while(elem){pt=pt.translate(elem.offsetLeft,elem.offsetTop);elem=elem.offsetParent;}return pt;}var target=absolute(this,makePoint(0,0)),extent=makePoint(this.offsetWidth,this.offsetHeight),elem=this.parentNode,origin;while(elem instanceof HTMLElement){// Apply desired scroll amount.
                    origin=absolute(elem,makePoint(elem.clientLeft,elem.clientTop));elem.scrollLeft=coverRange(makeRange(target.x-origin.x,extent.x),makeRange(elem.scrollLeft,elem.clientWidth));elem.scrollTop=coverRange(makeRange(target.y-origin.y,extent.y),makeRange(elem.scrollTop,elem.clientHeight));// Determine actual scroll amount by reading back scroll properties.
                    target=target.translate(-elem.scrollLeft,-elem.scrollTop);elem=elem.parentNode;}};}/* eslint-disable */

                /***/ }),
            /* 140 */
            /***/ (function(module, exports, __webpack_require__) {

                module.exports = __webpack_require__(141);

                __webpack_require__(133);
// TODO: Remove from `core-js@4`
                __webpack_require__(134);
                __webpack_require__(135);
                __webpack_require__(136);


                /***/ }),
            /* 141 */
            /***/ (function(module, exports, __webpack_require__) {

                __webpack_require__(121);
                __webpack_require__(115);
                __webpack_require__(126);
                __webpack_require__(128);
                __webpack_require__(66);
                __webpack_require__(132);
                var path = __webpack_require__(45);

                module.exports = path.Promise;


                /***/ }),
            /* 142 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";

                var classof = __webpack_require__(61);
                var wellKnownSymbol = __webpack_require__(5);

                var TO_STRING_TAG = wellKnownSymbol('toStringTag');
                var test = {};

                test[TO_STRING_TAG] = 'z';

// `Object.prototype.toString` method implementation
// https://tc39.github.io/ecma262/#sec-object.prototype.tostring
                module.exports = String(test) !== '[object z]' ? function toString() {
                    return '[object ' + classof(this) + ']';
                } : test.toString;


                /***/ }),
            /* 143 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.setShipmentParameters=exports.setSortingModel=exports.setInitialPickupLocations=exports.setPickupLocationsPageLimit=exports.setPickupLocationsLimit=exports.setShippingOptionsPage=exports.setShippingOptionsLimit=exports.setDeliveryDateRange=exports.setTags=exports.setNumberOfProcessingDays=exports.setConsignorPostalCode=exports.setConsigneePostalCode=exports.setConsignorCountryCode=exports.setConsigneeCountryCode=exports.setLanguage=exports.updateConfig=exports.interceptUnhandledRejection=exports.init=undefined;var _typeof=typeof Symbol==="function"&&typeof Symbol.iterator==="symbol"?function(obj){return typeof obj;}:function(obj){return obj&&typeof Symbol==="function"&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj;};var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _preact=__webpack_require__(0);var _App=__webpack_require__(144);var _App2=_interopRequireDefault(_App);var _preactI18n=__webpack_require__(82);var _I18nResolver=__webpack_require__(28);var _DateTimeUtils=__webpack_require__(13);var _AppUtils=__webpack_require__(11);var _Logger=__webpack_require__(37);var _NetworkUtils=__webpack_require__(12);var _constants=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var translations=void 0;var configuration=void 0;var init=exports.init=function init(config){(0,_Logger.logSystemInfo)(config);(0,_AppUtils.loadStylesheets)();(0,_DateTimeUtils.setUpDateFormats)(config);if((0,_AppUtils.isInternetExplorer)()){__webpack_require__.e/* import() */(0).then(__webpack_require__.bind(null, 244)).then(function(){_prepareWidget(config);});}else{_prepareWidget(config);}};var _prepareWidget=function _prepareWidget(config,triggerMethod){var apiKey=config.apiKey,language=config.language;if(triggerMethod){(0,_Logger.logApiTriggered)(config,triggerMethod);}(0,_NetworkUtils.doPost)(_constants.BASE_WIDGET_CONFIG_URL,{apiKey:apiKey,locale:(0,_I18nResolver.resolveLocale)(language)}).then(function(res){translations=(0,_I18nResolver.I18nResolver)(config.language||'eng',res.data.widgetTranslations);_render(config);}).catch(function(err){console.error("Could not fetch settings from server",err);translations=(0,_I18nResolver.I18nResolver)(config.language||'eng');_render(config);});};var _render=function _render(config){interceptUnhandledRejection(config);try{var rootElement=document.getElementById(config.mountElementId||'paazl-checkout');(0,_DateTimeUtils.internationalizeDates)(translations);configuration=getCachedConfiguration(config);(0,_preact.render)(h(_preactI18n.IntlProvider,{definition:translations},h(_App2.default,{config:configuration})),rootElement,rootElement.querySelector('#paazl-root'));}catch(error){(0,_Logger.logJsError)(configuration,error.stack);}};var getCachedConfiguration=function getCachedConfiguration(config){var stringConfig=JSON.stringify(config);var fromStorage=localStorage.getItem(_constants.STORAGE_CONFIG_KEY);if(fromStorage===stringConfig){localStorage.setItem(_constants.STORAGE_CONFIG_KEY,stringConfig);return _extends({},config,{previousSelection:{previousTab:localStorage.getItem(_constants.STORAGE_TAB_KEY),previousDeliveryType:localStorage.getItem(_constants.STORAGE_DELIVERY_TYPE_KEY),previousOption:localStorage.getItem(_constants.STORAGE_OPTION_KEY),previousPreferredDate:localStorage.getItem(_constants.STORAGE_PREFERRED_DATE_KEY),previousPickupCode:localStorage.getItem(_constants.STORAGE_PICKUP_CODE_KEY)}});}localStorage.removeItem(_constants.STORAGE_TAB_KEY);localStorage.removeItem(_constants.STORAGE_DELIVERY_TYPE_KEY);localStorage.removeItem(_constants.STORAGE_OPTION_KEY);localStorage.removeItem(_constants.STORAGE_PREFERRED_DATE_KEY);localStorage.removeItem(_constants.STORAGE_PICKUP_CODE_KEY);localStorage.setItem(_constants.STORAGE_CONFIG_KEY,stringConfig);return config;};var interceptUnhandledRejection=exports.interceptUnhandledRejection=function interceptUnhandledRejection(config){var unhandledRejectionListener=function unhandledRejectionListener(promiseRejectionEvent){if(promiseRejectionEvent.reason.stack&&promiseRejectionEvent.reason.stack.indexOf("Request failed")===-1){(0,_Logger.logJsError)(config,promiseRejectionEvent.reason.stack);window.removeEventListener("unhandledrejection",unhandledRejectionListener);}};window.addEventListener("unhandledrejection",unhandledRejectionListener);};var updateConfig=exports.updateConfig=function updateConfig(){var config=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(!configuration){throw"InvalidState - widget is not initialized";}if(!config||(typeof config==='undefined'?'undefined':_typeof(config))!=='object'){throw"Config should be an object";}_prepareWidget(_extends({},configuration,config),"updateConfig");};var setLanguage=exports.setLanguage=function setLanguage(language){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{language:language}),"setLanguage");};var setConsigneeCountryCode=exports.setConsigneeCountryCode=function setConsigneeCountryCode(consigneeCountryCode){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{consigneeCountryCode:consigneeCountryCode}),"setConsigneeCountryCode");};var setConsignorCountryCode=exports.setConsignorCountryCode=function setConsignorCountryCode(consignorCountryCode){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{consignorCountryCode:consignorCountryCode}),"setConsignorCountryCode");};var setConsigneePostalCode=exports.setConsigneePostalCode=function setConsigneePostalCode(consigneePostalCode){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{consigneePostalCode:consigneePostalCode}),"setConsigneePostalCode");};var setConsignorPostalCode=exports.setConsignorPostalCode=function setConsignorPostalCode(consignorPostalCode){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{consignorPostalCode:consignorPostalCode}),"setConsignorPostalCode");};var setNumberOfProcessingDays=exports.setNumberOfProcessingDays=function setNumberOfProcessingDays(numberOfProcessingDays){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{numberOfProcessingDays:numberOfProcessingDays}),"setNumberOfProcessingDays");};var setTags=exports.setTags=function setTags(tags){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{tags:tags}),"setTags");};var setDeliveryDateRange=exports.setDeliveryDateRange=function setDeliveryDateRange(deliveryDateOptions){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{deliveryDateOptions:deliveryDateOptions}),"setDeliveryDateRange");};var setShippingOptionsLimit=exports.setShippingOptionsLimit=function setShippingOptionsLimit(shippingOptionsLimit){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{shippingOptionsLimit:shippingOptionsLimit}),"setShippingOptionsLimit");};var setShippingOptionsPage=exports.setShippingOptionsPage=function setShippingOptionsPage(shippingOptionsPage){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{shippingOptionsPage:shippingOptionsPage}),"setShippingOptionsPage");};var setPickupLocationsLimit=exports.setPickupLocationsLimit=function setPickupLocationsLimit(pickupLocationsLimit){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{pickupLocationsLimit:pickupLocationsLimit}),"setPickupLocationsLimit");};var setPickupLocationsPageLimit=exports.setPickupLocationsPageLimit=function setPickupLocationsPageLimit(pickupLocationsPageLimit){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{pickupLocationsPageLimit:pickupLocationsPageLimit}),"setPickupLocationsPageLimit");};var setInitialPickupLocations=exports.setInitialPickupLocations=function setInitialPickupLocations(initialPickupLocations){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{initialPickupLocations:initialPickupLocations}),"setInitialPickupLocations");};var setSortingModel=exports.setSortingModel=function setSortingModel(sortingModel){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{sortingModel:sortingModel}),"setSortingModel");};var setShipmentParameters=exports.setShipmentParameters=function setShipmentParameters(shipmentParameters){if(!configuration){throw"InvalidState - widget is not initialized";}_prepareWidget(_extends({},configuration,{shipmentParameters:shipmentParameters}),"setShipmentParameters");};
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 144 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _class,_temp,_initialiseProps;var _preact=__webpack_require__(0);__webpack_require__(145);var _ConfigUtils=__webpack_require__(36);var _AppUtils=__webpack_require__(11);var _Logger=__webpack_require__(37);var _Header=__webpack_require__(178);var _Header2=_interopRequireDefault(_Header);var _StyleContainer=__webpack_require__(182);var _StyleContainer2=_interopRequireDefault(_StyleContainer);var _BodyContainer=__webpack_require__(190);var _BodyContainer2=_interopRequireDefault(_BodyContainer);var _cssVarsPonyfill=__webpack_require__(243);var _cssVarsPonyfill2=_interopRequireDefault(_cssVarsPonyfill);var _constants=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var App=(_temp=_class=function(_Component){_inherits(App,_Component);function App(props){_classCallCheck(this,App);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_initialiseProps.call(_this);var config=props.config;var selectedTab=config.defaultTab||(0,_ConfigUtils.getDefaultTab)(config);_this.state={selectedTab:selectedTab,changedManually:false,tabDetails:{},visibleTabs:[],hiddenTabs:[]};return _this;}App.prototype.componentDidMount=function componentDidMount(){var config=this.props.config;(0,_AppUtils.checkBrowser)();(0,_cssVarsPonyfill2.default)();(0,_Logger.logWidgetLoaded)(_extends({},_constants.DEFAULT_CONFIG,config));};App.prototype.render=function render(){var _state=this.state,selectedTab=_state.selectedTab,visibleTabs=_state.visibleTabs,tabDetails=_state.tabDetails;var config=this.props.config;var configuration=_extends({},_constants.DEFAULT_CONFIG,config);var defaultTab=configuration.defaultTab,availableTabs=configuration.availableTabs;var tabs=visibleTabs.length===0?[defaultTab]:availableTabs.filter(function(t){return visibleTabs.includes(t);});return h('div',{id:'paazl-root',className:'paazl-delimiter'},h('section',{className:'paazl method-select'},h(_Header2.default,{availableTabs:tabs,selectedTab:selectedTab,tabDetails:tabDetails,config:configuration,onChangeTab:this.onChangeTab}),h(_BodyContainer2.default,{config:configuration,selectedTab:selectedTab,onTabLoaded:this.onTabLoaded}),h(_StyleContainer2.default,{style:configuration.style})));};return App;}(_preact.Component),_class.defaultProps={config:{}},_initialiseProps=function _initialiseProps(){var _this2=this;this.onChangeTab=function(selectedTab){localStorage.setItem(_constants.STORAGE_TAB_KEY,selectedTab);_this2.setState({selectedTab:selectedTab,changedManually:true});};this.onTabLoaded=function(_ref){var _extends2;var tab=_ref.tab,isEmpty=_ref.isEmpty,price=_ref.price,date=_ref.date;var _state2=_this2.state,visible=_state2.visibleTabs,hidden=_state2.hiddenTabs,tabDetails=_state2.tabDetails,changedManually=_state2.changedManually;var config=_this2.props.config;var configuration=_extends({},_constants.DEFAULT_CONFIG,config);var defaultTab=configuration.defaultTab,availableTabs=configuration.availableTabs,previousSelection=configuration.previousSelection;var visibleTabs=_this2.getVisibleTabs(isEmpty,visible,tab);var hiddenTabs=_this2.getHiddenTabs(isEmpty,hidden,tab);var updates={visibleTabs:visibleTabs,hiddenTabs:hiddenTabs,tabDetails:_extends({},tabDetails,(_extends2={},_extends2[tab]={price:price,date:date},_extends2))};if(!changedManually){if(previousSelection&&previousSelection.previousTab&&previousSelection.previousTab===tab){updates.selectedTab=previousSelection.previousTab;updates.changedManually=true;}else{var isDefaultTabAvailable=visibleTabs.length===0||visibleTabs.includes(defaultTab)&&!hiddenTabs.includes(defaultTab);updates.selectedTab=isDefaultTabAvailable?defaultTab:availableTabs.filter(function(t){return visibleTabs.includes(t);})[0];}}_this2.setState(updates);};this.getVisibleTabs=function(isEmpty,alreadyVisible,tab){if(isEmpty){return[].concat(alreadyVisible).filter(function(t){return t!==tab;});}return[].concat(alreadyVisible,[tab]);};this.getHiddenTabs=function(isEmpty,alreadyHidden,tab){if(isEmpty){return[].concat(alreadyHidden,[tab]);}return[].concat(alreadyHidden).filter(function(t){return t!==tab;});};},_temp);exports.default=App;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 145 */
            /***/ (function(module, exports) {

// removed by extract-text-webpack-plugin

                /***/ }),
            /* 146 */
            /***/ (function(module, exports) {

                module.exports = {
                    "ger": "de-DE",
                    "deu": "de-DE",
                    "de": "de-DE",
                    "eng": "en-GB",
                    "en": "en-GB",
                    "spa": "es-ES",
                    "es": "es-ES",
                    "fre": "fr-FR",
                    "fra": "fr-FR",
                    "fr": "fr-FR",
                    "ita": "it-IT",
                    "it": "it-IT",
                    "jpn": "ja-JP",
                    "ja": "ja-JP",
                    "kor": "ko-KR",
                    "ko": "ko-KR",
                    "dut": "nl-NL",
                    "nld": "nl-NL",
                    "nl": "nl-NL",
                    "pol": "pl-PL",
                    "pl": "pl-PL",
                    "rus": "ru-RU",
                    "ru": "ru-RU",
                    "swe": "sv-FI",
                    "sv": "sv-FI",
                    "chi": "zh-CN",
                    "zho": "zh-CN",
                    "zh": "zh-CN"
                };

                /***/ }),
            /* 147 */
            /***/ (function(module, exports) {

                module.exports = {
                    "common": {
                        "free": "free",
                        "zeroExtra": "{{currencySymbol}} 0,00",
                        "unknown": "Unknown",
                        "meters": "m",
                        "kilometers": "km",
                        "from": "from",
                        "fromValue": "from",
                        "calendar": {
                            "today": "today",
                            "tomorrow": "tomorrow",
                            "dayNamesShort": [
                                "Sun",
                                "Mon",
                                "Tue",
                                "Wed",
                                "Thur",
                                "Fri",
                                "Sat"
                            ],
                            "dayNames": [
                                "Sunday",
                                "Monday",
                                "Tuesday",
                                "Wednesday",
                                "Thursday",
                                "Friday",
                                "Saturday"
                            ],
                            "monthNamesShort": [
                                "Jan",
                                "Feb",
                                "Mar",
                                "Apr",
                                "May",
                                "Jun",
                                "Jul",
                                "Aug",
                                "Sep",
                                "Oct",
                                "Nov",
                                "Dec"
                            ],
                            "monthNames": [
                                "January",
                                "February",
                                "March",
                                "April",
                                "May",
                                "June",
                                "July",
                                "August",
                                "September",
                                "October",
                                "November",
                                "December"
                            ],
                            "amPm": [
                                "am",
                                "pm"
                            ],
                            "days": "days"
                        },
                        "estimates": {
                            "onDate": "<strong class=\"footer__message--strong\">{{day}}</strong>",
                            "onDateBeforeTime": "<strong class=\"footer__message--strong\">{{day}}</strong> before <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "onDateAfterTime": "<strong class=\"footer__message--strong\">{{day}}</strong> after <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "onDateBetweenTime": "<strong class=\"footer__message--strong\">{{day}}</strong> between <strong class=\"footer__message--strong\">{{startTime}} and {{endTime}}</strong>",
                            "betweenDates": "between <strong class=\"footer__message--strong\">{{earliestDate}} and {{latestDate}}</strong>",
                            "betweenDateBeforeTime": "between <strong class=\"footer__message--strong\">{{earliestDate}} and {{latestDate}}</strong> before <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "betweenDatesAfterTime": "between <strong class=\"footer__message--strong\">{{earliestDate}} and {{latestDate}}</strong> after <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "betweenDatesBetweenTime": "between <strong class=\"footer__message--strong\">{{earliestDate}} and {{latestDate}}</strong> between <strong class=\"footer__message--strong\">{{startTime}} and {{endTime}}</strong>",
                            "withinBusinessDays": "within <strong class=\"footer__message--strong\">{{min}} to {{max}} business days</strong>",
                            "withinBusinessDaysBeforeTime": "within <strong class=\"footer__message--strong\">{{min}} to {{max}} business days</strong> before <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "withinBusinessDaysAfterTime": "within <strong class=\"footer__message--strong\">{{min}} to {{max}} business days</strong> after <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "withinBusinessDaysBetweenTime": "within <strong class=\"footer__message--strong\">{{min}} to {{max}} business days</strong> between <strong class=\"footer__message--strong\">{{startTime}} and {{endTime}}</strong>"
                        }
                    },
                    "tabs": {
                        "DELIVERY": "Delivery",
                        "STORE": "Store",
                        "PICKUP": "Pickup",
                        "estimatedDate": "Estimated date",
                        "exactDate": "Exact date"
                    },
                    "shippingOptions": {
                        "title": "When do you want it delivered?",
                        "optionsNotFound": "No delivery options have been found for your country and postal code combination",
                        "deliveryBusinessDays": "From {{min}} to {{max}} business days",
                        "packageWillBeDelivered": "Your package will be delivered to your home"
                    },
                    "pickupLocations": {
                        "pickUpHere": "Pick up here",
                        "openingHours": "Opening hours",
                        "viewOnMap": "View on map",
                        "alwaysAvailable": "Always open",
                        "closed": "Closed",
                        "available": "Available",
                        "search": "Search",
                        "loadMore": "Load more",
                        "carrier": {
                            "title": "Choose a pickup location",
                            "itemsNotFound": "No pickup locations have been found for your country and postal code combination",
                            "selectDifferent": "Select a different pickup location",
                            "packageWillBeReady": "Your package will be ready for pickup"
                        },
                        "store": {
                            "title": "Choose a store",
                            "itemsNotFound": "No stores have been found for your country and postal code combination",
                            "selectDifferent": "Select a different store",
                            "packageWillBeReady": "Your package will be ready at the store"
                        }
                    },
                    "customerNumber": {
                        "title": "Enter your customer number",
                        "required": "required",
                        "description": "A customer number is required in order to pick up your package at a DHL Packstation©",
                        "invalidCustomerNumber": "Invalid customer number. Please try again."
                    }
                };

                /***/ }),
            /* 148 */
            /***/ (function(module, exports) {

                module.exports = {
                    "common": {
                        "free": "gratis",
                        "zeroExtra": "{{currencySymbol}} 0,00",
                        "unknown": "onbekend",
                        "meters": "m",
                        "kilometers": "km",
                        "from": "vanaf",
                        "fromValue": "vanaf",
                        "calendar": {
                            "today": "vandaag",
                            "tomorrow": "morgen",
                            "dayNamesShort": [
                                "zo",
                                "ma",
                                "di",
                                "wo",
                                "do",
                                "vr",
                                "za"
                            ],
                            "dayNames": [
                                "zondag",
                                "maandag",
                                "dinsdag",
                                "woensdag",
                                "donderdag",
                                "vrijdag",
                                "zaterdag"
                            ],
                            "monthNamesShort": [
                                "jan",
                                "feb",
                                "mrt",
                                "apr",
                                "mei",
                                "jun",
                                "jul",
                                "aug",
                                "sep",
                                "okt",
                                "nov",
                                "dec"
                            ],
                            "monthNames": [
                                "januari",
                                "februari",
                                "maart",
                                "april",
                                "mei",
                                "juni",
                                "juli",
                                "augustus",
                                "september",
                                "oktober",
                                "november",
                                "december"
                            ],
                            "amPm": [
                                "ochtend",
                                "avond"
                            ],
                            "days": "dagen"
                        },
                        "estimates": {
                            "onDate": "<strong class=\"footer__message--strong\">{{day}}</strong>",
                            "onDateBeforeTime": "op <strong class=\"footer__message--strong\">{{day}}</strong> voor <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "onDateAfterTime": "op <strong class=\"footer__message--strong\">{{day}}</strong> na <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "onDateBetweenTime": "op <strong class=\"footer__message--strong\">{{day}}</strong> tussen <strong class=\"footer__message--strong\">{{startTime}} en {{endTime}}</strong>",
                            "betweenDates": "tussen <strong class=\"footer__message--strong\">{{earliestDate}} en {{latestDate}}</strong>",
                            "betweenDateBeforeTime": "tussen <strong class=\"footer__message--strong\">{{earliestDate}} en {{latestDate}}</strong> voor <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "betweenDatesAfterTime": "tussen <strong class=\"footer__message--strong\">{{earliestDate}} en {{latestDate}}</strong> na <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "betweenDatesBetweenTime": "tussen <strong class=\"footer__message--strong\">{{earliestDate}} en {{latestDate}}</strong> tussen <strong class=\"footer__message--strong\">{{startTime}} en {{endTime}}</strong>",
                            "withinBusinessDays": "binnen <strong class=\"footer__message--strong\">{{min}} tot {{max}} werkdagen</strong>",
                            "withinBusinessDaysBeforeTime": "binnen <strong class=\"footer__message--strong\">{{min}} tot {{max}} werkdagen</strong> voor <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "withinBusinessDaysAfterTime": "binnen <strong class=\"footer__message--strong\">{{min}} tot {{max}} werkdagen</strong> na <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "withinBusinessDaysBetweenTime": "binnen <strong class=\"footer__message--strong\">{{min}} tot {{max}} werkdagen</strong> tussen <strong class=\"footer__message--strong\">{{startTime}} en {{endTime}}</strong>"
                        }
                    },
                    "tabs": {
                        "DELIVERY": "Bezorging",
                        "STORE": "Winkel",
                        "PICKUP": "Ophalen",
                        "estimatedDate": "Geschatte datum",
                        "exactDate": "Exacte datum"
                    },
                    "shippingOptions": {
                        "title": "Wanneer wil je het bezorgd krijgen?",
                        "optionsNotFound": "Er zijn geen bezorgopties gevonden voor jouw land- en postcodecombinatie",
                        "deliveryBusinessDays": "Tussen {{min}} en {{max}} werkdagen",
                        "packageWillBeDelivered": "Je pakket wordt bij je thuis bezorgd"
                    },
                    "pickupLocations": {
                        "pickUpHere": "Hier ophalen",
                        "openingHours": "Openingstijden",
                        "viewOnMap": "Weergeven op kaart",
                        "alwaysAvailable": "Altijd open",
                        "closed": "Gesloten",
                        "available": "Beschikbaar",
                        "search": "Zoeken",
                        "loadMore": "Meer laden",
                        "carrier": {
                            "title": "Kies een ophaalpunt",
                            "itemsNotFound": "Er zijn geen ophaalpunten gevonden voor jouw land- en postcodecombinatie",
                            "selectDifferent": "Kies een ander ophaalpunt",
                            "packageWillBeReady": "Je pakket kan worden opgehaald"
                        },
                        "store": {
                            "title": "Kies een winkel",
                            "itemsNotFound": "Er zijn geen winkels gevonden voor jouw land- en postcodecombinatie",
                            "selectDifferent": "Kies een andere winkel",
                            "packageWillBeReady": "Je pakket ligt klaar in de winkel"
                        }
                    },
                    "customerNumber": {
                        "title": "Voer je klantnummer in",
                        "required": "vereist",
                        "description": "Je hebt je klantnummer nodig om je pakket bij een DHL Packstation© op te halen",
                        "invalidCustomerNumber": "Ongeldig klantnummer. Probeer het opnieuw."
                    }
                };

                /***/ }),
            /* 149 */
            /***/ (function(module, exports) {

                module.exports = {
                    "common": {
                        "free": "kostenlos",
                        "zeroExtra": "0,00 {{currencySymbol}}",
                        "unknown": "Unbekannt",
                        "meters": "m",
                        "kilometers": "km",
                        "from": "ab",
                        "fromValue": "ab",
                        "calendar": {
                            "today": "heute",
                            "tomorrow": "morgen",
                            "dayNamesShort": [
                                "So",
                                "Mo",
                                "Di",
                                "Mi",
                                "Do",
                                "Fr",
                                "Sa"
                            ],
                            "dayNames": [
                                "Sonntag",
                                "Montag",
                                "Dienstag",
                                "Mittwoch",
                                "Donnerstag",
                                "Freitag",
                                "Samstag"
                            ],
                            "monthNamesShort": [
                                "Jan",
                                "Feb",
                                "Mar",
                                "Apr",
                                "Mai",
                                "Jun",
                                "Jul",
                                "Aug",
                                "Sep",
                                "Okt",
                                "Nov",
                                "Dez"
                            ],
                            "monthNames": [
                                "Januar",
                                "Februar",
                                "März",
                                "April",
                                "Mai",
                                "Juni",
                                "Juli",
                                "August",
                                "September",
                                "Oktober",
                                "November",
                                "Dezember"
                            ],
                            "amPm": [
                                "Vormittag",
                                "Nachmittag"
                            ],
                            "days": "Tage"
                        },
                        "estimates": {
                            "onDate": "<strong class=\"footer__message--strong\">{{day}}</strong>",
                            "onDateBeforeTime": "am <strong class=\"footer__message--strong\">{{day}}</strong> vor <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "onDateAfterTime": "am <strong class=\"footer__message--strong\">{{day}}</strong> ab <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "onDateBetweenTime": "am <strong class=\"footer__message--strong\">{{day}}</strong> zwischen <strong class=\"footer__message--strong\">{{startTime}} und {{endTime}}</strong>",
                            "betweenDates": "zwischen <strong class=\"footer__message--strong\">{{earliestDate}} und {{latestDate}}</strong>",
                            "betweenDateBeforeTime": "zwischen <strong class=\"footer__message--strong\">{{earliestDate}} und {{latestDate}}</strong> vor <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "betweenDatesAfterTime": "zwischen <strong class=\"footer__message--strong\">{{earliestDate}} und {{latestDate}}</strong> ab <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "betweenDatesBetweenTime": "zwischen <strong class=\"footer__message--strong\">{{earliestDate}} und {{latestDate}}</strong> von <strong class=\"footer__message--strong\">{{startTime}} bis {{endTime}}</strong>",
                            "withinBusinessDays": "innerhalb von <strong class=\"footer__message--strong\">{{min}} bis {{max}} Werktagen</strong>",
                            "withinBusinessDaysBeforeTime": "innerhalb von <strong class=\"footer__message--strong\">{{min}} bis {{max}} Werktagen</strong> vor <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "withinBusinessDaysAfterTime": "innerhalb von <strong class=\"footer__message--strong\">{{min}} bis {{max}} Werktagen</strong> ab <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "withinBusinessDaysBetweenTime": "innerhalb von <strong class=\"footer__message--strong\">{{min}} bis {{max}} Werktagen</strong> zwischen <strong class=\"footer__message--strong\">{{startTime}} und {{endTime}}</strong>"
                        }
                    },
                    "tabs": {
                        "DELIVERY": "Lieferung",
                        "STORE": "Store",
                        "PICKUP": "Abholung",
                        "estimatedDate": "Geschätztes Datum",
                        "exactDate": "Genaues Datum"
                    },
                    "shippingOptions": {
                        "title": "Wann soll die Lieferung erfolgen?",
                        "optionsNotFound": "Es wurden keine Versandoptionen für dein Land und deine Postleitzahl gefunden",
                        "deliveryBusinessDays": "Zwischen {{min}} und {{max}} Werktagen",
                        "packageWillBeDelivered": "Dein Paket wird zu dir nach Hause geliefert"
                    },
                    "pickupLocations": {
                        "pickUpHere": "Hier abholen",
                        "openingHours": "Öffnungszeiten",
                        "viewOnMap": "Auf der Karte anzeigen",
                        "alwaysAvailable": "Immer offen",
                        "closed": "Geschlossen",
                        "available": "Verfügbar",
                        "search": "Suchen",
                        "loadMore": "Weitere laden",
                        "carrier": {
                            "title": "Wähle einen Abholort aus",
                            "itemsNotFound": "Es wurden keine Abholorte für dein Land und deine Postleitzahl gefunden",
                            "selectDifferent": "Wähle einen anderen Abholort",
                            "packageWillBeReady": "Dein Paket ist abholbereit"
                        },
                        "store": {
                            "title": "Wähle einen Store",
                            "itemsNotFound": "Es wurden keine Stores für dein Land und deine Postleitzahl gefunden",
                            "selectDifferent": "Wähle einen anderen Store",
                            "packageWillBeReady": "Dein Paket ist im Store abholbereit"
                        }
                    },
                    "customerNumber": {
                        "title": "Gib deine Kundennummer ein",
                        "required": "erforderlich",
                        "description": "Du brauchst eine Kundennummer, um dein Paket an einer DHL Packstation© abholen zu können",
                        "invalidCustomerNumber": "Ungültige Kundennummer. Versuche es bitte noch einmal."
                    }
                };

                /***/ }),
            /* 150 */
            /***/ (function(module, exports) {

                module.exports = {
                    "common": {
                        "free": "bezpłatnie",
                        "zeroExtra": "{{currencySymbol}} 0,00",
                        "unknown": "Brak danych",
                        "meters": "m",
                        "kilometers": "km",
                        "from": "od",
                        "fromValue": "od",
                        "calendar": {
                            "today": "dziś",
                            "tomorrow": "jutro",
                            "dayNamesShort": [
                                "niedz.",
                                "pon.",
                                "wt.",
                                "śr.",
                                "czw.",
                                "pt.",
                                "sob."
                            ],
                            "dayNames": [
                                "niedziela",
                                "poniedziałek",
                                "wtorek",
                                "środa",
                                "czwartek",
                                "piątek",
                                "sobota"
                            ],
                            "monthNamesShort": [
                                "STY",
                                "LUT",
                                "MAR",
                                "KWI",
                                "MAJ",
                                "CZE",
                                "LIP",
                                "SIE",
                                "WRZ",
                                "PAŹ",
                                "LIS",
                                "GRU"
                            ],
                            "monthNames": [
                                "styczeń",
                                "luty",
                                "marzec",
                                "kwiecień",
                                "maj",
                                "czerwiec",
                                "lipiec",
                                "sierpień",
                                "wrzesień",
                                "październik",
                                "listopad",
                                "grudzień"
                            ],
                            "amPm": [
                                "przed południem",
                                "po południu"
                            ],
                            "days": "dni"
                        },
                        "estimates": {
                            "onDate": "<strong class=\"footer__message--strong\">{{day}}</strong>",
                            "onDateBeforeTime": "<strong class=\"footer__message--strong\">{{day}}</strong> przed <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "onDateAfterTime": "<strong class=\"footer__message--strong\">{{day}}</strong> po <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "onDateBetweenTime": "<strong class=\"footer__message--strong\">{{day}}</strong> pomiędzy <strong class=\"footer__message--strong\">{{startTime}} a {{endTime}}</strong>",
                            "betweenDates": "pomiędzy <strong class=\"footer__message--strong\">{{earliestDate}} a {{latestDate}}</strong>",
                            "betweenDateBeforeTime": "pomiędzy <strong class=\"footer__message--strong\">{{earliestDate}} a {{latestDate}}</strong> przed <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "betweenDatesAfterTime": "pomiędzy <strong class=\"footer__message--strong\">{{earliestDate}} a {{latestDate}}</strong> po <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "betweenDatesBetweenTime": "pomiędzy <strong class=\"footer__message--strong\">{{earliestDate}} a {{latestDate}}</strong> pomiędzy <strong class=\"footer__message--strong\">{{startTime}} a {{endTime}}</strong>",
                            "withinBusinessDays": "od <strong class=\"footer__message--strong\">{{min}} do {{max}} dni roboczych</strong>",
                            "withinBusinessDaysBeforeTime": "w przeciągu od <strong class=\"footer__message--strong\">{{min}} do {{max}} dni roboczych</strong> przed <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "withinBusinessDaysAfterTime": "w przeciągu od <strong class=\"footer__message--strong\">{{min}} do {{max}} dni roboczych</strong> po <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "withinBusinessDaysBetweenTime": "w przeciągu od <strong class=\"footer__message--strong\">{{min}} do {{max}} dni roboczych</strong> pomiędzy <strong class=\"footer__message--strong\">{{startTime}} a {{endTime}}</strong>"
                        }
                    },
                    "tabs": {
                        "DELIVERY": "Dostawa",
                        "STORE": "Sklep",
                        "PICKUP": "Odbiór",
                        "estimatedDate": "Przewidywana data",
                        "exactDate": "Dokładna data"
                    },
                    "shippingOptions": {
                        "title": "W jakim terminie chcesz otrzymać przesyłkę?",
                        "optionsNotFound": "Nie znaleziono opcji dostawy dla wprowadzonego kraju i kodu pocztowego",
                        "deliveryBusinessDays": "Od {{min}} do {{max}} dni roboczych",
                        "packageWillBeDelivered": "Dzień dostawy Twojej paczki do domu to:"
                    },
                    "pickupLocations": {
                        "pickUpHere": "Odbierz stąd",
                        "openingHours": "Godziny otwarcia",
                        "viewOnMap": "Wyświetl na mapie",
                        "alwaysAvailable": "Zawsze otwarte",
                        "closed": "Zamknięte",
                        "available": "Dostępne",
                        "search": "Wyszukaj",
                        "loadMore": "Wczytaj więcej",
                        "carrier": {
                            "title": "Wybierz miejsce odbioru",
                            "itemsNotFound": "Nie znaleziono żadnego miejsca odbioru dla wprowadzonego kraju i kodu pocztowego",
                            "selectDifferent": "Wybierz inne miejsce odbioru",
                            "packageWillBeReady": "Paczka będzie gotowa do odbioru"
                        },
                        "store": {
                            "title": "Wybierz sklep",
                            "itemsNotFound": "Nie znaleziono sklepów dla wprowadzonego kraju i kodu pocztowego",
                            "selectDifferent": "Wybierz inny sklep",
                            "packageWillBeReady": "Paczka będzie gotowa w sklepie"
                        }
                    },
                    "customerNumber": {
                        "title": "Wpisz swój numer klienta",
                        "required": "wymagane",
                        "description": "Numer klienta jest wymagany do odbioru paczki w DHL Packstation©",
                        "invalidCustomerNumber": "Nieprawidłowy numer klienta. Spróbuj ponownie."
                    }
                };

                /***/ }),
            /* 151 */
            /***/ (function(module, exports) {

                module.exports = {
                    "common": {
                        "free": "Free",
                        "zeroExtra": "{{currencySymbol}} 0,00",
                        "unknown": "Unknown",
                        "meters": "m",
                        "kilometers": "km",
                        "from": "from",
                        "calendar": {
                            "today": "Сегодня",
                            "tomorrow": "Завтра",
                            "dayNamesShort": [
                                "Вс",
                                "Пн",
                                "Вт",
                                "Ср",
                                "Чт",
                                "Пт",
                                "Сб"
                            ],
                            "dayNames": [
                                "Воскресенье",
                                "Понедельник",
                                "Вторник",
                                "Среда",
                                "Четверг",
                                "Пятница",
                                "Суббота"
                            ],
                            "dayNamesExactDayContext": [
                                "в Воскресенье",
                                "в Понедельник",
                                "во Вторник",
                                "в Среду",
                                "в Четверг",
                                "в Пятницу",
                                "в Субботу"
                            ],
                            "dayNamesFromDayContext": [
                                "Воскресенья",
                                "Понедельника",
                                "Вторника",
                                "Среды",
                                "Четверга",
                                "Пятницы",
                                "Субботы"
                            ],
                            "dayNamesToDayContext": [
                                "Воскресенье",
                                "Понедельник",
                                "Вторник",
                                "Среду",
                                "Четверг",
                                "Пятницу",
                                "Субботу"
                            ],
                            "monthNamesShort": [
                                "Янв",
                                "Фев",
                                "Марта",
                                "Апр",
                                "Мая",
                                "Июня",
                                "Июля",
                                "Авг",
                                "Сен",
                                "Окт",
                                "Нояб",
                                "Дек"
                            ],
                            "monthNames": [
                                "Января",
                                "Февраля",
                                "Марта",
                                "Апреля",
                                "Мая",
                                "Июня",
                                "Июля",
                                "Августа",
                                "Сентября",
                                "Октября",
                                "Ноября",
                                "Декабря"
                            ],
                            "amPm": [
                                "am",
                                "pm"
                            ],
                            "days": "дней"
                        },
                        "estimates": {
                            "onDate": "<strong class='footer__message--strong'>{{day}}</strong>",
                            "onDateBeforeTime": "<strong class='footer__message--strong'>{{day}}</strong> before <strong class='footer__message--strong'>{{endTime}}</strong>.",
                            "onDateAfterTime": "<strong class='footer__message--strong'>{{day}}</strong> after <strong class='footer__message--strong'>{{startTime}}</strong>",
                            "onDateBetweenTime": "<strong class='footer__message--strong'>{{day}}</strong> between <strong class='footer__message--strong'>{{startTime}} and {{endTime}}</strong>",
                            "betweenDates": "between <strong class='footer__message--strong'>{{earliestDate}} and {{latestDate}}</strong>",
                            "betweenDateBeforeTime": "between <strong class='footer__message--strong'>{{earliestDate}} and {{latestDate}}</strong> before <strong class='footer__message--strong'>{{endTime}}</strong>.",
                            "betweenDatesAfterTime": "between <strong class='footer__message--strong'>{{earliestDate}} and {{latestDate}}</strong> after <strong class='footer__message--strong'>{{startTime}}</strong>",
                            "betweenDatesBetweenTime": "between <strong class='footer__message--strong'>{{earliestDate}} and {{latestDate}}</strong> between <strong class='footer__message--strong'>{{startTime}} and {{endTime}}</strong>",
                            "withinBusinessDays": "within <strong class='footer__message--strong'>{{min}} to {{max}} business days</strong>",
                            "withinBusinessDaysBeforeTime": "within <strong class='footer__message--strong'>{{min}} to {{max}} business days</strong> before <strong class='footer__message--strong'>{{endTime}}</strong>.",
                            "withinBusinessDaysAfterTime": "within <strong class='footer__message--strong'>{{min}} to {{max}} business days</strong> after <strong class='footer__message--strong'>{{startTime}}</strong>",
                            "withinBusinessDaysBetweenTime": "within <strong class='footer__message--strong'>{{min}} to {{max}} business days</strong> between <strong class='footer__message--strong'>{{startTime}} and {{endTime}}</strong>"
                        }
                    },
                    "tabs": {
                        "DELIVERY": "Delivery",
                        "STORE": "Store",
                        "PICKUP": "Pickup",
                        "estimatedDate": "Estimated date",
                        "exactDate": "Exact date"
                    },
                    "shippingOptions": {
                        "title": "When do you want it delivered?",
                        "optionsNotFound": "No delivery options have been found for your country and postal code combination",
                        "deliveryBusinessDays": "From {{min}} to {{max}} business days",
                        "packageWillBeDelivered": "Your package will be delivered to your home"
                    },
                    "pickupLocations": {
                        "pickUpHere": "Pick up here",
                        "openingHours": "Opening hours",
                        "viewOnMap": "View on map",
                        "alwaysAvailable": "Always open",
                        "closed": "Closed",
                        "available": "Available",
                        "search": "Search",
                        "loadMore": "Load more",
                        "carrier": {
                            "title": "Choose a pickup location",
                            "itemsNotFound": "No pickup locations have been found for your country and postal code combination",
                            "selectDifferent": "Select a different pickup location",
                            "packageWillBeReady": "Your package will be ready for pickup"
                        },
                        "store": {
                            "title": "Choose a store",
                            "itemsNotFound": "No stores have been found for your country and postal code combination",
                            "selectDifferent": "Select a different store",
                            "packageWillBeReady": "Your package will be ready at store"
                        }
                    },
                    "customerNumber": {
                        "title": "Enter your customer number",
                        "required": "required",
                        "description": "A customer number is required in order to pick up at a DHL Packstation©.",
                        "invalidCustomerNumber": "Invalid customer number. Please try again."
                    }
                };

                /***/ }),
            /* 152 */
            /***/ (function(module, exports) {

                module.exports = {
                    "common": {
                        "free": "免费",
                        "zeroExtra": "{{currencySymbol}} 0.00",
                        "unknown": "未知",
                        "meters": "米",
                        "kilometers": "公里",
                        "from": "自",
                        "fromValue": "起价于",
                        "calendar": {
                            "today": "今天",
                            "tomorrow": "明天",
                            "dayNamesShort": [
                                "周日",
                                "周一",
                                "周二",
                                "周三",
                                "周四",
                                "周五",
                                "周六"
                            ],
                            "dayNames": [
                                "星期日",
                                "星期一",
                                "星期二",
                                "星期三",
                                "星期四",
                                "星期五",
                                "星期六"
                            ],
                            "monthNamesShort": [
                                "1 月",
                                "2 月",
                                "3 月",
                                "4 月",
                                "5 月",
                                "6 月",
                                "7 月",
                                "8 月",
                                "9 月",
                                "10 月",
                                "11 月",
                                "12 月"
                            ],
                            "monthNames": [
                                "一月",
                                "二月",
                                "三月",
                                "四月",
                                "五月",
                                "六月",
                                "七月",
                                "八月",
                                "九月",
                                "十月",
                                "十一月",
                                "十二月"
                            ],
                            "amPm": [
                                "上午",
                                "下午"
                            ],
                            "days": "日"
                        },
                        "estimates": {
                            "onDate": "<strong class=\"footer__message--strong\">{{day}}</strong>",
                            "onDateBeforeTime": "<strong class=\"footer__message--strong\">{{day}}</strong> 的 <strong class=\"footer__message--strong\">{{endTime}}</strong> 之前。",
                            "onDateAfterTime": "<strong class=\"footer__message--strong\">{{day}}</strong> 的 <strong class=\"footer__message--strong\">{{startTime}}</strong> 之后",
                            "onDateBetweenTime": "<strong class=\"footer__message--strong\">{{day}}</strong>，在 <strong class=\"footer__message--strong\">{{startTime}} — {{endTime}}</strong> 之间",
                            "betweenDates": "在 <strong class=\"footer__message--strong\">{{earliestDate}} — {{latestDate}}</strong> 之间",
                            "betweenDateBeforeTime": "在 <strong class=\"footer__message--strong\">{{earliestDate}} — {{latestDate}}</strong> 的 <strong class=\"footer__message--strong\">{{endTime}}</strong> 之前。",
                            "betweenDatesAfterTime": "在 <strong class=\"footer__message--strong\">{{earliestDate}} — {{latestDate}}</strong> 的 <strong class=\"footer__message--strong\">{{startTime}}</strong> 之后。",
                            "betweenDatesBetweenTime": "在 <strong class=\"footer__message--strong\">{{earliestDate}} — {{latestDate}}</strong> 的 <strong class=\"footer__message--strong\">{{startTime}} — {{endTime}}</strong> 之间",
                            "withinBusinessDays": "在 <strong class=\"footer__message--strong\">{{min}} — {{max}} 个工作日</strong>之内",
                            "withinBusinessDaysBeforeTime": "在 <strong class=\"footer__message--strong\">{{min}} — {{max}} 个工作日</strong> 之内的 <strong class=\"footer__message--strong\">{{endTime}}</strong> 之前。",
                            "withinBusinessDaysAfterTime": "在 <strong class=\"footer__message--strong\">{{min}} — {{max}} 个工作日</strong> 之内的 <strong class=\"footer__message--strong\">{{startTime}}</strong> 之后",
                            "withinBusinessDaysBetweenTime": "在 <strong class=\"footer__message--strong\">{{min}} — {{max}} 个工作日</strong> 之内的 <strong class=\"footer__message--strong\">{{startTime}} — {{endTime}}</strong> 之间"
                        }
                    },
                    "tabs": {
                        "DELIVERY": "送货",
                        "STORE": "店铺",
                        "PICKUP": "取货",
                        "estimatedDate": "预计日期",
                        "exactDate": "确切日期"
                    },
                    "shippingOptions": {
                        "title": "您想要我们何时送货？",
                        "optionsNotFound": "未找到您所在国家/地区和邮政编码组合下的送货方式",
                        "deliveryBusinessDays": "{{min}} — {{max}} 个工作日",
                        "packageWillBeDelivered": "您的包裹将快递到您家"
                    },
                    "pickupLocations": {
                        "pickUpHere": "在此处取货",
                        "openingHours": "营业时间",
                        "viewOnMap": "在地图上查看",
                        "alwaysAvailable": "全天营业",
                        "closed": "不营业",
                        "available": "有货",
                        "search": "搜索",
                        "loadMore": "加载更多",
                        "carrier": {
                            "title": "选择取货地点",
                            "itemsNotFound": "未找到您所在国家/地区和邮政编码组合下的取货地点",
                            "selectDifferent": "选择另一个取货地点",
                            "packageWillBeReady": "您的包裹将供您取货"
                        },
                        "store": {
                            "title": "选择一个店铺",
                            "itemsNotFound": "未找到您所在国家/地区和邮政编码组合下的店铺",
                            "selectDifferent": "选择另一个店铺",
                            "packageWillBeReady": "您的包裹将在该店铺供您取货"
                        }
                    },
                    "customerNumber": {
                        "title": "输入您的顾客号码",
                        "required": "必填",
                        "description": "顾客号码是必填的，以便在 DHL Packstation© 领取您的包裹",
                        "invalidCustomerNumber": "顾客号码无效。请重试。"
                    }
                };

                /***/ }),
            /* 153 */
            /***/ (function(module, exports) {

                module.exports = {
                    "common": {
                        "free": "gratuit",
                        "zeroExtra": "0,00 {{currencySymbol}}",
                        "unknown": "Inconnu",
                        "meters": "m",
                        "kilometers": "km",
                        "from": "à partir du",
                        "fromValue": "à partir de",
                        "calendar": {
                            "today": "aujourd'hui",
                            "tomorrow": "demain",
                            "dayNamesShort": [
                                "di",
                                "lu",
                                "ma",
                                "me",
                                "je",
                                "ve",
                                "sa"
                            ],
                            "dayNames": [
                                "dimanche",
                                "lundi",
                                "mardi",
                                "mercredi",
                                "jeudi",
                                "vendredi",
                                "samedi"
                            ],
                            "monthNamesShort": [
                                "jan",
                                "fév",
                                "mar",
                                "avr",
                                "mai",
                                "jui",
                                "juil",
                                "aoû",
                                "sep",
                                "oct",
                                "nov",
                                "déc"
                            ],
                            "monthNames": [
                                "janvier",
                                "février",
                                "mars",
                                "avril",
                                "mai",
                                "juin",
                                "juillet",
                                "août",
                                "septembre",
                                "octobre",
                                "novembre",
                                "décembre"
                            ],
                            "amPm": [
                                "am",
                                "pm"
                            ],
                            "days": "jours"
                        },
                        "estimates": {
                            "onDate": "<strong class=\"footer__message--strong\">{{day}}</strong>",
                            "onDateBeforeTime": "<strong class=\"footer__message--strong\">{{day}}</strong> avant <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "onDateAfterTime": "<strong class=\"footer__message--strong\">{{day}}</strong> après <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "onDateBetweenTime": "<strong class=\"footer__message--strong\">{{day}}</strong> entre <strong class=\"footer__message--strong\">{{startTime}} et {{endTime}}</strong>",
                            "betweenDates": "entre le <strong class=\"footer__message--strong\">{{earliestDate}} et le {{latestDate}}</strong>",
                            "betweenDateBeforeTime": "entre le <strong class=\"footer__message--strong\">{{earliestDate}} et le {{latestDate}}</strong> avant <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "betweenDatesAfterTime": "entre le <strong class=\"footer__message--strong\">{{earliestDate}} et le {{latestDate}}</strong> après <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "betweenDatesBetweenTime": "entre le <strong class=\"footer__message--strong\">{{earliestDate}} et le {{latestDate}}</strong> entre <strong class=\"footer__message--strong\">{{startTime}} et {{endTime}}</strong>",
                            "withinBusinessDays": "de <strong class=\"footer__message--strong\">{{min}} à {{max}} jours ouvrés</strong>",
                            "withinBusinessDaysBeforeTime": "de <strong class=\"footer__message--strong\">{{min}} à {{max}} jours ouvrés</strong> avant <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "withinBusinessDaysAfterTime": "de <strong class=\"footer__message--strong\">{{min}} à {{max}} jours ouvrés</strong> après <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "withinBusinessDaysBetweenTime": "de <strong class=\"footer__message--strong\">{{min}} à {{max}} jours ouvrés</strong> entre <strong class=\"footer__message--strong\">{{startTime}} et {{endTime}}</strong>"
                        }
                    },
                    "tabs": {
                        "DELIVERY": "Livraison",
                        "STORE": "Magasin",
                        "PICKUP": "Collecte",
                        "estimatedDate": "Date estimée",
                        "exactDate": "Date exacte"
                    },
                    "shippingOptions": {
                        "title": "Quand souhaitez-vous que la livraison ait lieu ?",
                        "optionsNotFound": "Aucune option de livraison n'a été trouvée pour la combinaison de votre pays et de votre code postal",
                        "deliveryBusinessDays": "De {{min}} à {{max}} jours ouvrés",
                        "packageWillBeDelivered": "Votre colis sera livré chez vous"
                    },
                    "pickupLocations": {
                        "pickUpHere": "Collecte ici",
                        "openingHours": "Horaires d'ouverture",
                        "viewOnMap": "Voir sur la carte",
                        "alwaysAvailable": "Toujours ouvert",
                        "closed": "Fermé",
                        "available": "Disponible le",
                        "search": "Recherche",
                        "loadMore": "Charger plus",
                        "carrier": {
                            "title": "Choisissez un site de collecte",
                            "itemsNotFound": "Aucun site de collecte n'a été trouvé pour la combinaison de votre pays et de votre code postal",
                            "selectDifferent": "Sélectionnez un autre site de collecte",
                            "packageWillBeReady": "Votre colis sera prêt à être collecté le"
                        },
                        "store": {
                            "title": "Choisissez un magasin",
                            "itemsNotFound": "Aucun magasin n'a été trouvé pour la combinaison de votre pays et de code postal",
                            "selectDifferent": "Sélectionnez un autre magasin",
                            "packageWillBeReady": "Votre colis sera prêt au magasin"
                        }
                    },
                    "customerNumber": {
                        "title": "Saisissez votre numéro de client",
                        "required": "obligatoire",
                        "description": "Un numéro de client est nécessaire afin de collecter votre colis dans une DHL Packstation©",
                        "invalidCustomerNumber": "Ce numéro de client n'est pas valide. Veuillez réessayer."
                    }
                };

                /***/ }),
            /* 154 */
            /***/ (function(module, exports) {

                module.exports = {
                    "common": {
                        "free": "gratuito",
                        "zeroExtra": "{{currencySymbol}} 0,00",
                        "unknown": "Sconosciuto",
                        "meters": "m",
                        "kilometers": "km",
                        "from": "a partire da",
                        "fromValue": "a partire da",
                        "calendar": {
                            "today": "oggi",
                            "tomorrow": "domani",
                            "dayNamesShort": [
                                "dom",
                                "lun",
                                "mar",
                                "mer",
                                "gio",
                                "ven",
                                "sab"
                            ],
                            "dayNames": [
                                "domenica",
                                "lunedì",
                                "martedì",
                                "mercoledì",
                                "giovedì",
                                "venerdì",
                                "sabato"
                            ],
                            "monthNamesShort": [
                                "gen",
                                "feb",
                                "mar",
                                "apr",
                                "mag",
                                "giu",
                                "lug",
                                "ago",
                                "set",
                                "ott",
                                "nov",
                                "dic"
                            ],
                            "monthNames": [
                                "gennaio",
                                "febbraio",
                                "marzo",
                                "aprile",
                                "maggio",
                                "giugno",
                                "luglio",
                                "agosto",
                                "settembre",
                                "ottobre",
                                "novembre",
                                "dicembre"
                            ],
                            "amPm": [
                                "am",
                                "pm"
                            ],
                            "days": "giorni"
                        },
                        "estimates": {
                            "onDate": "<strong class=\"footer__message--strong\">{{day}}</strong>",
                            "onDateBeforeTime": "<strong class=\"footer__message--strong\">{{day}}</strong> prima delle <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "onDateAfterTime": "<strong class=\"footer__message--strong\">{{day}}</strong> dopo le <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "onDateBetweenTime": "<strong class=\"footer__message--strong\">{{day}}</strong> tra le <strong class=\"footer__message--strong\">{{startTime}} e le {{endTime}}</strong>",
                            "betweenDates": "tra il <strong class=\"footer__message--strong\">{{earliestDate}} e il {{latestDate}}</strong>",
                            "betweenDateBeforeTime": "tra il <strong class=\"footer__message--strong\">{{earliestDate}} e il {{latestDate}}</strong> prima delle <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "betweenDatesAfterTime": "tra il <strong class=\"footer__message--strong\">{{earliestDate}} e il {{latestDate}}</strong> dopo le <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "betweenDatesBetweenTime": "tra il <strong class=\"footer__message--strong\">{{earliestDate}} e il {{latestDate}}</strong> tra le <strong class=\"footer__message--strong\">{{startTime}} e le {{endTime}}</strong>",
                            "withinBusinessDays": "entro <strong class=\"footer__message--strong\">{{min}} - {{max}} giorni lavorativi</strong>",
                            "withinBusinessDaysBeforeTime": "entro <strong class=\"footer__message--strong\">{{min}} - {{max}} giorni lavorativi</strong> prima delle <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "withinBusinessDaysAfterTime": "entro <strong class=\"footer__message--strong\">{{min}} - {{max}} giorni lavorativi</strong> dopo le <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "withinBusinessDaysBetweenTime": "entro <strong class=\"footer__message--strong\">{{min}} - {{max}} giorni lavorativi</strong> tra le <strong class=\"footer__message--strong\">{{startTime}} e le {{endTime}}</strong>"
                        }
                    },
                    "tabs": {
                        "DELIVERY": "Consegna",
                        "STORE": "Negozio",
                        "PICKUP": "Ritiro",
                        "estimatedDate": "Data prevista",
                        "exactDate": "Data esatta"
                    },
                    "shippingOptions": {
                        "title": "Quando vuoi riceverlo?",
                        "optionsNotFound": "Non sono state trovate opzioni di consegna per la combinazione paese e codice postale che hai fornito",
                        "deliveryBusinessDays": "Da {{min}} a {{max}} giorni lavorativi",
                        "packageWillBeDelivered": "Il pacco ti verrà consegnato a casa"
                    },
                    "pickupLocations": {
                        "pickUpHere": "Ritiralo qui",
                        "openingHours": "Orari di apertura",
                        "viewOnMap": "Visualizza su mappa",
                        "alwaysAvailable": "Sempre aperto",
                        "closed": "Chiuso",
                        "available": "Disponibile",
                        "search": "Cerca",
                        "loadMore": "Carica altri risultati",
                        "carrier": {
                            "title": "Scegli un punto di ritiro",
                            "itemsNotFound": "Non sono stati trovati punti di ritiro per la combinazione paese e codice postale che hai fornito",
                            "selectDifferent": "Seleziona un punto di ritiro diverso",
                            "packageWillBeReady": "Il tuo pacco sarà pronto per il ritiro"
                        },
                        "store": {
                            "title": "Scegli un negozio",
                            "itemsNotFound": "Non sono stati trovati negozi per la combinazione paese e codice postale che hai fornito",
                            "selectDifferent": "Seleziona un negozio diverso",
                            "packageWillBeReady": "Il tuo pacco sarà pronto presso il negozio"
                        }
                    },
                    "customerNumber": {
                        "title": "Inserisci il tuo codice cliente",
                        "required": "campo obbligatorio",
                        "description": "Per ritirare il pacco presso una DHL Packstation© è necessario un codice cliente.",
                        "invalidCustomerNumber": "Codice cliente non valido Riprova."
                    }
                };

                /***/ }),
            /* 155 */
            /***/ (function(module, exports) {

                module.exports = {
                    "common": {
                        "free": "無料",
                        "zeroExtra": "{{currencySymbol}} 0",
                        "unknown": "不明",
                        "meters": "m",
                        "kilometers": "km",
                        "from": "開始日時",
                        "fromValue": "最低料金",
                        "calendar": {
                            "today": "今日",
                            "tomorrow": "明日",
                            "dayNamesShort": [
                                "(日)",
                                "(月)",
                                "(火)",
                                "(水)",
                                "(木)",
                                "(金)",
                                "(土)"
                            ],
                            "dayNames": [
                                "日曜日",
                                "月曜日",
                                "火曜日",
                                "水曜日",
                                "木曜日",
                                "金曜日",
                                "土曜日"
                            ],
                            "monthNamesShort": [
                                "1",
                                "2",
                                "3",
                                "4",
                                "5",
                                "6",
                                "7",
                                "8",
                                "9",
                                "10",
                                "11",
                                "12"
                            ],
                            "monthNames": [
                                "1 月",
                                "2 月",
                                "3 月",
                                "4 月",
                                "5 月",
                                "6 月",
                                "7 月",
                                "8 月",
                                "9 月",
                                "10 月",
                                "11 月",
                                "12 月"
                            ],
                            "amPm": [
                                "(午前)",
                                "(午後)"
                            ],
                            "days": "日数"
                        },
                        "estimates": {
                            "onDate": "<strong class=\"footer__message--strong\">{{day}}</strong>",
                            "onDateBeforeTime": "<strong class=\"footer__message--strong\">{{day}}</strong> の <strong class=\"footer__message--strong\">{{endTime}}</strong> まで。",
                            "onDateAfterTime": "<strong class=\"footer__message--strong\">{{day}}</strong> の <strong class=\"footer__message--strong\">{{startTime}}</strong> 以降",
                            "onDateBetweenTime": "<strong class=\"footer__message--strong\">{{day}}</strong> の <strong class=\"footer__message--strong\">{{startTime}} ～ {{endTime}}</strong>",
                            "betweenDates": "<strong class=\"footer__message--strong\">{{earliestDate}} ～ {{latestDate}}</strong>",
                            "betweenDateBeforeTime": "<strong class=\"footer__message--strong\">{{earliestDate}} ～ {{latestDate}}</strong> の <strong class=\"footer__message--strong\">{{endTime}}</strong> まで。",
                            "betweenDatesAfterTime": "<strong class=\"footer__message--strong\">{{earliestDate}} ～ {{latestDate}}</strong> の <strong class=\"footer__message--strong\">{{startTime}}</strong> 以降",
                            "betweenDatesBetweenTime": "<strong class=\"footer__message--strong\">{{earliestDate}} ～ {{latestDate}}</strong> の <strong class=\"footer__message--strong\">{{startTime}} ～ {{endTime}}</strong>",
                            "withinBusinessDays": "<strong class=\"footer__message--strong\">{{min}} ～ {{max}} 営業日</strong>以内",
                            "withinBusinessDaysBeforeTime": "<strong class=\"footer__message--strong\">{{min}} ～ {{max}} 営業日</strong>以内、<strong class=\"footer__message--strong\">{{endTime}}</strong> まで。",
                            "withinBusinessDaysAfterTime": "<strong class=\"footer__message--strong\">{{min}} ～ {{max}} 営業日</strong>以内、<strong class=\"footer__message--strong\">{{startTime}}</strong> 以降",
                            "withinBusinessDaysBetweenTime": "<strong class=\"footer__message--strong\">{{min}} ～ {{max}} 営業日</strong>以内、<strong class=\"footer__message--strong\">{{startTime}} ～ {{endTime}}</strong>"
                        }
                    },
                    "tabs": {
                        "DELIVERY": "配送",
                        "STORE": "店舗",
                        "PICKUP": "受け取り",
                        "estimatedDate": "概算日",
                        "exactDate": "指定日"
                    },
                    "shippingOptions": {
                        "title": "いつの配送をご希望ですか?",
                        "optionsNotFound": "お客様の国と郵便番号の組み合わせに該当する配送オプションが見つかりません",
                        "deliveryBusinessDays": "{{min}} ～ {{max}} 営業日",
                        "packageWillBeDelivered": "パッケージはご自宅に配送されます"
                    },
                    "pickupLocations": {
                        "pickUpHere": "ここで受け取る",
                        "openingHours": "オープン時間",
                        "viewOnMap": "地図で見る",
                        "alwaysAvailable": "常時オープン",
                        "closed": "クローズ",
                        "available": "お受け取り可能",
                        "search": "検索",
                        "loadMore": "さらに読み込む",
                        "carrier": {
                            "title": "受け取り場所を選択",
                            "itemsNotFound": "お客様の国と郵便番号の組み合わせに該当する受け取り場所が見つかりません",
                            "selectDifferent": "別の受け取り場所を選択",
                            "packageWillBeReady": "パッケージはお受け取り可能"
                        },
                        "store": {
                            "title": "店舗を選択",
                            "itemsNotFound": "お客様の国と郵便番号の組み合わせに該当する店舗が見つかりません",
                            "selectDifferent": "別の店舗を選択",
                            "packageWillBeReady": "パッケージは店舗でお受け取り可能"
                        }
                    },
                    "customerNumber": {
                        "title": "会員番号を入力",
                        "required": "必須",
                        "description": "パッケージを DHL Packstation© で受け取るには会員番号が必須です",
                        "invalidCustomerNumber": "無効な会員番号。もう一度やり直してください。"
                    }
                };

                /***/ }),
            /* 156 */
            /***/ (function(module, exports) {

                module.exports = {
                    "common": {
                        "free": "gratis",
                        "zeroExtra": "0,00 {{currencySymbol}}",
                        "unknown": "Desconocido",
                        "meters": "m",
                        "kilometers": "km",
                        "from": "desde el",
                        "fromValue": "desde",
                        "calendar": {
                            "today": "hoy",
                            "tomorrow": "mañana",
                            "dayNamesShort": [
                                "Dom",
                                "Lun",
                                "Mar",
                                "Mié",
                                "Jue",
                                "Vie",
                                "Sáb"
                            ],
                            "dayNames": [
                                "domingo",
                                "lunes",
                                "martes",
                                "miércoles",
                                "jueves",
                                "viernes",
                                "sábado"
                            ],
                            "monthNamesShort": [
                                "Ene",
                                "Feb",
                                "Mzo",
                                "Abr",
                                "May",
                                "Jun",
                                "Jul",
                                "Ago",
                                "Sep",
                                "Oct",
                                "Nov",
                                "Dic"
                            ],
                            "monthNames": [
                                "enero",
                                "febrero",
                                "marzo",
                                "abril",
                                "mayo",
                                "junio",
                                "julio",
                                "agosto",
                                "septiembre",
                                "octubre",
                                "noviembre",
                                "diciembre"
                            ],
                            "amPm": [
                                "a. m.",
                                "p. m."
                            ],
                            "days": "días"
                        },
                        "estimates": {
                            "onDate": "<strong class=\"footer__message--strong\">{{day}}</strong>",
                            "onDateBeforeTime": "el <strong class=\"footer__message--strong\">{{day}}</strong> antes de las <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "onDateAfterTime": "el <strong class=\"footer__message--strong\">{{day}}</strong> después de las <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "onDateBetweenTime": "el <strong class=\"footer__message--strong\">{{day}}</strong> entre las <strong class=\"footer__message--strong\">{{startTime}} y las {{endTime}}</strong>",
                            "betweenDates": "entre el <strong class=\"footer__message--strong\">{{earliestDate}} y el {{latestDate}}</strong>",
                            "betweenDateBeforeTime": "entre el <strong class=\"footer__message--strong\">{{earliestDate}} y el {{latestDate}}</strong> antes de las <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "betweenDatesAfterTime": "entre el <strong class=\"footer__message--strong\">{{earliestDate}} y el {{latestDate}}</strong> después de las <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "betweenDatesBetweenTime": "entre el <strong class=\"footer__message--strong\">{{earliestDate}} y el {{latestDate}}</strong> entre las <strong class=\"footer__message--strong\">{{startTime}} y las {{endTime}}</strong>",
                            "withinBusinessDays": "de <strong class=\"footer__message--strong\">{{min}} a {{max}} días laborables</strong>",
                            "withinBusinessDaysBeforeTime": "de <strong class=\"footer__message--strong\">{{min}} a {{max}} días laborables</strong> antes de las <strong class=\"footer__message--strong\">{{endTime}}</strong>.",
                            "withinBusinessDaysAfterTime": "de <strong class=\"footer__message--strong\">{{min}} a {{max}} días laborables</strong> después de las <strong class=\"footer__message--strong\">{{startTime}}</strong>",
                            "withinBusinessDaysBetweenTime": "de <strong class=\"footer__message--strong\">{{min}} a {{max}} días laborables</strong> entre las <strong class=\"footer__message--strong\">{{startTime}} y las {{endTime}}</strong>"
                        }
                    },
                    "tabs": {
                        "DELIVERY": "Entrega",
                        "STORE": "Tienda",
                        "PICKUP": "Recogida",
                        "estimatedDate": "Fecha aproximada",
                        "exactDate": "Fecha exacta"
                    },
                    "shippingOptions": {
                        "title": "¿Cuándo quieres recibirlo?",
                        "optionsNotFound": "No se encontraron opciones de entrega en la combinación de país y código postal que has introducido",
                        "deliveryBusinessDays": "De {{min}} a {{max}} días laborables",
                        "packageWillBeDelivered": "El paquete llegará a tu casa"
                    },
                    "pickupLocations": {
                        "pickUpHere": "Recoger aquí",
                        "openingHours": "Horario de apertura",
                        "viewOnMap": "Ver en el mapa",
                        "alwaysAvailable": "Siempre abierto",
                        "closed": "Cerrado",
                        "available": "Disponible",
                        "search": "Buscar",
                        "loadMore": "Cargar más",
                        "carrier": {
                            "title": "Selecciona una ubicación de recogida",
                            "itemsNotFound": "No se encontraron ubicaciones de recogida en la combinación de país y código postal que has introducido",
                            "selectDifferent": "Selecciona otra ubicación de recogida",
                            "packageWillBeReady": "Podrás recoger el paquete"
                        },
                        "store": {
                            "title": "Elige una tienda",
                            "itemsNotFound": "No se encontraron tiendas en la combinación de país y código postal que has introducido",
                            "selectDifferent": "Selecciona otra tienda",
                            "packageWillBeReady": "Podrás recoger el paquete en la tienda"
                        }
                    },
                    "customerNumber": {
                        "title": "Introduce tu número de cliente",
                        "required": "obligatorio",
                        "description": "Necesitarás un número de cliente para poder recoger tu paquete en un Locker de DHL",
                        "invalidCustomerNumber": "Número de cliente no válido. Inténtalo de nuevo."
                    }
                };

                /***/ }),
            /* 157 */
            /***/ (function(module, exports, __webpack_require__) {

                module.exports = __webpack_require__(158);

                /***/ }),
            /* 158 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var utils = __webpack_require__(7);
                var bind = __webpack_require__(76);
                var Axios = __webpack_require__(160);
                var defaults = __webpack_require__(51);

                /**
                 * Create an instance of Axios
                 *
                 * @param {Object} defaultConfig The default config for the instance
                 * @return {Axios} A new instance of Axios
                 */
                function createInstance(defaultConfig) {
                    var context = new Axios(defaultConfig);
                    var instance = bind(Axios.prototype.request, context);

                    // Copy axios.prototype to instance
                    utils.extend(instance, Axios.prototype, context);

                    // Copy context to instance
                    utils.extend(instance, context);

                    return instance;
                }

// Create the default instance to be exported
                var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
                axios.Axios = Axios;

// Factory for creating new instances
                axios.create = function create(instanceConfig) {
                    return createInstance(utils.merge(defaults, instanceConfig));
                };

// Expose Cancel & CancelToken
                axios.Cancel = __webpack_require__(81);
                axios.CancelToken = __webpack_require__(174);
                axios.isCancel = __webpack_require__(80);

// Expose all/spread
                axios.all = function all(promises) {
                    return Promise.all(promises);
                };
                axios.spread = __webpack_require__(175);

                module.exports = axios;

// Allow use of default import syntax in TypeScript
                module.exports.default = axios;


                /***/ }),
            /* 159 */
            /***/ (function(module, exports) {

                /*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
                module.exports = function (obj) {
                    return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
                }

                function isBuffer (obj) {
                    return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
                }

// For Node v0.10 support. Remove this eventually.
                function isSlowBuffer (obj) {
                    return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
                }


                /***/ }),
            /* 160 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var defaults = __webpack_require__(51);
                var utils = __webpack_require__(7);
                var InterceptorManager = __webpack_require__(169);
                var dispatchRequest = __webpack_require__(170);

                /**
                 * Create a new instance of Axios
                 *
                 * @param {Object} instanceConfig The default config for the instance
                 */
                function Axios(instanceConfig) {
                    this.defaults = instanceConfig;
                    this.interceptors = {
                        request: new InterceptorManager(),
                        response: new InterceptorManager()
                    };
                }

                /**
                 * Dispatch a request
                 *
                 * @param {Object} config The config specific for this request (merged with this.defaults)
                 */
                Axios.prototype.request = function request(config) {
                    /*eslint no-param-reassign:0*/
                    // Allow for axios('example/url'[, config]) a la fetch API
                    if (typeof config === 'string') {
                        config = utils.merge({
                            url: arguments[0]
                        }, arguments[1]);
                    }

                    config = utils.merge(defaults, {method: 'get'}, this.defaults, config);
                    config.method = config.method.toLowerCase();

                    // Hook up interceptors middleware
                    var chain = [dispatchRequest, undefined];
                    var promise = Promise.resolve(config);

                    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
                        chain.unshift(interceptor.fulfilled, interceptor.rejected);
                    });

                    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
                        chain.push(interceptor.fulfilled, interceptor.rejected);
                    });

                    while (chain.length) {
                        promise = promise.then(chain.shift(), chain.shift());
                    }

                    return promise;
                };

// Provide aliases for supported request methods
                utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
                    /*eslint func-names:0*/
                    Axios.prototype[method] = function(url, config) {
                        return this.request(utils.merge(config || {}, {
                            method: method,
                            url: url
                        }));
                    };
                });

                utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
                    /*eslint func-names:0*/
                    Axios.prototype[method] = function(url, data, config) {
                        return this.request(utils.merge(config || {}, {
                            method: method,
                            url: url,
                            data: data
                        }));
                    };
                });

                module.exports = Axios;


                /***/ }),
            /* 161 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var utils = __webpack_require__(7);

                module.exports = function normalizeHeaderName(headers, normalizedName) {
                    utils.forEach(headers, function processHeader(value, name) {
                        if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
                            headers[normalizedName] = value;
                            delete headers[name];
                        }
                    });
                };


                /***/ }),
            /* 162 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var createError = __webpack_require__(79);

                /**
                 * Resolve or reject a Promise based on response status.
                 *
                 * @param {Function} resolve A function that resolves the promise.
                 * @param {Function} reject A function that rejects the promise.
                 * @param {object} response The response.
                 */
                module.exports = function settle(resolve, reject, response) {
                    var validateStatus = response.config.validateStatus;
                    // Note: status is not exposed by XDomainRequest
                    if (!response.status || !validateStatus || validateStatus(response.status)) {
                        resolve(response);
                    } else {
                        reject(createError(
                            'Request failed with status code ' + response.status,
                            response.config,
                            null,
                            response.request,
                            response
                        ));
                    }
                };


                /***/ }),
            /* 163 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                /**
                 * Update an Error with the specified config, error code, and response.
                 *
                 * @param {Error} error The error to update.
                 * @param {Object} config The config.
                 * @param {string} [code] The error code (for example, 'ECONNABORTED').
                 * @param {Object} [request] The request.
                 * @param {Object} [response] The response.
                 * @returns {Error} The error.
                 */
                module.exports = function enhanceError(error, config, code, request, response) {
                    error.config = config;
                    if (code) {
                        error.code = code;
                    }
                    error.request = request;
                    error.response = response;
                    return error;
                };


                /***/ }),
            /* 164 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var utils = __webpack_require__(7);

                function encode(val) {
                    return encodeURIComponent(val).
                    replace(/%40/gi, '@').
                    replace(/%3A/gi, ':').
                    replace(/%24/g, '$').
                    replace(/%2C/gi, ',').
                    replace(/%20/g, '+').
                    replace(/%5B/gi, '[').
                    replace(/%5D/gi, ']');
                }

                /**
                 * Build a URL by appending params to the end
                 *
                 * @param {string} url The base of the url (e.g., http://www.google.com)
                 * @param {object} [params] The params to be appended
                 * @returns {string} The formatted url
                 */
                module.exports = function buildURL(url, params, paramsSerializer) {
                    /*eslint no-param-reassign:0*/
                    if (!params) {
                        return url;
                    }

                    var serializedParams;
                    if (paramsSerializer) {
                        serializedParams = paramsSerializer(params);
                    } else if (utils.isURLSearchParams(params)) {
                        serializedParams = params.toString();
                    } else {
                        var parts = [];

                        utils.forEach(params, function serialize(val, key) {
                            if (val === null || typeof val === 'undefined') {
                                return;
                            }

                            if (utils.isArray(val)) {
                                key = key + '[]';
                            } else {
                                val = [val];
                            }

                            utils.forEach(val, function parseValue(v) {
                                if (utils.isDate(v)) {
                                    v = v.toISOString();
                                } else if (utils.isObject(v)) {
                                    v = JSON.stringify(v);
                                }
                                parts.push(encode(key) + '=' + encode(v));
                            });
                        });

                        serializedParams = parts.join('&');
                    }

                    if (serializedParams) {
                        url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
                    }

                    return url;
                };


                /***/ }),
            /* 165 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var utils = __webpack_require__(7);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
                var ignoreDuplicateOf = [
                    'age', 'authorization', 'content-length', 'content-type', 'etag',
                    'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
                    'last-modified', 'location', 'max-forwards', 'proxy-authorization',
                    'referer', 'retry-after', 'user-agent'
                ];

                /**
                 * Parse headers into an object
                 *
                 * ```
                 * Date: Wed, 27 Aug 2014 08:58:49 GMT
                 * Content-Type: application/json
                 * Connection: keep-alive
                 * Transfer-Encoding: chunked
                 * ```
                 *
                 * @param {String} headers Headers needing to be parsed
                 * @returns {Object} Headers parsed into an object
                 */
                module.exports = function parseHeaders(headers) {
                    var parsed = {};
                    var key;
                    var val;
                    var i;

                    if (!headers) { return parsed; }

                    utils.forEach(headers.split('\n'), function parser(line) {
                        i = line.indexOf(':');
                        key = utils.trim(line.substr(0, i)).toLowerCase();
                        val = utils.trim(line.substr(i + 1));

                        if (key) {
                            if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
                                return;
                            }
                            if (key === 'set-cookie') {
                                parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
                            } else {
                                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
                            }
                        }
                    });

                    return parsed;
                };


                /***/ }),
            /* 166 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var utils = __webpack_require__(7);

                module.exports = (
                    utils.isStandardBrowserEnv() ?

                        // Standard browser envs have full support of the APIs needed to test
                        // whether the request URL is of the same origin as current location.
                        (function standardBrowserEnv() {
                            var msie = /(msie|trident)/i.test(navigator.userAgent);
                            var urlParsingNode = document.createElement('a');
                            var originURL;

                            /**
                             * Parse a URL to discover it's components
                             *
                             * @param {String} url The URL to be parsed
                             * @returns {Object}
                             */
                            function resolveURL(url) {
                                var href = url;

                                if (msie) {
                                    // IE needs attribute set twice to normalize properties
                                    urlParsingNode.setAttribute('href', href);
                                    href = urlParsingNode.href;
                                }

                                urlParsingNode.setAttribute('href', href);

                                // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
                                return {
                                    href: urlParsingNode.href,
                                    protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
                                    host: urlParsingNode.host,
                                    search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
                                    hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
                                    hostname: urlParsingNode.hostname,
                                    port: urlParsingNode.port,
                                    pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                                        urlParsingNode.pathname :
                                        '/' + urlParsingNode.pathname
                                };
                            }

                            originURL = resolveURL(window.location.href);

                            /**
                             * Determine if a URL shares the same origin as the current location
                             *
                             * @param {String} requestURL The URL to test
                             * @returns {boolean} True if URL shares the same origin, otherwise false
                             */
                            return function isURLSameOrigin(requestURL) {
                                var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
                                return (parsed.protocol === originURL.protocol &&
                                    parsed.host === originURL.host);
                            };
                        })() :

                        // Non standard browser envs (web workers, react-native) lack needed support.
                        (function nonStandardBrowserEnv() {
                            return function isURLSameOrigin() {
                                return true;
                            };
                        })()
                );


                /***/ }),
            /* 167 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

                var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

                function E() {
                    this.message = 'String contains an invalid character';
                }
                E.prototype = new Error;
                E.prototype.code = 5;
                E.prototype.name = 'InvalidCharacterError';

                function btoa(input) {
                    var str = String(input);
                    var output = '';
                    for (
                        // initialize result and counter
                        var block, charCode, idx = 0, map = chars;
                        // if the next str index does not exist:
                        //   change the mapping table to "="
                        //   check if d has no fractional digits
                        str.charAt(idx | 0) || (map = '=', idx % 1);
                        // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
                        output += map.charAt(63 & block >> 8 - idx % 1 * 8)
                    ) {
                        charCode = str.charCodeAt(idx += 3 / 4);
                        if (charCode > 0xFF) {
                            throw new E();
                        }
                        block = block << 8 | charCode;
                    }
                    return output;
                }

                module.exports = btoa;


                /***/ }),
            /* 168 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var utils = __webpack_require__(7);

                module.exports = (
                    utils.isStandardBrowserEnv() ?

                        // Standard browser envs support document.cookie
                        (function standardBrowserEnv() {
                            return {
                                write: function write(name, value, expires, path, domain, secure) {
                                    var cookie = [];
                                    cookie.push(name + '=' + encodeURIComponent(value));

                                    if (utils.isNumber(expires)) {
                                        cookie.push('expires=' + new Date(expires).toGMTString());
                                    }

                                    if (utils.isString(path)) {
                                        cookie.push('path=' + path);
                                    }

                                    if (utils.isString(domain)) {
                                        cookie.push('domain=' + domain);
                                    }

                                    if (secure === true) {
                                        cookie.push('secure');
                                    }

                                    document.cookie = cookie.join('; ');
                                },

                                read: function read(name) {
                                    var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
                                    return (match ? decodeURIComponent(match[3]) : null);
                                },

                                remove: function remove(name) {
                                    this.write(name, '', Date.now() - 86400000);
                                }
                            };
                        })() :

                        // Non standard browser env (web workers, react-native) lack needed support.
                        (function nonStandardBrowserEnv() {
                            return {
                                write: function write() {},
                                read: function read() { return null; },
                                remove: function remove() {}
                            };
                        })()
                );


                /***/ }),
            /* 169 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var utils = __webpack_require__(7);

                function InterceptorManager() {
                    this.handlers = [];
                }

                /**
                 * Add a new interceptor to the stack
                 *
                 * @param {Function} fulfilled The function to handle `then` for a `Promise`
                 * @param {Function} rejected The function to handle `reject` for a `Promise`
                 *
                 * @return {Number} An ID used to remove interceptor later
                 */
                InterceptorManager.prototype.use = function use(fulfilled, rejected) {
                    this.handlers.push({
                        fulfilled: fulfilled,
                        rejected: rejected
                    });
                    return this.handlers.length - 1;
                };

                /**
                 * Remove an interceptor from the stack
                 *
                 * @param {Number} id The ID that was returned by `use`
                 */
                InterceptorManager.prototype.eject = function eject(id) {
                    if (this.handlers[id]) {
                        this.handlers[id] = null;
                    }
                };

                /**
                 * Iterate over all the registered interceptors
                 *
                 * This method is particularly useful for skipping over any
                 * interceptors that may have become `null` calling `eject`.
                 *
                 * @param {Function} fn The function to call for each interceptor
                 */
                InterceptorManager.prototype.forEach = function forEach(fn) {
                    utils.forEach(this.handlers, function forEachHandler(h) {
                        if (h !== null) {
                            fn(h);
                        }
                    });
                };

                module.exports = InterceptorManager;


                /***/ }),
            /* 170 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var utils = __webpack_require__(7);
                var transformData = __webpack_require__(171);
                var isCancel = __webpack_require__(80);
                var defaults = __webpack_require__(51);
                var isAbsoluteURL = __webpack_require__(172);
                var combineURLs = __webpack_require__(173);

                /**
                 * Throws a `Cancel` if cancellation has been requested.
                 */
                function throwIfCancellationRequested(config) {
                    if (config.cancelToken) {
                        config.cancelToken.throwIfRequested();
                    }
                }

                /**
                 * Dispatch a request to the server using the configured adapter.
                 *
                 * @param {object} config The config that is to be used for the request
                 * @returns {Promise} The Promise to be fulfilled
                 */
                module.exports = function dispatchRequest(config) {
                    throwIfCancellationRequested(config);

                    // Support baseURL config
                    if (config.baseURL && !isAbsoluteURL(config.url)) {
                        config.url = combineURLs(config.baseURL, config.url);
                    }

                    // Ensure headers exist
                    config.headers = config.headers || {};

                    // Transform request data
                    config.data = transformData(
                        config.data,
                        config.headers,
                        config.transformRequest
                    );

                    // Flatten headers
                    config.headers = utils.merge(
                        config.headers.common || {},
                        config.headers[config.method] || {},
                        config.headers || {}
                    );

                    utils.forEach(
                        ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
                        function cleanHeaderConfig(method) {
                            delete config.headers[method];
                        }
                    );

                    var adapter = config.adapter || defaults.adapter;

                    return adapter(config).then(function onAdapterResolution(response) {
                        throwIfCancellationRequested(config);

                        // Transform response data
                        response.data = transformData(
                            response.data,
                            response.headers,
                            config.transformResponse
                        );

                        return response;
                    }, function onAdapterRejection(reason) {
                        if (!isCancel(reason)) {
                            throwIfCancellationRequested(config);

                            // Transform response data
                            if (reason && reason.response) {
                                reason.response.data = transformData(
                                    reason.response.data,
                                    reason.response.headers,
                                    config.transformResponse
                                );
                            }
                        }

                        return Promise.reject(reason);
                    });
                };


                /***/ }),
            /* 171 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var utils = __webpack_require__(7);

                /**
                 * Transform the data for a request or a response
                 *
                 * @param {Object|String} data The data to be transformed
                 * @param {Array} headers The headers for the request or response
                 * @param {Array|Function} fns A single function or Array of functions
                 * @returns {*} The resulting transformed data
                 */
                module.exports = function transformData(data, headers, fns) {
                    /*eslint no-param-reassign:0*/
                    utils.forEach(fns, function transform(fn) {
                        data = fn(data, headers);
                    });

                    return data;
                };


                /***/ }),
            /* 172 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                /**
                 * Determines whether the specified URL is absolute
                 *
                 * @param {string} url The URL to test
                 * @returns {boolean} True if the specified URL is absolute, otherwise false
                 */
                module.exports = function isAbsoluteURL(url) {
                    // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
                    // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
                    // by any combination of letters, digits, plus, period, or hyphen.
                    return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
                };


                /***/ }),
            /* 173 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                /**
                 * Creates a new URL by combining the specified URLs
                 *
                 * @param {string} baseURL The base URL
                 * @param {string} relativeURL The relative URL
                 * @returns {string} The combined URL
                 */
                module.exports = function combineURLs(baseURL, relativeURL) {
                    return relativeURL
                        ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
                        : baseURL;
                };


                /***/ }),
            /* 174 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var Cancel = __webpack_require__(81);

                /**
                 * A `CancelToken` is an object that can be used to request cancellation of an operation.
                 *
                 * @class
                 * @param {Function} executor The executor function.
                 */
                function CancelToken(executor) {
                    if (typeof executor !== 'function') {
                        throw new TypeError('executor must be a function.');
                    }

                    var resolvePromise;
                    this.promise = new Promise(function promiseExecutor(resolve) {
                        resolvePromise = resolve;
                    });

                    var token = this;
                    executor(function cancel(message) {
                        if (token.reason) {
                            // Cancellation has already been requested
                            return;
                        }

                        token.reason = new Cancel(message);
                        resolvePromise(token.reason);
                    });
                }

                /**
                 * Throws a `Cancel` if cancellation has been requested.
                 */
                CancelToken.prototype.throwIfRequested = function throwIfRequested() {
                    if (this.reason) {
                        throw this.reason;
                    }
                };

                /**
                 * Returns an object that contains a new `CancelToken` and a function that, when called,
                 * cancels the `CancelToken`.
                 */
                CancelToken.source = function source() {
                    var cancel;
                    var token = new CancelToken(function executor(c) {
                        cancel = c;
                    });
                    return {
                        token: token,
                        cancel: cancel
                    };
                };

                module.exports = CancelToken;


                /***/ }),
            /* 175 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                /**
                 * Syntactic sugar for invoking a function and expanding an array for arguments.
                 *
                 * Common use case would be to use `Function.prototype.apply`.
                 *
                 *  ```js
                 *  function f(x, y, z) {}
                 *  var args = [1, 2, 3];
                 *  f.apply(null, args);
                 *  ```
                 *
                 * With `spread` this example can be re-written.
                 *
                 *  ```js
                 *  spread(function(x, y, z) {})([1, 2, 3]);
                 *  ```
                 *
                 * @param {Function} callback
                 * @returns {Function}
                 */
                module.exports = function spread(callback) {
                    return function wrap(arr) {
                        return callback.apply(null, arr);
                    };
                };


                /***/ }),
            /* 176 */
            /***/ (function(module, exports, __webpack_require__) {

                /* WEBPACK VAR INJECTION */(function(module, global) {var __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * Platform.js <https://mths.be/platform>
 * Copyright 2014-2018 Benjamin Tan <https://bnjmnt4n.now.sh/>
 * Copyright 2011-2013 John-David Dalton <http://allyoucanleet.com/>
 * Available under MIT license <https://mths.be/mit>
 */
                    ;(function() {
                        'use strict';

                        /** Used to determine if values are of the language type `Object`. */
                        var objectTypes = {
                            'function': true,
                            'object': true
                        };

                        /** Used as a reference to the global object. */
                        var root = (objectTypes[typeof window] && window) || this;

                        /** Backup possible global object. */
                        var oldRoot = root;

                        /** Detect free variable `exports`. */
                        var freeExports = objectTypes[typeof exports] && exports;

                        /** Detect free variable `module`. */
                        var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;

                        /** Detect free variable `global` from Node.js or Browserified code and use it as `root`. */
                        var freeGlobal = freeExports && freeModule && typeof global == 'object' && global;
                        if (freeGlobal && (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal || freeGlobal.self === freeGlobal)) {
                            root = freeGlobal;
                        }

                        /**
                         * Used as the maximum length of an array-like object.
                         * See the [ES6 spec](http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength)
                         * for more details.
                         */
                        var maxSafeInteger = Math.pow(2, 53) - 1;

                        /** Regular expression to detect Opera. */
                        var reOpera = /\bOpera/;

                        /** Possible global object. */
                        var thisBinding = this;

                        /** Used for native method references. */
                        var objectProto = Object.prototype;

                        /** Used to check for own properties of an object. */
                        var hasOwnProperty = objectProto.hasOwnProperty;

                        /** Used to resolve the internal `[[Class]]` of values. */
                        var toString = objectProto.toString;

                        /*--------------------------------------------------------------------------*/

                        /**
                         * Capitalizes a string value.
                         *
                         * @private
                         * @param {string} string The string to capitalize.
                         * @returns {string} The capitalized string.
                         */
                        function capitalize(string) {
                            string = String(string);
                            return string.charAt(0).toUpperCase() + string.slice(1);
                        }

                        /**
                         * A utility function to clean up the OS name.
                         *
                         * @private
                         * @param {string} os The OS name to clean up.
                         * @param {string} [pattern] A `RegExp` pattern matching the OS name.
                         * @param {string} [label] A label for the OS.
                         */
                        function cleanupOS(os, pattern, label) {
                            // Platform tokens are defined at:
                            // http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx
                            // http://web.archive.org/web/20081122053950/http://msdn.microsoft.com/en-us/library/ms537503(VS.85).aspx
                            var data = {
                                '10.0': '10',
                                '6.4':  '10 Technical Preview',
                                '6.3':  '8.1',
                                '6.2':  '8',
                                '6.1':  'Server 2008 R2 / 7',
                                '6.0':  'Server 2008 / Vista',
                                '5.2':  'Server 2003 / XP 64-bit',
                                '5.1':  'XP',
                                '5.01': '2000 SP1',
                                '5.0':  '2000',
                                '4.0':  'NT',
                                '4.90': 'ME'
                            };
                            // Detect Windows version from platform tokens.
                            if (pattern && label && /^Win/i.test(os) && !/^Windows Phone /i.test(os) &&
                                (data = data[/[\d.]+$/.exec(os)])) {
                                os = 'Windows ' + data;
                            }
                            // Correct character case and cleanup string.
                            os = String(os);

                            if (pattern && label) {
                                os = os.replace(RegExp(pattern, 'i'), label);
                            }

                            os = format(
                                os.replace(/ ce$/i, ' CE')
                                    .replace(/\bhpw/i, 'web')
                                    .replace(/\bMacintosh\b/, 'Mac OS')
                                    .replace(/_PowerPC\b/i, ' OS')
                                    .replace(/\b(OS X) [^ \d]+/i, '$1')
                                    .replace(/\bMac (OS X)\b/, '$1')
                                    .replace(/\/(\d)/, ' $1')
                                    .replace(/_/g, '.')
                                    .replace(/(?: BePC|[ .]*fc[ \d.]+)$/i, '')
                                    .replace(/\bx86\.64\b/gi, 'x86_64')
                                    .replace(/\b(Windows Phone) OS\b/, '$1')
                                    .replace(/\b(Chrome OS \w+) [\d.]+\b/, '$1')
                                    .split(' on ')[0]
                            );

                            return os;
                        }

                        /**
                         * An iteration utility for arrays and objects.
                         *
                         * @private
                         * @param {Array|Object} object The object to iterate over.
                         * @param {Function} callback The function called per iteration.
                         */
                        function each(object, callback) {
                            var index = -1,
                                length = object ? object.length : 0;

                            if (typeof length == 'number' && length > -1 && length <= maxSafeInteger) {
                                while (++index < length) {
                                    callback(object[index], index, object);
                                }
                            } else {
                                forOwn(object, callback);
                            }
                        }

                        /**
                         * Trim and conditionally capitalize string values.
                         *
                         * @private
                         * @param {string} string The string to format.
                         * @returns {string} The formatted string.
                         */
                        function format(string) {
                            string = trim(string);
                            return /^(?:webOS|i(?:OS|P))/.test(string)
                                ? string
                                : capitalize(string);
                        }

                        /**
                         * Iterates over an object's own properties, executing the `callback` for each.
                         *
                         * @private
                         * @param {Object} object The object to iterate over.
                         * @param {Function} callback The function executed per own property.
                         */
                        function forOwn(object, callback) {
                            for (var key in object) {
                                if (hasOwnProperty.call(object, key)) {
                                    callback(object[key], key, object);
                                }
                            }
                        }

                        /**
                         * Gets the internal `[[Class]]` of a value.
                         *
                         * @private
                         * @param {*} value The value.
                         * @returns {string} The `[[Class]]`.
                         */
                        function getClassOf(value) {
                            return value == null
                                ? capitalize(value)
                                : toString.call(value).slice(8, -1);
                        }

                        /**
                         * Host objects can return type values that are different from their actual
                         * data type. The objects we are concerned with usually return non-primitive
                         * types of "object", "function", or "unknown".
                         *
                         * @private
                         * @param {*} object The owner of the property.
                         * @param {string} property The property to check.
                         * @returns {boolean} Returns `true` if the property value is a non-primitive, else `false`.
                         */
                        function isHostType(object, property) {
                            var type = object != null ? typeof object[property] : 'number';
                            return !/^(?:boolean|number|string|undefined)$/.test(type) &&
                                (type == 'object' ? !!object[property] : true);
                        }

                        /**
                         * Prepares a string for use in a `RegExp` by making hyphens and spaces optional.
                         *
                         * @private
                         * @param {string} string The string to qualify.
                         * @returns {string} The qualified string.
                         */
                        function qualify(string) {
                            return String(string).replace(/([ -])(?!$)/g, '$1?');
                        }

                        /**
                         * A bare-bones `Array#reduce` like utility function.
                         *
                         * @private
                         * @param {Array} array The array to iterate over.
                         * @param {Function} callback The function called per iteration.
                         * @returns {*} The accumulated result.
                         */
                        function reduce(array, callback) {
                            var accumulator = null;
                            each(array, function(value, index) {
                                accumulator = callback(accumulator, value, index, array);
                            });
                            return accumulator;
                        }

                        /**
                         * Removes leading and trailing whitespace from a string.
                         *
                         * @private
                         * @param {string} string The string to trim.
                         * @returns {string} The trimmed string.
                         */
                        function trim(string) {
                            return String(string).replace(/^ +| +$/g, '');
                        }

                        /*--------------------------------------------------------------------------*/

                        /**
                         * Creates a new platform object.
                         *
                         * @memberOf platform
                         * @param {Object|string} [ua=navigator.userAgent] The user agent string or
                         *  context object.
                         * @returns {Object} A platform object.
                         */
                        function parse(ua) {

                            /** The environment context object. */
                            var context = root;

                            /** Used to flag when a custom context is provided. */
                            var isCustomContext = ua && typeof ua == 'object' && getClassOf(ua) != 'String';

                            // Juggle arguments.
                            if (isCustomContext) {
                                context = ua;
                                ua = null;
                            }

                            /** Browser navigator object. */
                            var nav = context.navigator || {};

                            /** Browser user agent string. */
                            var userAgent = nav.userAgent || '';

                            ua || (ua = userAgent);

                            /** Used to flag when `thisBinding` is the [ModuleScope]. */
                            var isModuleScope = isCustomContext || thisBinding == oldRoot;

                            /** Used to detect if browser is like Chrome. */
                            var likeChrome = isCustomContext
                                ? !!nav.likeChrome
                                : /\bChrome\b/.test(ua) && !/internal|\n/i.test(toString.toString());

                            /** Internal `[[Class]]` value shortcuts. */
                            var objectClass = 'Object',
                                airRuntimeClass = isCustomContext ? objectClass : 'ScriptBridgingProxyObject',
                                enviroClass = isCustomContext ? objectClass : 'Environment',
                                javaClass = (isCustomContext && context.java) ? 'JavaPackage' : getClassOf(context.java),
                                phantomClass = isCustomContext ? objectClass : 'RuntimeObject';

                            /** Detect Java environments. */
                            var java = /\bJava/.test(javaClass) && context.java;

                            /** Detect Rhino. */
                            var rhino = java && getClassOf(context.environment) == enviroClass;

                            /** A character to represent alpha. */
                            var alpha = java ? 'a' : '\u03b1';

                            /** A character to represent beta. */
                            var beta = java ? 'b' : '\u03b2';

                            /** Browser document object. */
                            var doc = context.document || {};

                            /**
                             * Detect Opera browser (Presto-based).
                             * http://www.howtocreate.co.uk/operaStuff/operaObject.html
                             * http://dev.opera.com/articles/view/opera-mini-web-content-authoring-guidelines/#operamini
                             */
                            var opera = context.operamini || context.opera;

                            /** Opera `[[Class]]`. */
                            var operaClass = reOpera.test(operaClass = (isCustomContext && opera) ? opera['[[Class]]'] : getClassOf(opera))
                                ? operaClass
                                : (opera = null);

                            /*------------------------------------------------------------------------*/

                            /** Temporary variable used over the script's lifetime. */
                            var data;

                            /** The CPU architecture. */
                            var arch = ua;

                            /** Platform description array. */
                            var description = [];

                            /** Platform alpha/beta indicator. */
                            var prerelease = null;

                            /** A flag to indicate that environment features should be used to resolve the platform. */
                            var useFeatures = ua == userAgent;

                            /** The browser/environment version. */
                            var version = useFeatures && opera && typeof opera.version == 'function' && opera.version();

                            /** A flag to indicate if the OS ends with "/ Version" */
                            var isSpecialCasedOS;

                            /* Detectable layout engines (order is important). */
                            var layout = getLayout([
                                { 'label': 'EdgeHTML', 'pattern': 'Edge' },
                                'Trident',
                                { 'label': 'WebKit', 'pattern': 'AppleWebKit' },
                                'iCab',
                                'Presto',
                                'NetFront',
                                'Tasman',
                                'KHTML',
                                'Gecko'
                            ]);

                            /* Detectable browser names (order is important). */
                            var name = getName([
                                'Adobe AIR',
                                'Arora',
                                'Avant Browser',
                                'Breach',
                                'Camino',
                                'Electron',
                                'Epiphany',
                                'Fennec',
                                'Flock',
                                'Galeon',
                                'GreenBrowser',
                                'iCab',
                                'Iceweasel',
                                'K-Meleon',
                                'Konqueror',
                                'Lunascape',
                                'Maxthon',
                                { 'label': 'Microsoft Edge', 'pattern': 'Edge' },
                                'Midori',
                                'Nook Browser',
                                'PaleMoon',
                                'PhantomJS',
                                'Raven',
                                'Rekonq',
                                'RockMelt',
                                { 'label': 'Samsung Internet', 'pattern': 'SamsungBrowser' },
                                'SeaMonkey',
                                { 'label': 'Silk', 'pattern': '(?:Cloud9|Silk-Accelerated)' },
                                'Sleipnir',
                                'SlimBrowser',
                                { 'label': 'SRWare Iron', 'pattern': 'Iron' },
                                'Sunrise',
                                'Swiftfox',
                                'Waterfox',
                                'WebPositive',
                                'Opera Mini',
                                { 'label': 'Opera Mini', 'pattern': 'OPiOS' },
                                'Opera',
                                { 'label': 'Opera', 'pattern': 'OPR' },
                                'Chrome',
                                { 'label': 'Chrome Mobile', 'pattern': '(?:CriOS|CrMo)' },
                                { 'label': 'Firefox', 'pattern': '(?:Firefox|Minefield)' },
                                { 'label': 'Firefox for iOS', 'pattern': 'FxiOS' },
                                { 'label': 'IE', 'pattern': 'IEMobile' },
                                { 'label': 'IE', 'pattern': 'MSIE' },
                                'Safari'
                            ]);

                            /* Detectable products (order is important). */
                            var product = getProduct([
                                { 'label': 'BlackBerry', 'pattern': 'BB10' },
                                'BlackBerry',
                                { 'label': 'Galaxy S', 'pattern': 'GT-I9000' },
                                { 'label': 'Galaxy S2', 'pattern': 'GT-I9100' },
                                { 'label': 'Galaxy S3', 'pattern': 'GT-I9300' },
                                { 'label': 'Galaxy S4', 'pattern': 'GT-I9500' },
                                { 'label': 'Galaxy S5', 'pattern': 'SM-G900' },
                                { 'label': 'Galaxy S6', 'pattern': 'SM-G920' },
                                { 'label': 'Galaxy S6 Edge', 'pattern': 'SM-G925' },
                                { 'label': 'Galaxy S7', 'pattern': 'SM-G930' },
                                { 'label': 'Galaxy S7 Edge', 'pattern': 'SM-G935' },
                                'Google TV',
                                'Lumia',
                                'iPad',
                                'iPod',
                                'iPhone',
                                'Kindle',
                                { 'label': 'Kindle Fire', 'pattern': '(?:Cloud9|Silk-Accelerated)' },
                                'Nexus',
                                'Nook',
                                'PlayBook',
                                'PlayStation Vita',
                                'PlayStation',
                                'TouchPad',
                                'Transformer',
                                { 'label': 'Wii U', 'pattern': 'WiiU' },
                                'Wii',
                                'Xbox One',
                                { 'label': 'Xbox 360', 'pattern': 'Xbox' },
                                'Xoom'
                            ]);

                            /* Detectable manufacturers. */
                            var manufacturer = getManufacturer({
                                'Apple': { 'iPad': 1, 'iPhone': 1, 'iPod': 1 },
                                'Archos': {},
                                'Amazon': { 'Kindle': 1, 'Kindle Fire': 1 },
                                'Asus': { 'Transformer': 1 },
                                'Barnes & Noble': { 'Nook': 1 },
                                'BlackBerry': { 'PlayBook': 1 },
                                'Google': { 'Google TV': 1, 'Nexus': 1 },
                                'HP': { 'TouchPad': 1 },
                                'HTC': {},
                                'LG': {},
                                'Microsoft': { 'Xbox': 1, 'Xbox One': 1 },
                                'Motorola': { 'Xoom': 1 },
                                'Nintendo': { 'Wii U': 1,  'Wii': 1 },
                                'Nokia': { 'Lumia': 1 },
                                'Samsung': { 'Galaxy S': 1, 'Galaxy S2': 1, 'Galaxy S3': 1, 'Galaxy S4': 1 },
                                'Sony': { 'PlayStation': 1, 'PlayStation Vita': 1 }
                            });

                            /* Detectable operating systems (order is important). */
                            var os = getOS([
                                'Windows Phone',
                                'Android',
                                'CentOS',
                                { 'label': 'Chrome OS', 'pattern': 'CrOS' },
                                'Debian',
                                'Fedora',
                                'FreeBSD',
                                'Gentoo',
                                'Haiku',
                                'Kubuntu',
                                'Linux Mint',
                                'OpenBSD',
                                'Red Hat',
                                'SuSE',
                                'Ubuntu',
                                'Xubuntu',
                                'Cygwin',
                                'Symbian OS',
                                'hpwOS',
                                'webOS ',
                                'webOS',
                                'Tablet OS',
                                'Tizen',
                                'Linux',
                                'Mac OS X',
                                'Macintosh',
                                'Mac',
                                'Windows 98;',
                                'Windows '
                            ]);

                            /*------------------------------------------------------------------------*/

                            /**
                             * Picks the layout engine from an array of guesses.
                             *
                             * @private
                             * @param {Array} guesses An array of guesses.
                             * @returns {null|string} The detected layout engine.
                             */
                            function getLayout(guesses) {
                                return reduce(guesses, function(result, guess) {
                                    return result || RegExp('\\b' + (
                                        guess.pattern || qualify(guess)
                                    ) + '\\b', 'i').exec(ua) && (guess.label || guess);
                                });
                            }

                            /**
                             * Picks the manufacturer from an array of guesses.
                             *
                             * @private
                             * @param {Array} guesses An object of guesses.
                             * @returns {null|string} The detected manufacturer.
                             */
                            function getManufacturer(guesses) {
                                return reduce(guesses, function(result, value, key) {
                                    // Lookup the manufacturer by product or scan the UA for the manufacturer.
                                    return result || (
                                        value[product] ||
                                        value[/^[a-z]+(?: +[a-z]+\b)*/i.exec(product)] ||
                                        RegExp('\\b' + qualify(key) + '(?:\\b|\\w*\\d)', 'i').exec(ua)
                                    ) && key;
                                });
                            }

                            /**
                             * Picks the browser name from an array of guesses.
                             *
                             * @private
                             * @param {Array} guesses An array of guesses.
                             * @returns {null|string} The detected browser name.
                             */
                            function getName(guesses) {
                                return reduce(guesses, function(result, guess) {
                                    return result || RegExp('\\b' + (
                                        guess.pattern || qualify(guess)
                                    ) + '\\b', 'i').exec(ua) && (guess.label || guess);
                                });
                            }

                            /**
                             * Picks the OS name from an array of guesses.
                             *
                             * @private
                             * @param {Array} guesses An array of guesses.
                             * @returns {null|string} The detected OS name.
                             */
                            function getOS(guesses) {
                                return reduce(guesses, function(result, guess) {
                                    var pattern = guess.pattern || qualify(guess);
                                    if (!result && (result =
                                            RegExp('\\b' + pattern + '(?:/[\\d.]+|[ \\w.]*)', 'i').exec(ua)
                                    )) {
                                        result = cleanupOS(result, pattern, guess.label || guess);
                                    }
                                    return result;
                                });
                            }

                            /**
                             * Picks the product name from an array of guesses.
                             *
                             * @private
                             * @param {Array} guesses An array of guesses.
                             * @returns {null|string} The detected product name.
                             */
                            function getProduct(guesses) {
                                return reduce(guesses, function(result, guess) {
                                    var pattern = guess.pattern || qualify(guess);
                                    if (!result && (result =
                                            RegExp('\\b' + pattern + ' *\\d+[.\\w_]*', 'i').exec(ua) ||
                                            RegExp('\\b' + pattern + ' *\\w+-[\\w]*', 'i').exec(ua) ||
                                            RegExp('\\b' + pattern + '(?:; *(?:[a-z]+[_-])?[a-z]+\\d+|[^ ();-]*)', 'i').exec(ua)
                                    )) {
                                        // Split by forward slash and append product version if needed.
                                        if ((result = String((guess.label && !RegExp(pattern, 'i').test(guess.label)) ? guess.label : result).split('/'))[1] && !/[\d.]+/.test(result[0])) {
                                            result[0] += ' ' + result[1];
                                        }
                                        // Correct character case and cleanup string.
                                        guess = guess.label || guess;
                                        result = format(result[0]
                                            .replace(RegExp(pattern, 'i'), guess)
                                            .replace(RegExp('; *(?:' + guess + '[_-])?', 'i'), ' ')
                                            .replace(RegExp('(' + guess + ')[-_.]?(\\w)', 'i'), '$1 $2'));
                                    }
                                    return result;
                                });
                            }

                            /**
                             * Resolves the version using an array of UA patterns.
                             *
                             * @private
                             * @param {Array} patterns An array of UA patterns.
                             * @returns {null|string} The detected version.
                             */
                            function getVersion(patterns) {
                                return reduce(patterns, function(result, pattern) {
                                    return result || (RegExp(pattern +
                                        '(?:-[\\d.]+/|(?: for [\\w-]+)?[ /-])([\\d.]+[^ ();/_-]*)', 'i').exec(ua) || 0)[1] || null;
                                });
                            }

                            /**
                             * Returns `platform.description` when the platform object is coerced to a string.
                             *
                             * @name toString
                             * @memberOf platform
                             * @returns {string} Returns `platform.description` if available, else an empty string.
                             */
                            function toStringPlatform() {
                                return this.description || '';
                            }

                            /*------------------------------------------------------------------------*/

                            // Convert layout to an array so we can add extra details.
                            layout && (layout = [layout]);

                            // Detect product names that contain their manufacturer's name.
                            if (manufacturer && !product) {
                                product = getProduct([manufacturer]);
                            }
                            // Clean up Google TV.
                            if ((data = /\bGoogle TV\b/.exec(product))) {
                                product = data[0];
                            }
                            // Detect simulators.
                            if (/\bSimulator\b/i.test(ua)) {
                                product = (product ? product + ' ' : '') + 'Simulator';
                            }
                            // Detect Opera Mini 8+ running in Turbo/Uncompressed mode on iOS.
                            if (name == 'Opera Mini' && /\bOPiOS\b/.test(ua)) {
                                description.push('running in Turbo/Uncompressed mode');
                            }
                            // Detect IE Mobile 11.
                            if (name == 'IE' && /\blike iPhone OS\b/.test(ua)) {
                                data = parse(ua.replace(/like iPhone OS/, ''));
                                manufacturer = data.manufacturer;
                                product = data.product;
                            }
                            // Detect iOS.
                            else if (/^iP/.test(product)) {
                                name || (name = 'Safari');
                                os = 'iOS' + ((data = / OS ([\d_]+)/i.exec(ua))
                                    ? ' ' + data[1].replace(/_/g, '.')
                                    : '');
                            }
                            // Detect Kubuntu.
                            else if (name == 'Konqueror' && !/buntu/i.test(os)) {
                                os = 'Kubuntu';
                            }
                            // Detect Android browsers.
                            else if ((manufacturer && manufacturer != 'Google' &&
                                ((/Chrome/.test(name) && !/\bMobile Safari\b/i.test(ua)) || /\bVita\b/.test(product))) ||
                                (/\bAndroid\b/.test(os) && /^Chrome/.test(name) && /\bVersion\//i.test(ua))) {
                                name = 'Android Browser';
                                os = /\bAndroid\b/.test(os) ? os : 'Android';
                            }
                            // Detect Silk desktop/accelerated modes.
                            else if (name == 'Silk') {
                                if (!/\bMobi/i.test(ua)) {
                                    os = 'Android';
                                    description.unshift('desktop mode');
                                }
                                if (/Accelerated *= *true/i.test(ua)) {
                                    description.unshift('accelerated');
                                }
                            }
                            // Detect PaleMoon identifying as Firefox.
                            else if (name == 'PaleMoon' && (data = /\bFirefox\/([\d.]+)\b/.exec(ua))) {
                                description.push('identifying as Firefox ' + data[1]);
                            }
                            // Detect Firefox OS and products running Firefox.
                            else if (name == 'Firefox' && (data = /\b(Mobile|Tablet|TV)\b/i.exec(ua))) {
                                os || (os = 'Firefox OS');
                                product || (product = data[1]);
                            }
                            // Detect false positives for Firefox/Safari.
                            else if (!name || (data = !/\bMinefield\b/i.test(ua) && /\b(?:Firefox|Safari)\b/.exec(name))) {
                                // Escape the `/` for Firefox 1.
                                if (name && !product && /[\/,]|^[^(]+?\)/.test(ua.slice(ua.indexOf(data + '/') + 8))) {
                                    // Clear name of false positives.
                                    name = null;
                                }
                                // Reassign a generic name.
                                if ((data = product || manufacturer || os) &&
                                    (product || manufacturer || /\b(?:Android|Symbian OS|Tablet OS|webOS)\b/.test(os))) {
                                    name = /[a-z]+(?: Hat)?/i.exec(/\bAndroid\b/.test(os) ? os : data) + ' Browser';
                                }
                            }
                            // Add Chrome version to description for Electron.
                            else if (name == 'Electron' && (data = (/\bChrome\/([\d.]+)\b/.exec(ua) || 0)[1])) {
                                description.push('Chromium ' + data);
                            }
                            // Detect non-Opera (Presto-based) versions (order is important).
                            if (!version) {
                                version = getVersion([
                                    '(?:Cloud9|CriOS|CrMo|Edge|FxiOS|IEMobile|Iron|Opera ?Mini|OPiOS|OPR|Raven|SamsungBrowser|Silk(?!/[\\d.]+$))',
                                    'Version',
                                    qualify(name),
                                    '(?:Firefox|Minefield|NetFront)'
                                ]);
                            }
                            // Detect stubborn layout engines.
                            if ((data =
                                    layout == 'iCab' && parseFloat(version) > 3 && 'WebKit' ||
                                    /\bOpera\b/.test(name) && (/\bOPR\b/.test(ua) ? 'Blink' : 'Presto') ||
                                    /\b(?:Midori|Nook|Safari)\b/i.test(ua) && !/^(?:Trident|EdgeHTML)$/.test(layout) && 'WebKit' ||
                                    !layout && /\bMSIE\b/i.test(ua) && (os == 'Mac OS' ? 'Tasman' : 'Trident') ||
                                    layout == 'WebKit' && /\bPlayStation\b(?! Vita\b)/i.test(name) && 'NetFront'
                            )) {
                                layout = [data];
                            }
                            // Detect Windows Phone 7 desktop mode.
                            if (name == 'IE' && (data = (/; *(?:XBLWP|ZuneWP)(\d+)/i.exec(ua) || 0)[1])) {
                                name += ' Mobile';
                                os = 'Windows Phone ' + (/\+$/.test(data) ? data : data + '.x');
                                description.unshift('desktop mode');
                            }
                            // Detect Windows Phone 8.x desktop mode.
                            else if (/\bWPDesktop\b/i.test(ua)) {
                                name = 'IE Mobile';
                                os = 'Windows Phone 8.x';
                                description.unshift('desktop mode');
                                version || (version = (/\brv:([\d.]+)/.exec(ua) || 0)[1]);
                            }
                            // Detect IE 11 identifying as other browsers.
                            else if (name != 'IE' && layout == 'Trident' && (data = /\brv:([\d.]+)/.exec(ua))) {
                                if (name) {
                                    description.push('identifying as ' + name + (version ? ' ' + version : ''));
                                }
                                name = 'IE';
                                version = data[1];
                            }
                            // Leverage environment features.
                            if (useFeatures) {
                                // Detect server-side environments.
                                // Rhino has a global function while others have a global object.
                                if (isHostType(context, 'global')) {
                                    if (java) {
                                        data = java.lang.System;
                                        arch = data.getProperty('os.arch');
                                        os = os || data.getProperty('os.name') + ' ' + data.getProperty('os.version');
                                    }
                                    if (rhino) {
                                        try {
                                            version = context.require('ringo/engine').version.join('.');
                                            name = 'RingoJS';
                                        } catch(e) {
                                            if ((data = context.system) && data.global.system == context.system) {
                                                name = 'Narwhal';
                                                os || (os = data[0].os || null);
                                            }
                                        }
                                        if (!name) {
                                            name = 'Rhino';
                                        }
                                    }
                                    else if (
                                        typeof context.process == 'object' && !context.process.browser &&
                                        (data = context.process)
                                    ) {
                                        if (typeof data.versions == 'object') {
                                            if (typeof data.versions.electron == 'string') {
                                                description.push('Node ' + data.versions.node);
                                                name = 'Electron';
                                                version = data.versions.electron;
                                            } else if (typeof data.versions.nw == 'string') {
                                                description.push('Chromium ' + version, 'Node ' + data.versions.node);
                                                name = 'NW.js';
                                                version = data.versions.nw;
                                            }
                                        }
                                        if (!name) {
                                            name = 'Node.js';
                                            arch = data.arch;
                                            os = data.platform;
                                            version = /[\d.]+/.exec(data.version);
                                            version = version ? version[0] : null;
                                        }
                                    }
                                }
                                // Detect Adobe AIR.
                                else if (getClassOf((data = context.runtime)) == airRuntimeClass) {
                                    name = 'Adobe AIR';
                                    os = data.flash.system.Capabilities.os;
                                }
                                // Detect PhantomJS.
                                else if (getClassOf((data = context.phantom)) == phantomClass) {
                                    name = 'PhantomJS';
                                    version = (data = data.version || null) && (data.major + '.' + data.minor + '.' + data.patch);
                                }
                                // Detect IE compatibility modes.
                                else if (typeof doc.documentMode == 'number' && (data = /\bTrident\/(\d+)/i.exec(ua))) {
                                    // We're in compatibility mode when the Trident version + 4 doesn't
                                    // equal the document mode.
                                    version = [version, doc.documentMode];
                                    if ((data = +data[1] + 4) != version[1]) {
                                        description.push('IE ' + version[1] + ' mode');
                                        layout && (layout[1] = '');
                                        version[1] = data;
                                    }
                                    version = name == 'IE' ? String(version[1].toFixed(1)) : version[0];
                                }
                                // Detect IE 11 masking as other browsers.
                                else if (typeof doc.documentMode == 'number' && /^(?:Chrome|Firefox)\b/.test(name)) {
                                    description.push('masking as ' + name + ' ' + version);
                                    name = 'IE';
                                    version = '11.0';
                                    layout = ['Trident'];
                                    os = 'Windows';
                                }
                                os = os && format(os);
                            }
                            // Detect prerelease phases.
                            if (version && (data =
                                    /(?:[ab]|dp|pre|[ab]\d+pre)(?:\d+\+?)?$/i.exec(version) ||
                                    /(?:alpha|beta)(?: ?\d)?/i.exec(ua + ';' + (useFeatures && nav.appMinorVersion)) ||
                                    /\bMinefield\b/i.test(ua) && 'a'
                            )) {
                                prerelease = /b/i.test(data) ? 'beta' : 'alpha';
                                version = version.replace(RegExp(data + '\\+?$'), '') +
                                    (prerelease == 'beta' ? beta : alpha) + (/\d+\+?/.exec(data) || '');
                            }
                            // Detect Firefox Mobile.
                            if (name == 'Fennec' || name == 'Firefox' && /\b(?:Android|Firefox OS)\b/.test(os)) {
                                name = 'Firefox Mobile';
                            }
                            // Obscure Maxthon's unreliable version.
                            else if (name == 'Maxthon' && version) {
                                version = version.replace(/\.[\d.]+/, '.x');
                            }
                            // Detect Xbox 360 and Xbox One.
                            else if (/\bXbox\b/i.test(product)) {
                                if (product == 'Xbox 360') {
                                    os = null;
                                }
                                if (product == 'Xbox 360' && /\bIEMobile\b/.test(ua)) {
                                    description.unshift('mobile mode');
                                }
                            }
                            // Add mobile postfix.
                            else if ((/^(?:Chrome|IE|Opera)$/.test(name) || name && !product && !/Browser|Mobi/.test(name)) &&
                                (os == 'Windows CE' || /Mobi/i.test(ua))) {
                                name += ' Mobile';
                            }
                            // Detect IE platform preview.
                            else if (name == 'IE' && useFeatures) {
                                try {
                                    if (context.external === null) {
                                        description.unshift('platform preview');
                                    }
                                } catch(e) {
                                    description.unshift('embedded');
                                }
                            }
                                // Detect BlackBerry OS version.
                            // http://docs.blackberry.com/en/developers/deliverables/18169/HTTP_headers_sent_by_BB_Browser_1234911_11.jsp
                            else if ((/\bBlackBerry\b/.test(product) || /\bBB10\b/.test(ua)) && (data =
                                    (RegExp(product.replace(/ +/g, ' *') + '/([.\\d]+)', 'i').exec(ua) || 0)[1] ||
                                    version
                            )) {
                                data = [data, /BB10/.test(ua)];
                                os = (data[1] ? (product = null, manufacturer = 'BlackBerry') : 'Device Software') + ' ' + data[0];
                                version = null;
                            }
                                // Detect Opera identifying/masking itself as another browser.
                            // http://www.opera.com/support/kb/view/843/
                            else if (this != forOwn && product != 'Wii' && (
                                (useFeatures && opera) ||
                                (/Opera/.test(name) && /\b(?:MSIE|Firefox)\b/i.test(ua)) ||
                                (name == 'Firefox' && /\bOS X (?:\d+\.){2,}/.test(os)) ||
                                (name == 'IE' && (
                                    (os && !/^Win/.test(os) && version > 5.5) ||
                                    /\bWindows XP\b/.test(os) && version > 8 ||
                                    version == 8 && !/\bTrident\b/.test(ua)
                                ))
                            ) && !reOpera.test((data = parse.call(forOwn, ua.replace(reOpera, '') + ';'))) && data.name) {
                                // When "identifying", the UA contains both Opera and the other browser's name.
                                data = 'ing as ' + data.name + ((data = data.version) ? ' ' + data : '');
                                if (reOpera.test(name)) {
                                    if (/\bIE\b/.test(data) && os == 'Mac OS') {
                                        os = null;
                                    }
                                    data = 'identify' + data;
                                }
                                // When "masking", the UA contains only the other browser's name.
                                else {
                                    data = 'mask' + data;
                                    if (operaClass) {
                                        name = format(operaClass.replace(/([a-z])([A-Z])/g, '$1 $2'));
                                    } else {
                                        name = 'Opera';
                                    }
                                    if (/\bIE\b/.test(data)) {
                                        os = null;
                                    }
                                    if (!useFeatures) {
                                        version = null;
                                    }
                                }
                                layout = ['Presto'];
                                description.push(data);
                            }
                            // Detect WebKit Nightly and approximate Chrome/Safari versions.
                            if ((data = (/\bAppleWebKit\/([\d.]+\+?)/i.exec(ua) || 0)[1])) {
                                // Correct build number for numeric comparison.
                                // (e.g. "532.5" becomes "532.05")
                                data = [parseFloat(data.replace(/\.(\d)$/, '.0$1')), data];
                                // Nightly builds are postfixed with a "+".
                                if (name == 'Safari' && data[1].slice(-1) == '+') {
                                    name = 'WebKit Nightly';
                                    prerelease = 'alpha';
                                    version = data[1].slice(0, -1);
                                }
                                // Clear incorrect browser versions.
                                else if (version == data[1] ||
                                    version == (data[2] = (/\bSafari\/([\d.]+\+?)/i.exec(ua) || 0)[1])) {
                                    version = null;
                                }
                                // Use the full Chrome version when available.
                                data[1] = (/\bChrome\/([\d.]+)/i.exec(ua) || 0)[1];
                                // Detect Blink layout engine.
                                if (data[0] == 537.36 && data[2] == 537.36 && parseFloat(data[1]) >= 28 && layout == 'WebKit') {
                                    layout = ['Blink'];
                                }
                                // Detect JavaScriptCore.
                                // http://stackoverflow.com/questions/6768474/how-can-i-detect-which-javascript-engine-v8-or-jsc-is-used-at-runtime-in-androi
                                if (!useFeatures || (!likeChrome && !data[1])) {
                                    layout && (layout[1] = 'like Safari');
                                    data = (data = data[0], data < 400 ? 1 : data < 500 ? 2 : data < 526 ? 3 : data < 533 ? 4 : data < 534 ? '4+' : data < 535 ? 5 : data < 537 ? 6 : data < 538 ? 7 : data < 601 ? 8 : '8');
                                } else {
                                    layout && (layout[1] = 'like Chrome');
                                    data = data[1] || (data = data[0], data < 530 ? 1 : data < 532 ? 2 : data < 532.05 ? 3 : data < 533 ? 4 : data < 534.03 ? 5 : data < 534.07 ? 6 : data < 534.10 ? 7 : data < 534.13 ? 8 : data < 534.16 ? 9 : data < 534.24 ? 10 : data < 534.30 ? 11 : data < 535.01 ? 12 : data < 535.02 ? '13+' : data < 535.07 ? 15 : data < 535.11 ? 16 : data < 535.19 ? 17 : data < 536.05 ? 18 : data < 536.10 ? 19 : data < 537.01 ? 20 : data < 537.11 ? '21+' : data < 537.13 ? 23 : data < 537.18 ? 24 : data < 537.24 ? 25 : data < 537.36 ? 26 : layout != 'Blink' ? '27' : '28');
                                }
                                // Add the postfix of ".x" or "+" for approximate versions.
                                layout && (layout[1] += ' ' + (data += typeof data == 'number' ? '.x' : /[.+]/.test(data) ? '' : '+'));
                                // Obscure version for some Safari 1-2 releases.
                                if (name == 'Safari' && (!version || parseInt(version) > 45)) {
                                    version = data;
                                }
                            }
                            // Detect Opera desktop modes.
                            if (name == 'Opera' &&  (data = /\bzbov|zvav$/.exec(os))) {
                                name += ' ';
                                description.unshift('desktop mode');
                                if (data == 'zvav') {
                                    name += 'Mini';
                                    version = null;
                                } else {
                                    name += 'Mobile';
                                }
                                os = os.replace(RegExp(' *' + data + '$'), '');
                            }
                            // Detect Chrome desktop mode.
                            else if (name == 'Safari' && /\bChrome\b/.exec(layout && layout[1])) {
                                description.unshift('desktop mode');
                                name = 'Chrome Mobile';
                                version = null;

                                if (/\bOS X\b/.test(os)) {
                                    manufacturer = 'Apple';
                                    os = 'iOS 4.3+';
                                } else {
                                    os = null;
                                }
                            }
                            // Strip incorrect OS versions.
                            if (version && version.indexOf((data = /[\d.]+$/.exec(os))) == 0 &&
                                ua.indexOf('/' + data + '-') > -1) {
                                os = trim(os.replace(data, ''));
                            }
                            // Add layout engine.
                            if (layout && !/\b(?:Avant|Nook)\b/.test(name) && (
                                /Browser|Lunascape|Maxthon/.test(name) ||
                                name != 'Safari' && /^iOS/.test(os) && /\bSafari\b/.test(layout[1]) ||
                                /^(?:Adobe|Arora|Breach|Midori|Opera|Phantom|Rekonq|Rock|Samsung Internet|Sleipnir|Web)/.test(name) && layout[1])) {
                                // Don't add layout details to description if they are falsey.
                                (data = layout[layout.length - 1]) && description.push(data);
                            }
                            // Combine contextual information.
                            if (description.length) {
                                description = ['(' + description.join('; ') + ')'];
                            }
                            // Append manufacturer to description.
                            if (manufacturer && product && product.indexOf(manufacturer) < 0) {
                                description.push('on ' + manufacturer);
                            }
                            // Append product to description.
                            if (product) {
                                description.push((/^on /.test(description[description.length - 1]) ? '' : 'on ') + product);
                            }
                            // Parse the OS into an object.
                            if (os) {
                                data = / ([\d.+]+)$/.exec(os);
                                isSpecialCasedOS = data && os.charAt(os.length - data[0].length - 1) == '/';
                                os = {
                                    'architecture': 32,
                                    'family': (data && !isSpecialCasedOS) ? os.replace(data[0], '') : os,
                                    'version': data ? data[1] : null,
                                    'toString': function() {
                                        var version = this.version;
                                        return this.family + ((version && !isSpecialCasedOS) ? ' ' + version : '') + (this.architecture == 64 ? ' 64-bit' : '');
                                    }
                                };
                            }
                            // Add browser/OS architecture.
                            if ((data = /\b(?:AMD|IA|Win|WOW|x86_|x)64\b/i.exec(arch)) && !/\bi686\b/i.test(arch)) {
                                if (os) {
                                    os.architecture = 64;
                                    os.family = os.family.replace(RegExp(' *' + data), '');
                                }
                                if (
                                    name && (/\bWOW64\b/i.test(ua) ||
                                    (useFeatures && /\w(?:86|32)$/.test(nav.cpuClass || nav.platform) && !/\bWin64; x64\b/i.test(ua)))
                                ) {
                                    description.unshift('32-bit');
                                }
                            }
                            // Chrome 39 and above on OS X is always 64-bit.
                            else if (
                                os && /^OS X/.test(os.family) &&
                                name == 'Chrome' && parseFloat(version) >= 39
                            ) {
                                os.architecture = 64;
                            }

                            ua || (ua = null);

                            /*------------------------------------------------------------------------*/

                            /**
                             * The platform object.
                             *
                             * @name platform
                             * @type Object
                             */
                            var platform = {};

                            /**
                             * The platform description.
                             *
                             * @memberOf platform
                             * @type string|null
                             */
                            platform.description = ua;

                            /**
                             * The name of the browser's layout engine.
                             *
                             * The list of common layout engines include:
                             * "Blink", "EdgeHTML", "Gecko", "Trident" and "WebKit"
                             *
                             * @memberOf platform
                             * @type string|null
                             */
                            platform.layout = layout && layout[0];

                            /**
                             * The name of the product's manufacturer.
                             *
                             * The list of manufacturers include:
                             * "Apple", "Archos", "Amazon", "Asus", "Barnes & Noble", "BlackBerry",
                             * "Google", "HP", "HTC", "LG", "Microsoft", "Motorola", "Nintendo",
                             * "Nokia", "Samsung" and "Sony"
                             *
                             * @memberOf platform
                             * @type string|null
                             */
                            platform.manufacturer = manufacturer;

                            /**
                             * The name of the browser/environment.
                             *
                             * The list of common browser names include:
                             * "Chrome", "Electron", "Firefox", "Firefox for iOS", "IE",
                             * "Microsoft Edge", "PhantomJS", "Safari", "SeaMonkey", "Silk",
                             * "Opera Mini" and "Opera"
                             *
                             * Mobile versions of some browsers have "Mobile" appended to their name:
                             * eg. "Chrome Mobile", "Firefox Mobile", "IE Mobile" and "Opera Mobile"
                             *
                             * @memberOf platform
                             * @type string|null
                             */
                            platform.name = name;

                            /**
                             * The alpha/beta release indicator.
                             *
                             * @memberOf platform
                             * @type string|null
                             */
                            platform.prerelease = prerelease;

                            /**
                             * The name of the product hosting the browser.
                             *
                             * The list of common products include:
                             *
                             * "BlackBerry", "Galaxy S4", "Lumia", "iPad", "iPod", "iPhone", "Kindle",
                             * "Kindle Fire", "Nexus", "Nook", "PlayBook", "TouchPad" and "Transformer"
                             *
                             * @memberOf platform
                             * @type string|null
                             */
                            platform.product = product;

                            /**
                             * The browser's user agent string.
                             *
                             * @memberOf platform
                             * @type string|null
                             */
                            platform.ua = ua;

                            /**
                             * The browser/environment version.
                             *
                             * @memberOf platform
                             * @type string|null
                             */
                            platform.version = name && version;

                            /**
                             * The name of the operating system.
                             *
                             * @memberOf platform
                             * @type Object
                             */
                            platform.os = os || {

                                /**
                                 * The CPU architecture the OS is built for.
                                 *
                                 * @memberOf platform.os
                                 * @type number|null
                                 */
                                'architecture': null,

                                /**
                                 * The family of the OS.
                                 *
                                 * Common values include:
                                 * "Windows", "Windows Server 2008 R2 / 7", "Windows Server 2008 / Vista",
                                 * "Windows XP", "OS X", "Ubuntu", "Debian", "Fedora", "Red Hat", "SuSE",
                                 * "Android", "iOS" and "Windows Phone"
                                 *
                                 * @memberOf platform.os
                                 * @type string|null
                                 */
                                'family': null,

                                /**
                                 * The version of the OS.
                                 *
                                 * @memberOf platform.os
                                 * @type string|null
                                 */
                                'version': null,

                                /**
                                 * Returns the OS string.
                                 *
                                 * @memberOf platform.os
                                 * @returns {string} The OS string.
                                 */
                                'toString': function() { return 'null'; }
                            };

                            platform.parse = parse;
                            platform.toString = toStringPlatform;

                            if (platform.version) {
                                description.unshift(version);
                            }
                            if (platform.name) {
                                description.unshift(name);
                            }
                            if (os && name && !(os == String(os).split(' ')[0] && (os == name.split(' ')[0] || product))) {
                                description.push(product ? '(' + os + ')' : 'on ' + os);
                            }
                            if (description.length) {
                                platform.description = description.join(' ');
                            }
                            return platform;
                        }

                        /*--------------------------------------------------------------------------*/

                        // Export platform.
                        var platform = parse();

                        // Some AMD build optimizers, like r.js, check for condition patterns like the following:
                        if (true) {
                            // Expose platform on the global object to prevent errors when platform is
                            // loaded by a script tag in the presence of an AMD loader.
                            // See http://requirejs.org/docs/errors.html#mismatch for more details.
                            root.platform = platform;

                            // Define as an anonymous module so platform can be aliased through path mapping.
                            !(__WEBPACK_AMD_DEFINE_RESULT__ = (function() {
                                return platform;
                            }).call(exports, __webpack_require__, exports, module),
                            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
                        }
                        // Check for `exports` after `define` in case a build optimizer adds an `exports` object.
                        else if (freeExports && freeModule) {
                            // Export for CommonJS support.
                            forOwn(platform, function(value, key) {
                                freeExports[key] = value;
                            });
                        }
                        else {
                            // Export to the global object.
                            root.platform = platform;
                        }
                    }.call(this));

                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(177)(module), __webpack_require__(67)))

                /***/ }),
            /* 177 */
            /***/ (function(module, exports) {

                module.exports = function(module) {
                    if(!module.webpackPolyfill) {
                        module.deprecate = function() {};
                        module.paths = [];
                        // module.parent = undefined by default
                        if(!module.children) module.children = [];
                        Object.defineProperty(module, "loaded", {
                            enumerable: true,
                            get: function() {
                                return module.l;
                            }
                        });
                        Object.defineProperty(module, "id", {
                            enumerable: true,
                            get: function() {
                                return module.i;
                            }
                        });
                        module.webpackPolyfill = 1;
                    }
                    return module;
                };


                /***/ }),
            /* 178 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _constants=__webpack_require__(1);var _HeaderButton=__webpack_require__(179);var _HeaderButton2=_interopRequireDefault(_HeaderButton);var _TabsDropdown=__webpack_require__(181);var _TabsDropdown2=_interopRequireDefault(_TabsDropdown);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Header=function(_Component){_inherits(Header,_Component);function Header(props){_classCallCheck(this,Header);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.getAvailableTabs=function(){var availableTabs=_this.props.availableTabs;if(availableTabs){return availableTabs;}return _constants.DEFAULT_CONFIG.availableTabs;};return _this;}Header.prototype.render=function render(){var _props=this.props,selectedTab=_props.selectedTab,onChangeTab=_props.onChangeTab,config=_props.config,tabDetails=_props.tabDetails;var tabs=this.getAvailableTabs();var isTab=config.headerTabType===_constants.TAB_TYPES.TAB;return h("header",{className:(0,_classnames2.default)("paazl__header header",{"has-select":isTab})},h("nav",{className:"header__navigation method-select__navigation paazl-delimiter",role:"tablist"},h(_TabsDropdown2.default,{tabs:tabs,activeTab:selectedTab,onSelectTab:onChangeTab}),h("div",{className:(0,_classnames2.default)("header__listing method-select__listing","method-select__listing--"+config.headerTabType.toLowerCase())},tabs.map(function(t){return h(_HeaderButton2.default,{tab:t,selectedTab:selectedTab,tabDetails:tabDetails[t],config:config,onChangeTab:onChangeTab});}))));};return Header;}(_preact.Component);exports.default=Header;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 179 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _constants=__webpack_require__(1);var _CurrencyUtils=__webpack_require__(17);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var HeaderButton=function(_Component){_inherits(HeaderButton,_Component);function HeaderButton(props){_classCallCheck(this,HeaderButton);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.onSelectTab=function(){var _this$props=_this.props,tab=_this$props.tab,selectedTab=_this$props.selectedTab,onChangeTab=_this$props.onChangeTab;if(tab!==selectedTab){onChangeTab&&onChangeTab(tab);}};_this.getIcon=function(){var tab=_this.props.tab;var icons={DELIVERY:h("svg",{width:"20",height:"20",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false"},h("path",{"fill-rule":"nonzero",d:"M17.273 6.636h-2.728V3H1.818C.818 3 0 3.818 0 4.818v10h1.818a2.724 2.724 0 0 0 2.727 2.727 2.724 2.724 0 0 0 2.728-2.727h5.454a2.724 2.724 0 0 0 2.728 2.727 2.724 2.724 0 0 0 2.727-2.727H20v-4.545l-2.727-3.637zM4.545 16.182c-.754 0-1.363-.61-1.363-1.364 0-.754.609-1.363 1.363-1.363.755 0 1.364.609 1.364 1.363 0 .755-.609 1.364-1.364 1.364zM16.818 8l1.782 2.273h-4.055V8h2.273zm-1.363 8.182c-.755 0-1.364-.61-1.364-1.364 0-.754.609-1.363 1.364-1.363.754 0 1.363.609 1.363 1.363 0 .755-.609 1.364-1.363 1.364z"})),STORE:h("svg",{width:"20",height:"20",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false"},h("path",{d:"M18 2H2v2h16V2zm1 10v-2l-1-5H2l-1 5v2h1v6h10v-6h4v6h2v-6h1zm-9 4H4v-4h6v4z","fill-rule":"nonzero"})),PICKUP:h("svg",{width:"20",height:"20",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false"},h("path",{"fill-rule":"nonzero",d:"M16 6c0-3.31-2.69-6-6-6S4 2.69 4 6c0 4.5 6 11 6 11s6-6.5 6-11zM8 6c0-1.1.9-2 2-2s2 .9 2 2a2 2 0 1 1-4 0zM3 18v2h14v-2H3z"}))};return icons[tab];};_this.getButtonContent=function(){var _this$props2=_this.props,tab=_this$props2.tab,tabDetails=_this$props2.tabDetails,config=_this$props2.config;if(config.headerTabType===_constants.TAB_TYPES.TAB){return h("span",null,_this.getIcon(),h(_TextWrapper2.default,{id:"tabs."+tab}));}if(config.headerTabType===_constants.TAB_TYPES.BUTTON){var price=tabDetails&&tabDetails.price;var date=tabDetails&&tabDetails.date;return h("span",{className:"paazl-delimiter"},h("figure",{className:"method-select__button__icon"},_this.getIcon()),h(_TextWrapper2.default,{id:"tabs."+tab,additionalClassName:"tab__title"}),price!==undefined&&h("span",{className:"tab__price"},h(_TextWrapper2.default,{id:"common.fromValue",capitalize:true,spaceAfter:true}),(0,_CurrencyUtils.formatPrice)(price,config,"",true)),date&&h(_StringWrapper2.default,{additionalClassName:"tab__date",content:date,capitalize:true}));}};return _this;}HeaderButton.prototype.render=function render(){var _props=this.props,tab=_props.tab,selectedTab=_props.selectedTab,config=_props.config;var tabSelected=tab===selectedTab;var tabClassName=(0,_classnames2.default)("header__tab tab tab--header method-select__"+config.headerTabType.toLowerCase(),{"tab--selected":tabSelected});return h("button",{className:tabClassName,role:"tab",id:"tab-button-"+tab.toLowerCase(),"aria-controls":"tab-panel-"+tab.toLowerCase(),"aria-selected":tabSelected,onClick:this.onSelectTab},this.getButtonContent());};return HeaderButton;}(_preact.Component);exports.default=HeaderButton;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 180 */
            /***/ (function(module, exports, __webpack_require__) {

                !function(t,n){ true?module.exports=function(t,n,e,i,o){for(n=n.split?n.split("."):n,i=0;i<n.length;i++)t=t?t[n[i]]:o;return t===o?e:t}:"function"==typeof define&&define.amd?define(function(){return function(t,n,e,i,o){for(n=n.split?n.split("."):n,i=0;i<n.length;i++)t=t?t[n[i]]:o;return t===o?e:t}}):t.dlv=function(t,n,e,i,o){for(n=n.split?n.split("."):n,i=0;i<n.length;i++)t=t?t[n[i]]:o;return t===o?e:t}}(this);
//# sourceMappingURL=dlv.umd.js.map


                /***/ }),
            /* 181 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TabsDropdown=function(_Component){_inherits(TabsDropdown,_Component);function TabsDropdown(props){_classCallCheck(this,TabsDropdown);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.onClickDropdown=function(e){e.preventDefault();e.stopPropagation();var open=_this.state.open;if(open){_this.setState({open:false});}else{_this.setState({open:true});document.addEventListener('click',_this.closeDropdown);}};_this.closeDropdown=function(){_this.setState({open:false});document.removeEventListener('click',_this.closeDropdown);};_this.onSelectTab=function(tab){var onSelectTab=_this.props.onSelectTab;onSelectTab(tab);};_this.state={open:false};return _this;}TabsDropdown.prototype.render=function render(){var _this2=this;var _props=this.props,tabs=_props.tabs,activeTab=_props.activeTab;var open=this.state.open;return h("div",{className:"header__select dropdown",onClick:this.onClickDropdown},h("div",{className:"dropdown__source"},h(_TextWrapper2.default,{id:"tabs."+activeTab,additionalClassName:"method-select__tab--"+activeTab.toLowerCase()})),h("div",{className:(0,_classnames2.default)("dropdown__content",{open:open})},tabs&&tabs.filter(function(t){return t!==activeTab;}).map(function(tab){return(// eslint-disable-next-line react/jsx-no-bind
                    h("div",{className:"dropdown__content__item",onClick:_this2.onSelectTab.bind(null,tab)},h(_TextWrapper2.default,{id:"tabs."+tab,additionalClassName:"method-select__tab--"+tab.toLowerCase()})));})));};return TabsDropdown;}(_preact.Component);exports.default=TabsDropdown;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 182 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _constants=__webpack_require__(1);var _Green=__webpack_require__(183);var _Green2=_interopRequireDefault(_Green);var _LightGreen=__webpack_require__(184);var _LightGreen2=_interopRequireDefault(_LightGreen);var _Brown=__webpack_require__(185);var _Brown2=_interopRequireDefault(_Brown);var _Blue=__webpack_require__(186);var _Blue2=_interopRequireDefault(_Blue);var _Red=__webpack_require__(187);var _Red2=_interopRequireDefault(_Red);var _Default=__webpack_require__(188);var _Default2=_interopRequireDefault(_Default);var _Minimal=__webpack_require__(189);var _Minimal2=_interopRequireDefault(_Minimal);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var StyleContainer=function(_Component){_inherits(StyleContainer,_Component);function StyleContainer(props){_classCallCheck(this,StyleContainer);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.getStyle=function(style){switch(style){case _constants.STYLES.DEFAULT:return h(_Default2.default,null);case _constants.STYLES.MINIMAL:return h(_Minimal2.default,null);case _constants.STYLES.GREEN:return h(_Green2.default,null);case _constants.STYLES.LIGHT_GREEN:return h(_LightGreen2.default,null);case _constants.STYLES.BROWN:return h(_Brown2.default,null);case _constants.STYLES.BLUE:return h(_Blue2.default,null);case _constants.STYLES.RED:return h(_Red2.default,null);default:return h(_Default2.default,null);}};return _this;}StyleContainer.prototype.render=function render(){var style=this.props.style;return h("div",null,this.getStyle(style));};return StyleContainer;}(_preact.Component);exports.default=StyleContainer;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 183 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Green=function(_Component){_inherits(Green,_Component);function Green(props){_classCallCheck(this,Green);return _possibleConstructorReturn(this,_Component.call(this,props));}Green.prototype.render=function render(){return h('style',{dangerouslySetInnerHTML:{__html:'\n                :root {\n                    /* Global */\n                    --brand-global-radius: 10px;\n\n                    /* Colors */\n                    --brand-color-background: #FFF;\n                    --brand-color-secondary: #FFF;\n                    --brand-color-border: #D7D5D2;\n                    --brand-color-body: #3E3B38;\n                    --brand-color-primary: #008643;\n                    --brand-color-focus: #FFCC00;\n\n                    /* Fonts */\n                    --brand-font-family-title: "Futura Std", serif;\n                    --brand-font-family-body: "Futura";\n                    --brand-font-weight-regular: 400;\n                    --brand-font-weight-bold: 700;\n\n                    /* Title */\n                    --brand-title-weight: 700;\n                    --brand-title-transform: uppercase;\n                    --brand-title-spacing: 0;\n\n                    /* Input */\n                    --brand-input-border-width: 2px;\n                    --brand-input-border-color: #D7D5D2;\n\n                    /* Button */\n                    --brand-button-radius: 10px;\n                    --brand-button-border-size: 0;\n                    --brand-button-border-color: transparent;\n                    --brand-button-font-color: #FFF;\n                    --brand-button-font-size: 14px;\n                    --brand-button-font-weight: 700;\n                    --brand-button-font-transform: uppercase;\n                    --brand-button-font-spacing: 1px;\n                }\n            '}});};return Green;}(_preact.Component);exports.default=Green;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 184 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var LightGreen=function(_Component){_inherits(LightGreen,_Component);function LightGreen(props){_classCallCheck(this,LightGreen);return _possibleConstructorReturn(this,_Component.call(this,props));}LightGreen.prototype.render=function render(){return h('style',{dangerouslySetInnerHTML:{__html:'\n                :root {\n                    /* Global */\n                    --brand-global-radius: 2px;\n\n                    /* Colors */\n                    --brand-color-background: #FFF;\n                    --brand-color-secondary: #F6F3EF;\n                    --brand-color-border: #DAD6D2;\n                    --brand-color-body: #525252;\n                    --brand-color-primary: #99CC66;\n                    --brand-color-focus: #FFCC00;\n\n                    /* Fonts */\n                    --brand-font-family-title: "Times New Roman", serif;\n                    --brand-font-family-body: "";\n                    --brand-font-weight-regular: 400;\n                    --brand-font-weight-bold: 700;\n\n                    /* Title */\n                    --brand-title-weight: 400;\n                    --brand-title-transform: uppercase;\n                    --brand-title-spacing: 1px;\n\n                    /* Input */\n                    --brand-input-border-width: 0px;\n                    --brand-input-border-color: transparent;\n\n                    /* Button */\n                    --brand-button-radius: 100px;\n                    --brand-button-border-size: 0px;\n                    --brand-button-border-color: transparent;\n                    --brand-button-font-color: #FFF;\n                    --brand-button-font-size: 14px;\n                    --brand-button-font-weight: 400;\n                    --brand-button-font-transform: uppercase;\n                    --brand-button-font-spacing: 1px;\n                  }\n            '}});};return LightGreen;}(_preact.Component);exports.default=LightGreen;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 185 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Brown=function(_Component){_inherits(Brown,_Component);function Brown(props){_classCallCheck(this,Brown);return _possibleConstructorReturn(this,_Component.call(this,props));}Brown.prototype.render=function render(){return h('style',{dangerouslySetInnerHTML:{__html:'\n                :root {\n                    /* Global */\n                    --brand-global-radius: 0;\n\n                    /* Colors */\n                    --brand-color-background: #FFF;\n                    --brand-color-secondary: #FFF;\n                    --brand-color-border: #E1E1E1;\n                    --brand-color-body: #1C1C1C;\n                    --brand-color-primary: #AC8E55;\n                    --brand-color-focus: #FFCC00;\n\n                    /* Fonts */\n                    --brand-font-family-title: "Libre Baskerville", serif;\n                    --brand-font-family-body: "Karla";\n                    --brand-font-weight-regular: 400;\n                    --brand-font-weight-bold: 700;\n\n                    /* Title */\n                    --brand-title-weight: 400;\n                    --brand-title-transform: none;\n                    --brand-title-spacing: 0;\n\n                    /* Input */\n                    --brand-input-border-width: 1px;\n                    --brand-input-border-color: #1C1C1C;\n\n                    /* Button */\n                    --brand-button-radius: 0;\n                    --brand-button-border-size: 0px;\n                    --brand-button-border-color: transparent;\n                    --brand-button-font-color: #FFF;\n                    --brand-button-font-size: 14px;\n                    --brand-button-font-weight: 700;\n                    --brand-button-font-transform: uppercase;\n                    --brand-button-font-spacing: 1px;\n                  }\n            '}});};return Brown;}(_preact.Component);exports.default=Brown;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 186 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Blue=function(_Component){_inherits(Blue,_Component);function Blue(props){_classCallCheck(this,Blue);return _possibleConstructorReturn(this,_Component.call(this,props));}Blue.prototype.render=function render(){return h('style',{dangerouslySetInnerHTML:{__html:'\n                :root {\n                    /* Global */\n                    --brand-global-radius: 0;\n\n                    /* Colors */\n                    --brand-color-background: #FFF;\n                    --brand-color-secondary: #FFF;\n                    --brand-color-border: #D9D9D9;\n                    --brand-color-body: #183051;\n                    --brand-color-primary: #3376CA;\n                    --brand-color-focus: #FFCC00;\n\n                    /* Fonts */\n                    --brand-font-family-title: "Roboto Condensed", serif;\n                    --brand-font-family-body: "Roboto Condensed";\n                    --brand-font-weight-regular: 400;\n                    --brand-font-weight-bold: 700;\n\n                    /* Title */\n                    --brand-title-weight: 400;\n                    --brand-title-transform: uppercase;\n                    --brand-title-spacing: 0;\n\n                    /* Input */\n                    --brand-input-border-width: 1px;\n                    --brand-input-border-color: #183051;\n\n                    /* Button */\n                    --brand-button-radius: 0;\n                    --brand-button-border-size: 0;\n                    --brand-button-border-color: transparent;\n                    --brand-button-font-color: #FFF;\n                    --brand-button-font-size: 14px;\n                    --brand-button-font-weight: 400;\n                    --brand-button-font-transform: uppercase;\n                    --brand-button-font-spacing: 1px;\n                  }\n            '}});};return Blue;}(_preact.Component);exports.default=Blue;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 187 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Red=function(_Component){_inherits(Red,_Component);function Red(props){_classCallCheck(this,Red);return _possibleConstructorReturn(this,_Component.call(this,props));}Red.prototype.render=function render(){return h('style',{dangerouslySetInnerHTML:{__html:'\n                :root {\n                    /* Global */\n                    --brand-global-radius: 0;\n\n                    /* Colors */\n                    --brand-color-background: #FFF;\n                    --brand-color-secondary: #FFF;\n                    --brand-color-border: #D2D2D2;\n                    --brand-color-body: #000000;\n                    --brand-color-primary: #E61B24;\n                    --brand-color-focus: #FFCC00;\n\n                    /* Fonts */\n                    --brand-font-family-title: "Arial", serif;\n                    --brand-font-family-body: "Arial";\n                    --brand-font-weight-regular: 400;\n                    --brand-font-weight-bold: 700;\n\n                    /* Title */\n                    --brand-title-weight: 700;\n                    --brand-title-transform: uppercase;\n                    --brand-title-spacing: 0;\n\n                    /* Input */\n                    --brand-input-border-width: 1px;\n                    --brand-input-border-color: #000;\n\n                    /* Button */\n                    --brand-button-radius: 0;\n                    --brand-button-border-size: 0;\n                    --brand-button-border-color: transparent;\n                    --brand-button-font-color: #FFF;\n                    --brand-button-font-size: 14px;\n                    --brand-button-font-weight: 700;\n                    --brand-button-font-transform: uppercase;\n                    --brand-button-font-spacing: 1px;\n                  }\n            '}});};return Red;}(_preact.Component);exports.default=Red;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 188 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Default=function(_Component){_inherits(Default,_Component);function Default(props){_classCallCheck(this,Default);return _possibleConstructorReturn(this,_Component.call(this,props));}Default.prototype.render=function render(){return h('style',{dangerouslySetInnerHTML:{__html:'\n                :root {\n                     /* Global */\n                    --brand-global-radius: 20px;\n\n                    /* Colors */\n                    --brand-color-background: #FFF;\n                    --brand-color-secondary: #e9e9ef;\n                    --brand-color-border: #282364;\n                    --brand-color-body: #222;\n                    --brand-color-primary: #ff463c;\n                    --brand-color-focus: #008000;\n\n                    /* Fonts */\n                    --brand-font-family-title: "Quicksand", sans-serif;\n                    --brand-font-family-body: "Quicksand", sans-serif;\n                    --brand-font-weight-regular: 400;\n                    --brand-font-weight-bold: 700;\n\n                    /* Title */\n                    --brand-title-weight: 700;\n                    --brand-title-transform: uppercase;\n                    --brand-title-spacing: 0;\n\n                    /* Input */\n                    --brand-input-border-width: 1px;\n                    --brand-input-border-color: #282364;\n\n                    /* Button */\n                    --brand-button-radius: 20px;\n                    --brand-button-border-size: 0;\n                    --brand-button-border-color: transparent;\n                    --brand-button-font-color: #FFF;\n                    --brand-button-font-size: 14px;\n                    --brand-button-font-weight: 400;\n                    --brand-button-font-transform: uppercase;\n                    --brand-button-font-spacing: 1px;\n                  }\n            '}});};return Default;}(_preact.Component);exports.default=Default;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 189 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Default=function(_Component){_inherits(Default,_Component);function Default(props){_classCallCheck(this,Default);return _possibleConstructorReturn(this,_Component.call(this,props));}Default.prototype.render=function render(){return h('style',{dangerouslySetInnerHTML:{__html:'\n                :root {\n                    /* Global */\n                    --brand-global-radius: 0;\n                    \n                    /* Colors */\n                    --brand-color-background: #FFFFFF;\n                    --brand-color-secondary: #F6F6F6;\n                    --brand-color-border: #C2C2C2;\n                    --brand-color-body: #333333;\n                    --brand-color-primary: #FF0000;\n                    --brand-color-focus: #FFFF00;\n                    \n                    /* Fonts */\n                    --brand-font-family-title: "Open Sans", sans-serif;\n                    --brand-font-family-body: "Open Sans", sans-serif;\n                    --brand-font-weight-regular: 300;\n                    --brand-font-weight-bold: 700;\n                    \n                    /* Title */\n                    --brand-title-weight: 600;\n                    --brand-title-transform: normal;\n                    --brand-title-spacing: 0;\n                    \n                    /* Input */\n                    --brand-input-border-width: 1px;\n                    --brand-input-border-color: #C2C2C2;\n                    \n                    /* Button */\n                    --brand-button-radius: 0;\n                    --brand-button-font-color: #FFFFFF;\n                    --brand-button-font-size: 14px;\n                    --brand-button-font-weight: 700;\n                    --brand-button-font-transform: normal;\n                    --brand-button-font-spacing: 1px;\n                    --brand-button-method-background: #333333;\n                    --brand-button-background: #FF0000;\n                  }\n            '}});};return Default;}(_preact.Component);exports.default=Default;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 190 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _DeliveryContainer=__webpack_require__(191);var _DeliveryContainer2=_interopRequireDefault(_DeliveryContainer);var _PickupContainer=__webpack_require__(201);var _PickupContainer2=_interopRequireDefault(_PickupContainer);var _constants=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var BodyContainer=function(_Component){_inherits(BodyContainer,_Component);function BodyContainer(props){_classCallCheck(this,BodyContainer);return _possibleConstructorReturn(this,_Component.call(this,props));}BodyContainer.prototype.render=function render(){var _tabs;var _props=this.props,config=_props.config,selectedTab=_props.selectedTab,onTabLoaded=_props.onTabLoaded;var deliveryActive=selectedTab===_constants.TABS.DELIVERY;var storeActive=selectedTab===_constants.TABS.STORE;var pickupActive=selectedTab===_constants.TABS.PICKUP;var tabs=(_tabs={},_tabs[_constants.TABS.DELIVERY]=h(_DeliveryContainer2.default,{tabActive:deliveryActive,config:config,onTabLoaded:onTabLoaded}),_tabs[_constants.TABS.STORE]=h(_PickupContainer2.default,{tabActive:storeActive,config:config,onTabLoaded:onTabLoaded,isStorePickup:true}),_tabs[_constants.TABS.PICKUP]=h(_PickupContainer2.default,{tabActive:pickupActive,config:config,onTabLoaded:onTabLoaded}),_tabs);return h("section",{className:"paazl__body body"},h("div",{className:"body__panels panels method-select__panels"},config.availableTabs&&config.availableTabs.map(function(t){return tabs[t];})));};return BodyContainer;}(_preact.Component);exports.default=BodyContainer;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 191 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _FooterForm=__webpack_require__(192);var _FooterForm2=_interopRequireDefault(_FooterForm);var _NominatedDateContainer=__webpack_require__(194);var _NominatedDateContainer2=_interopRequireDefault(_NominatedDateContainer);var _RawDateContainer=__webpack_require__(52);var _RawDateContainer2=_interopRequireDefault(_RawDateContainer);var _ConfigUtils=__webpack_require__(36);var _NetworkUtils=__webpack_require__(12);var _constants=__webpack_require__(1);var _TitleForm=__webpack_require__(200);var _TitleForm2=_interopRequireDefault(_TitleForm);var _restApiService=__webpack_require__(38);var _Loader=__webpack_require__(83);var _Loader2=_interopRequireDefault(_Loader);var _CurrencyUtils=__webpack_require__(17);var _DatesEstimationUtils=__webpack_require__(22);var _Logger=__webpack_require__(37);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var DeliveryContainer=function(_Component){_inherits(DeliveryContainer,_Component);function DeliveryContainer(props){_classCallCheck(this,DeliveryContainer);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.componentDidMount=function(){_this.fetchOptions(_this.props.config);};_this.fetchOptions=function(config){if(!config.consigneeCountryCode){return;}var loadPaazlBasedData=config.loadPaazlBasedData,loadCarrierBasedData=config.loadCarrierBasedData;var requestConfiguration=(0,_ConfigUtils.getDeliveryConfig)(config);_this.setOptions([],false,true);if(loadPaazlBasedData){var localRequestConfig=_extends({},requestConfiguration,{includeExternalDeliveryDates:false});(0,_NetworkUtils.doPost)(_constants.OPTION_LIST_URL,localRequestConfig).then(function(res){(0,_Logger.logRequestPerformed)(config,_constants.OPTION_LIST_URL,localRequestConfig);_this.setOptions(res.data&&res.data.shippingOptions,res.data&&res.data.fullDeliveryDateSelection,loadCarrierBasedData);if(loadCarrierBasedData){_this.loadCarrierBasedOptions(config,requestConfiguration);}}).catch(function(e){console.error(e);(0,_Logger.logRequestError)(config,e,_constants.OPTION_LIST_URL,localRequestConfig);_this.setOptions([]);});}if(loadCarrierBasedData&&!loadPaazlBasedData){_this.loadCarrierBasedOptions(config,requestConfiguration);}};_this.loadCarrierBasedOptions=function(config,requestConfiguration){var requestConfig=_extends({},requestConfiguration,{includeExternalDeliveryDates:true});(0,_NetworkUtils.doPost)(_constants.OPTION_LIST_URL,requestConfig).then(function(res){(0,_Logger.logRequestPerformed)(config,_constants.OPTION_LIST_URL,requestConfig);_this.setOptions(res.data&&res.data.shippingOptions,res.data&&res.data.fullDeliveryDateSelection);}).catch(function(e){console.error(e);(0,_Logger.logRequestError)(config,e,_constants.OPTION_LIST_URL,requestConfig);_this.setOptions([]);});};_this.setOptions=function(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var fullDeliveryDateSelection=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var loading=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;var oldPreviousSelectionApplied=_this.state.previousSelectionApplied;var _this$props=_this.props,onTabLoaded=_this$props.onTabLoaded,config=_this$props.config;var isEmpty=options.length===0;var previousSelectionApplied=oldPreviousSelectionApplied;if(!loading&&!isEmpty&&!previousSelectionApplied&&config.previousSelection&&config.previousSelection.previousOption){previousSelectionApplied=true;options=[].concat(options).map(function(o){return _extends({},o,{checked:o.identifier===config.previousSelection.previousOption});});}_this.setState({options:options,fullDeliveryDateSelection:fullDeliveryDateSelection,loading:loading,previousSelectionApplied:previousSelectionApplied});var price=!isEmpty&&(0,_CurrencyUtils.findMinPrice)([].concat(options));var date=!isEmpty&&(0,_DatesEstimationUtils.findMinDate)([].concat(options),config.deliveryRangeFormat);onTabLoaded({tab:_constants.TABS.DELIVERY,isEmpty:isEmpty,price:price,date:date});};_this.onSelectOption=function(identifier,preferredDeliveryDate){var _this$props2=_this.props,tabActive=_this$props2.tabActive,config=_this$props2.config;var _this$state=_this.state,options=_this$state.options,loading=_this$state.loading;if(tabActive&&!loading){(0,_restApiService.checkout)(config,identifier,null,preferredDeliveryDate);_this.setState(_extends({},_this.state,{options:options.map(function(o){return _extends({},o,{checked:o.identifier===identifier,exactDay:preferredDeliveryDate});})}));}};_this.getSelectedOption=function(){var options=_this.state.options;return options&&options.find(function(o){return o.checked;});};_this.getContainer=function(){var config=_this.props.config;var _this$state2=_this.state,options=_this$state2.options,fullDeliveryDateSelection=_this$state2.fullDeliveryDateSelection;if(config.nominatedDateEnabled&&fullDeliveryDateSelection){return h(_NominatedDateContainer2.default,{options:options,onSelectOption:_this.onSelectOption,config:config});}return h(_RawDateContainer2.default,{options:options&&options.slice(0,config.shippingOptionsLimit),onSelectOption:_this.onSelectOption,config:config});};_this.state={options:[],fullDeliveryDateSelection:false,changedManually:false,loading:true};return _this;}DeliveryContainer.prototype.componentDidUpdate=function componentDidUpdate(previousProps){var _props=this.props,config=_props.config,tabActive=_props.tabActive;var _state=this.state,options=_state.options,loading=_state.loading;if((0,_ConfigUtils.isDeliveryConfigChanged)(previousProps.config,config)){this.fetchOptions(config);}if(!previousProps.tabActive&&tabActive){var option=options.find(function(e){return e.checked;});if(option&&!loading){(0,_restApiService.checkout)(this.props.config,option.identifier);}}};DeliveryContainer.prototype.render=function render(){var _props2=this.props,tabActive=_props2.tabActive,config=_props2.config;var loading=this.state.loading;var panelClassName=(0,_classnames2.default)("body__panel panel method-select__panel",{"panel--selected":tabActive});return h("div",{id:"tab-panel-delivery",className:panelClassName,"aria-labelledby":"tab-button-delivery","aria-hidden":!tabActive},h("div",{className:"method-select__tab-content"},h(_Loader2.default,{isLoading:loading}),!loading&&h(_TitleForm2.default,null),!loading&&this.getContainer(),!loading&&h(_FooterForm2.default,{selectedOption:this.getSelectedOption(),config:config})));};return DeliveryContainer;}(_preact.Component);exports.default=DeliveryContainer;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 192 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _DatesEstimationUtils=__webpack_require__(22);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var FooterForm=function(_Component){_inherits(FooterForm,_Component);function FooterForm(props){_classCallCheck(this,FooterForm);return _possibleConstructorReturn(this,_Component.call(this,props));}FooterForm.prototype.render=function render(){var _props=this.props,selectedOption=_props.selectedOption,config=_props.config;var footerText=(0,_DatesEstimationUtils.resolveDateEstimationComponent)(_DatesEstimationUtils.TYPE.DELIVERY_LONG,selectedOption,config.deliveryRangeFormat);var clockIcon=h("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20","aria-hidden":"true",focusable:"false"},h("g",{fill:"none","fill-rule":"evenodd"},h("path",{d:"M0 0h20v20H0z"}),h("path",{className:"colorable",fill:"#000","fill-rule":"nonzero",d:"M9.99166667 1.66666667c-4.6 0-8.325 3.73333333-8.325 8.33333333 0 4.6 3.725 8.3333333 8.325 8.3333333C14.6 18.3333333 18.3333333 14.6 18.3333333 10S14.6 1.66666667 9.99166667 1.66666667zM10 16.6666667c-3.68333333 0-6.66666667-2.9833334-6.66666667-6.6666667 0-3.68333333 2.98333334-6.66666667 6.66666667-6.66666667 3.6833333 0 6.6666667 2.98333334 6.6666667 6.66666667 0 3.6833333-2.9833334 6.6666667-6.6666667 6.6666667zm.4166667-10.83333337H9.16666667v4.99999997l4.37500003 2.625.625-1.025-3.75-2.225V5.83333333z"})));return h("footer",{className:"body__footer footer"},footerText&&h("aside",{className:"footer__message",role:"alert","aria-live":"assertive"},h(_TextWrapper2.default,{Tag:"p",id:"shippingOptions.packageWillBeDelivered",contentBefore:clockIcon,contentAfter:footerText,spaceBetweenSuffix:true})));};return FooterForm;}(_preact.Component);exports.default=FooterForm;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 193 */
            /***/ (function(module, exports, __webpack_require__) {

                var __WEBPACK_AMD_DEFINE_RESULT__;(function (main) {
                    'use strict';

                    /**
                     * Parse or format dates
                     * @class fecha
                     */
                    var fecha = {};
                    var token = /d{1,4}|M{1,4}|YY(?:YY)?|S{1,3}|Do|ZZ|([HhMsDm])\1?|[aA]|"[^"]*"|'[^']*'/g;
                    var twoDigits = /\d\d?/;
                    var threeDigits = /\d{3}/;
                    var fourDigits = /\d{4}/;
                    var word = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i;
                    var literal = /\[([^]*?)\]/gm;
                    var noop = function () {
                    };

                    function shorten(arr, sLen) {
                        var newArr = [];
                        for (var i = 0, len = arr.length; i < len; i++) {
                            newArr.push(arr[i].substr(0, sLen));
                        }
                        return newArr;
                    }

                    function monthUpdate(arrName) {
                        return function (d, v, i18n) {
                            var index = i18n[arrName].indexOf(v.charAt(0).toUpperCase() + v.substr(1).toLowerCase());
                            if (~index) {
                                d.month = index;
                            }
                        };
                    }

                    function pad(val, len) {
                        val = String(val);
                        len = len || 2;
                        while (val.length < len) {
                            val = '0' + val;
                        }
                        return val;
                    }

                    var dayNames = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];
                    var monthNames = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];
                    var monthNamesShort = shorten(monthNames, 3);
                    var dayNamesShort = shorten(dayNames, 3);
                    fecha.i18n = {
                        dayNamesShort: dayNamesShort,
                        dayNames: dayNames,
                        monthNamesShort: monthNamesShort,
                        monthNames: monthNames,
                        amPm: ['am', 'pm'],
                        DoFn: function DoFn(D) {
                            return D + ['th', 'st', 'nd', 'rd'][D % 10 > 3 ? 0 : (D - D % 10 !== 10) * D % 10];
                        }
                    };

                    var formatFlags = {
                        D: function(dateObj) {
                            return dateObj.getDate();
                        },
                        DD: function(dateObj) {
                            return pad(dateObj.getDate());
                        },
                        Do: function(dateObj, i18n) {
                            return i18n.DoFn(dateObj.getDate());
                        },
                        d: function(dateObj) {
                            return dateObj.getDay();
                        },
                        dd: function(dateObj) {
                            return pad(dateObj.getDay());
                        },
                        ddd: function(dateObj, i18n) {
                            return i18n.dayNamesShort[dateObj.getDay()];
                        },
                        dddd: function(dateObj, i18n) {
                            return i18n.dayNames[dateObj.getDay()];
                        },
                        M: function(dateObj) {
                            return dateObj.getMonth() + 1;
                        },
                        MM: function(dateObj) {
                            return pad(dateObj.getMonth() + 1);
                        },
                        MMM: function(dateObj, i18n) {
                            return i18n.monthNamesShort[dateObj.getMonth()];
                        },
                        MMMM: function(dateObj, i18n) {
                            return i18n.monthNames[dateObj.getMonth()];
                        },
                        YY: function(dateObj) {
                            return String(dateObj.getFullYear()).substr(2);
                        },
                        YYYY: function(dateObj) {
                            return pad(dateObj.getFullYear(), 4);
                        },
                        h: function(dateObj) {
                            return dateObj.getHours() % 12 || 12;
                        },
                        hh: function(dateObj) {
                            return pad(dateObj.getHours() % 12 || 12);
                        },
                        H: function(dateObj) {
                            return dateObj.getHours();
                        },
                        HH: function(dateObj) {
                            return pad(dateObj.getHours());
                        },
                        m: function(dateObj) {
                            return dateObj.getMinutes();
                        },
                        mm: function(dateObj) {
                            return pad(dateObj.getMinutes());
                        },
                        s: function(dateObj) {
                            return dateObj.getSeconds();
                        },
                        ss: function(dateObj) {
                            return pad(dateObj.getSeconds());
                        },
                        S: function(dateObj) {
                            return Math.round(dateObj.getMilliseconds() / 100);
                        },
                        SS: function(dateObj) {
                            return pad(Math.round(dateObj.getMilliseconds() / 10), 2);
                        },
                        SSS: function(dateObj) {
                            return pad(dateObj.getMilliseconds(), 3);
                        },
                        a: function(dateObj, i18n) {
                            return dateObj.getHours() < 12 ? i18n.amPm[0] : i18n.amPm[1];
                        },
                        A: function(dateObj, i18n) {
                            return dateObj.getHours() < 12 ? i18n.amPm[0].toUpperCase() : i18n.amPm[1].toUpperCase();
                        },
                        ZZ: function(dateObj) {
                            var o = dateObj.getTimezoneOffset();
                            return (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4);
                        }
                    };

                    var parseFlags = {
                        D: [twoDigits, function (d, v) {
                            d.day = v;
                        }],
                        Do: [new RegExp(twoDigits.source + word.source), function (d, v) {
                            d.day = parseInt(v, 10);
                        }],
                        M: [twoDigits, function (d, v) {
                            d.month = v - 1;
                        }],
                        YY: [twoDigits, function (d, v) {
                            var da = new Date(), cent = +('' + da.getFullYear()).substr(0, 2);
                            d.year = '' + (v > 68 ? cent - 1 : cent) + v;
                        }],
                        h: [twoDigits, function (d, v) {
                            d.hour = v;
                        }],
                        m: [twoDigits, function (d, v) {
                            d.minute = v;
                        }],
                        s: [twoDigits, function (d, v) {
                            d.second = v;
                        }],
                        YYYY: [fourDigits, function (d, v) {
                            d.year = v;
                        }],
                        S: [/\d/, function (d, v) {
                            d.millisecond = v * 100;
                        }],
                        SS: [/\d{2}/, function (d, v) {
                            d.millisecond = v * 10;
                        }],
                        SSS: [threeDigits, function (d, v) {
                            d.millisecond = v;
                        }],
                        d: [twoDigits, noop],
                        ddd: [word, noop],
                        MMM: [word, monthUpdate('monthNamesShort')],
                        MMMM: [word, monthUpdate('monthNames')],
                        a: [word, function (d, v, i18n) {
                            var val = v.toLowerCase();
                            if (val === i18n.amPm[0]) {
                                d.isPm = false;
                            } else if (val === i18n.amPm[1]) {
                                d.isPm = true;
                            }
                        }],
                        ZZ: [/([\+\-]\d\d:?\d\d|Z)/, function (d, v) {
                            if (v === 'Z') v = '+00:00';
                            var parts = (v + '').match(/([\+\-]|\d\d)/gi), minutes;

                            if (parts) {
                                minutes = +(parts[1] * 60) + parseInt(parts[2], 10);
                                d.timezoneOffset = parts[0] === '+' ? minutes : -minutes;
                            }
                        }]
                    };
                    parseFlags.dd = parseFlags.d;
                    parseFlags.dddd = parseFlags.ddd;
                    parseFlags.DD = parseFlags.D;
                    parseFlags.mm = parseFlags.m;
                    parseFlags.hh = parseFlags.H = parseFlags.HH = parseFlags.h;
                    parseFlags.MM = parseFlags.M;
                    parseFlags.ss = parseFlags.s;
                    parseFlags.A = parseFlags.a;


                    // Some common format strings
                    fecha.masks = {
                        default: 'ddd MMM DD YYYY HH:mm:ss',
                        shortDate: 'M/D/YY',
                        mediumDate: 'MMM D, YYYY',
                        longDate: 'MMMM D, YYYY',
                        fullDate: 'dddd, MMMM D, YYYY',
                        shortTime: 'HH:mm',
                        mediumTime: 'HH:mm:ss',
                        longTime: 'HH:mm:ss.SSS'
                    };

                    /***
                     * Format a date
                     * @method format
                     * @param {Date|number} dateObj
                     * @param {string} mask Format of the date, i.e. 'mm-dd-yy' or 'shortDate'
                     */
                    fecha.format = function (dateObj, mask, i18nSettings) {
                        var i18n = i18nSettings || fecha.i18n;

                        if (typeof dateObj === 'number') {
                            dateObj = new Date(dateObj);
                        }

                        if (Object.prototype.toString.call(dateObj) !== '[object Date]' || isNaN(dateObj.getTime())) {
                            throw new Error('Invalid Date in fecha.format');
                        }

                        mask = fecha.masks[mask] || mask || fecha.masks['default'];

                        var literals = [];

                        // Make literals inactive by replacing them with ??
                        mask = mask.replace(literal, function($0, $1) {
                            literals.push($1);
                            return '??';
                        });
                        // Apply formatting rules
                        mask = mask.replace(token, function ($0) {
                            return $0 in formatFlags ? formatFlags[$0](dateObj, i18n) : $0.slice(1, $0.length - 1);
                        });
                        // Inline literal values back into the formatted value
                        return mask.replace(/\?\?/g, function() {
                            return literals.shift();
                        });
                    };

                    /**
                     * Parse a date string into an object, changes - into /
                     * @method parse
                     * @param {string} dateStr Date string
                     * @param {string} format Date parse format
                     * @returns {Date|boolean}
                     */
                    fecha.parse = function (dateStr, format, i18nSettings) {
                        var i18n = i18nSettings || fecha.i18n;

                        if (typeof format !== 'string') {
                            throw new Error('Invalid format in fecha.parse');
                        }

                        format = fecha.masks[format] || format;

                        // Avoid regular expression denial of service, fail early for really long strings
                        // https://www.owasp.org/index.php/Regular_expression_Denial_of_Service_-_ReDoS
                        if (dateStr.length > 1000) {
                            return false;
                        }

                        var isValid = true;
                        var dateInfo = {};
                        format.replace(token, function ($0) {
                            if (parseFlags[$0]) {
                                var info = parseFlags[$0];
                                var index = dateStr.search(info[0]);
                                if (!~index) {
                                    isValid = false;
                                } else {
                                    dateStr.replace(info[0], function (result) {
                                        info[1](dateInfo, result, i18n);
                                        dateStr = dateStr.substr(index + result.length);
                                        return result;
                                    });
                                }
                            }

                            return parseFlags[$0] ? '' : $0.slice(1, $0.length - 1);
                        });

                        if (!isValid) {
                            return false;
                        }

                        var today = new Date();
                        if (dateInfo.isPm === true && dateInfo.hour != null && +dateInfo.hour !== 12) {
                            dateInfo.hour = +dateInfo.hour + 12;
                        } else if (dateInfo.isPm === false && +dateInfo.hour === 12) {
                            dateInfo.hour = 0;
                        }

                        var date;
                        if (dateInfo.timezoneOffset != null) {
                            dateInfo.minute = +(dateInfo.minute || 0) - +dateInfo.timezoneOffset;
                            date = new Date(Date.UTC(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,
                                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0));
                        } else {
                            date = new Date(dateInfo.year || today.getFullYear(), dateInfo.month || 0, dateInfo.day || 1,
                                dateInfo.hour || 0, dateInfo.minute || 0, dateInfo.second || 0, dateInfo.millisecond || 0);
                        }
                        return date;
                    };

                    /* istanbul ignore next */
                    if (typeof module !== 'undefined' && module.exports) {
                        module.exports = fecha;
                    } else if (true) {
                        !(__WEBPACK_AMD_DEFINE_RESULT__ = (function () {
                            return fecha;
                        }).call(exports, __webpack_require__, exports, module),
                        __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
                    } else {
                        main.fecha = fecha;
                    }
                })(this);


                /***/ }),
            /* 194 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _class,_temp,_initialiseProps;var _preact=__webpack_require__(0);var _TypeNavigation=__webpack_require__(195);var _TypeNavigation2=_interopRequireDefault(_TypeNavigation);var _constants=__webpack_require__(1);var _DateGroupsContainer=__webpack_require__(196);var _DateGroupsContainer2=_interopRequireDefault(_DateGroupsContainer);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _RawDateContainer=__webpack_require__(52);var _RawDateContainer2=_interopRequireDefault(_RawDateContainer);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var NominatedDateContainer=(_temp=_class=function(_Component){_inherits(NominatedDateContainer,_Component);function NominatedDateContainer(props){_classCallCheck(this,NominatedDateContainer);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_initialiseProps.call(_this);var config=props.config;var selectedType=config.previousSelection&&config.previousSelection.previousDeliveryType?config.previousSelection.previousDeliveryType:_constants.DELIVERY_TYPES.ESTIMATED_DATE;_this.state={changedManually:false,selectedType:selectedType};return _this;}NominatedDateContainer.prototype.render=function render(){var selectedType=this.state.selectedType;var config=this.props.config;var estimatedDateOptions=this.getEstimatedDateOptions();var exactDateOptions=this.getExactDateOptions();var hasEstimatedDateOptions=estimatedDateOptions&&estimatedDateOptions.length>0;var hasExactDateOptions=exactDateOptions&&exactDateOptions.length>0;this.switchToVisibleType(hasExactDateOptions,hasEstimatedDateOptions);return h("section",{className:"body__tabs tabs type-select",id:"type-picker"},h(_TypeNavigation2.default,{selectedType:selectedType,config:config,onSelectType:this.onSelectType,estimatedDateOptions:estimatedDateOptions,exactDateOptions:exactDateOptions}),h("div",{className:"tabs__panels type-select__panels"},this.getEstimatedDateTab(estimatedDateOptions),this.getExactDateTab(exactDateOptions)));};return NominatedDateContainer;}(_preact.Component),_initialiseProps=function _initialiseProps(){var _this2=this;this.onSelectType=function(selectedType){localStorage.setItem(_constants.STORAGE_DELIVERY_TYPE_KEY,selectedType);_this2.setState({selectedType:selectedType,changedManually:true});};this.getExactDateOptions=function(){var options=_this2.props.options;return options&&options.filter(function(o){return o.deliveryDates&&o.deliveryDates.length;});};this.getEstimatedDateOptions=function(){var options=_this2.props.options;return options&&options.filter(function(o){return!o.deliveryDates||!o.deliveryDates.length;});};this.switchToVisibleType=function(hasExactDateOptions,hasEstimatedDateOptions){var selectedType=_this2.state.selectedType;if(!hasExactDateOptions&&!hasEstimatedDateOptions){return;}if(!hasExactDateOptions&&selectedType===_constants.DELIVERY_TYPES.EXACT_DATE){_this2.onSelectType(_constants.DELIVERY_TYPES.ESTIMATED_DATE);}if(!hasEstimatedDateOptions&&selectedType===_constants.DELIVERY_TYPES.ESTIMATED_DATE){_this2.onSelectType(_constants.DELIVERY_TYPES.EXACT_DATE);}};this.getEstimatedDateTab=function(options){var selectedType=_this2.state.selectedType;var _props=_this2.props,onSelectOption=_props.onSelectOption,config=_props.config;var isSelected=_constants.DELIVERY_TYPES.ESTIMATED_DATE===selectedType;var estimatedDateClassName=(0,_classnames2.default)("tabs__panels__panel type-select__panel panel",{"panel--selected":isSelected});return h("div",{className:estimatedDateClassName,id:"type-picker__panel--0","aria-labelledby":"type-picker__btn--0","aria-hidden":!isSelected},h("div",{className:"type-select__tab-content"},isSelected&&h(_RawDateContainer2.default,{options:options,onSelectOption:onSelectOption,config:config})));};this.getExactDateTab=function(options){var _state=_this2.state,selectedType=_state.selectedType,changedManually=_state.changedManually;var _props2=_this2.props,onSelectOption=_props2.onSelectOption,currency=_props2.currency,deliveryRangeFormat=_props2.deliveryRangeFormat,isPricingEnabled=_props2.isPricingEnabled,isShowAsExtraCost=_props2.isShowAsExtraCost,config=_props2.config;var isSelected=_constants.DELIVERY_TYPES.EXACT_DATE===selectedType;var exactDateClassName=(0,_classnames2.default)("tabs__panels__panel type-select__panel panel",{"panel--selected":isSelected});return h("div",{className:exactDateClassName,id:"type-picker__panel--1","aria-labelledby":"type-picker__btn--1","aria-hidden":!isSelected},h("div",{className:"type-select__tab-content"},isSelected&&h(_DateGroupsContainer2.default,{options:options,isPricingEnabled:isPricingEnabled,isShowAsExtraCost:isShowAsExtraCost,currency:currency,onSelectOption:onSelectOption,deliveryRangeFormat:deliveryRangeFormat,config:config,changedManually:changedManually})));};},_temp);exports.default=NominatedDateContainer;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 195 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _constants=__webpack_require__(1);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _CurrencyUtils=__webpack_require__(17);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TypeNavigation=function(_Component){_inherits(TypeNavigation,_Component);function TypeNavigation(props){_classCallCheck(this,TypeNavigation);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.showEstimatedDate=function(){var onSelectType=_this.props.onSelectType;onSelectType(_constants.DELIVERY_TYPES.ESTIMATED_DATE);};_this.showExactDate=function(){var onSelectType=_this.props.onSelectType;onSelectType(_constants.DELIVERY_TYPES.EXACT_DATE);};return _this;}TypeNavigation.prototype.render=function render(){var _props=this.props,selectedType=_props.selectedType,exactDateOptions=_props.exactDateOptions,estimatedDateOptions=_props.estimatedDateOptions,config=_props.config;var isEstimatedDateSelected=_constants.DELIVERY_TYPES.ESTIMATED_DATE===selectedType;var isExactDateSelected=_constants.DELIVERY_TYPES.EXACT_DATE===selectedType;var estimatedDateClassName=(0,_classnames2.default)("tabs__navigation__tab type-select__tab tab",{"tab--selected":isEstimatedDateSelected});var exactDateClassName=(0,_classnames2.default)("tabs__navigation__tab type-select__tab tab",{"tab--selected":isExactDateSelected});var hasExactDateOptions=exactDateOptions&&exactDateOptions.length>0;var hasEstimatedDateOptions=estimatedDateOptions&&estimatedDateOptions.length>0;var navigationClassName=(0,_classnames2.default)("tabs__navigation type-select__navigation",{"hidden":!hasExactDateOptions||!hasEstimatedDateOptions});return h("nav",{className:navigationClassName},h("ul",{className:"tabs__navigation__listing type-select__listing",role:"presentation"},h("li",{className:"tabs__navigation__item type-select__item",role:"presentation"},h("button",{type:"button",className:estimatedDateClassName,onClick:this.showEstimatedDate,role:"tab",id:"type-picker__btn--0","aria-controls":"type-picker__panel--0","aria-selected":isEstimatedDateSelected},h("span",{className:"paazl-delimiter"},h(_TextWrapper2.default,{id:"tabs.estimatedDate",additionalClassName:"tab__title"}),config.isPricingEnabled&&h("span",{className:"tab__date"},h(_TextWrapper2.default,{id:"common.fromValue",capitalize:true,spaceAfter:true}),(0,_CurrencyUtils.formatPrice)((0,_CurrencyUtils.findMinPrice)(estimatedDateOptions),config,"",true))))),h("li",{className:"tabs__navigation__item type-select__item",role:"presentation"},h("button",{type:"button",className:exactDateClassName,onClick:this.showExactDate,role:"tab",id:"type-picker__btn--1","aria-controls":"type-picker__panel--1","aria-selected":isExactDateSelected},h("span",{className:"paazl-delimiter"},h(_TextWrapper2.default,{id:"tabs.exactDate",additionalClassName:"tab__title"}),config.isPricingEnabled&&h("span",{className:"tab__date"},h(_TextWrapper2.default,{id:"common.fromValue",capitalize:true,spaceAfter:true}),(0,_CurrencyUtils.formatPrice)((0,_CurrencyUtils.findMinPrice)(exactDateOptions),config,"",true)))))));};return TypeNavigation;}(_preact.Component);exports.default=TypeNavigation;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 196 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _class,_temp,_initialiseProps;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _SelectDayDropdown=__webpack_require__(197);var _SelectDayDropdown2=_interopRequireDefault(_SelectDayDropdown);var _SelectDayCarousel=__webpack_require__(198);var _SelectDayCarousel2=_interopRequireDefault(_SelectDayCarousel);var _RawDateContainer=__webpack_require__(52);var _RawDateContainer2=_interopRequireDefault(_RawDateContainer);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _DateTimeUtils=__webpack_require__(13);var _constants=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var DateGroupsContainer=(_temp=_class=function(_Component){_inherits(DateGroupsContainer,_Component);function DateGroupsContainer(props){_classCallCheck(this,DateGroupsContainer);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_initialiseProps.call(_this);var config=props.config,changedManually=props.changedManually;var groups=_this.groupOptionsByDate();var activeGroup=!changedManually&&config.previousSelection&&config.previousSelection.previousPreferredDate?_this.findPreviousGroupIndex(groups):_this.findCheapestGroupIndex(groups);_this.state={activeGroup:activeGroup};return _this;}DateGroupsContainer.prototype.render=function render(){var activeGroup=this.state.activeGroup;var _props=this.props,onSelectOption=_props.onSelectOption,config=_props.config;var groups=this.groupOptionsByDate();return groups&&groups.length>0?h("section",{className:"body__tabs tabs day-select",id:"day-picker"},h(_SelectDayDropdown2.default,{optionGroups:groups,activeGroup:activeGroup,onSelectGroup:this.onSelectGroup}),h(_SelectDayCarousel2.default,{optionGroups:groups,activeGroup:activeGroup,onSelectGroup:this.onSelectGroup}),h("div",{className:"tabs__panels day-select__panels"},groups.map(function(group,index){var isSelected=index===activeGroup;var groupClassName=(0,_classnames2.default)("tabs__panels__panel day-select__panel panel",{"panel--selected":isSelected});return h("div",{className:groupClassName,id:"day-picker__panel--"+index,"aria-labelledby":"day-picker__btn--"+index,"aria-hidden":!isSelected},h("div",{className:"day-select__tab-content"},isSelected&&h(_RawDateContainer2.default,{options:group.groupOptions,exactDate:group.date,config:config,onSelectOption:onSelectOption})));}))):h(_TextWrapper2.default,{id:"shippingOptions.optionsNotFound"});};return DateGroupsContainer;}(_preact.Component),_initialiseProps=function _initialiseProps(){var _this2=this;this.onSelectGroup=function(activeGroup){_this2.setState({activeGroup:activeGroup});};this.groupOptionsByDate=function(){var options=_this2.props.options;var groups=[];options&&options.forEach(function(o){o.deliveryDates&&o.deliveryDates.forEach(function(d){var deliveryDate=(0,_DateTimeUtils.parse)(d.deliveryDate);var index=groups.findIndex(function(g){return g.date.toDateString()===deliveryDate.toDateString();});if(index===-1){groups.push({date:deliveryDate,groupOptions:[_extends({},o,{timeRange:d})]});}else{var optionIndex=groups[index].groupOptions.findIndex(function(go){return go.identifier===o.identifier;});if(optionIndex===-1){groups[index].groupOptions.push(_extends({},o,{timeRange:d}));}}});});groups.sort(function(a,b){return a.date.getTime()-b.date.getTime();});return groups;};this.findPreviousGroupIndex=function(groups){var config=_this2.props.config;var previousIndex=groups.findIndex(function(g){return(0,_DateTimeUtils.format)(g.date,_constants.FORMAT_MASKS.DEFAULT_DATE,true)===config.previousSelection.previousPreferredDate;});return previousIndex!==-1?previousIndex:_this2.findCheapestGroupIndex(groups);};this.findCheapestGroupIndex=function(groups){var cheapestGroupIndex=0;var cheapestPrice=null;groups&&groups.forEach(function(group,i){group.groupOptions.forEach(function(option){if(cheapestPrice===null||option.rate<cheapestPrice){cheapestPrice=option.rate;cheapestGroupIndex=i;}});});return cheapestGroupIndex;};},_temp);exports.default=DateGroupsContainer;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 197 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _DateTimeUtils=__webpack_require__(13);var _constants=__webpack_require__(1);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var SelectDayDropdown=function(_Component){_inherits(SelectDayDropdown,_Component);function SelectDayDropdown(props){_classCallCheck(this,SelectDayDropdown);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.onSelectGroup=function(event){_this.props.onSelectGroup(+event.target.value);};return _this;}SelectDayDropdown.prototype.render=function render(){var _props=this.props,optionGroups=_props.optionGroups,activeGroup=_props.activeGroup;return h("div",{className:"day-select__select select select--calendar"},h("select",{className:"select__source",value:activeGroup,onChange:this.onSelectGroup,"data-no-fancy-select":"true"},optionGroups&&optionGroups.map(function(group,index){return h("option",{value:index},h(_StringWrapper2.default,{content:(0,_DateTimeUtils.format)(group.date,_constants.FORMAT_MASKS.DELIVERY_ESTIMATE_DATE_FORMAT)}));})));};return SelectDayDropdown;}(_preact.Component);exports.default=SelectDayDropdown;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 198 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(__webpack_provided_window_dot_jQuery, h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _DateTimeUtils=__webpack_require__(13);var _constants=__webpack_require__(1);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var $=__webpack_provided_window_dot_jQuery;var SelectDayCarousel=function(_Component){_inherits(SelectDayCarousel,_Component);function SelectDayCarousel(props){_classCallCheck(this,SelectDayCarousel);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.componentDidMount=function(){window.addEventListener("resize",function(){_this.updateDaySelectCompact();});_this.updateDaySelectCompact();};_this.scrollLeft=function(){var checkButtons=_this.checkButtons;var $container=$('.day-select__navigation');var currentScroll=$container.scrollLeft();var width=$container.width();$container.animate({scrollLeft:currentScroll-width},{duration:200,complete:function complete(){checkButtons();}});};_this.scrollRight=function(){var checkButtons=_this.checkButtons;var $container=$('.day-select__navigation');var currentScroll=$container.scrollLeft();var width=$container.width();$container.animate({scrollLeft:currentScroll+width},{duration:200,complete:function complete(){checkButtons();}});};_this.checkButtons=function(){var _this$state=_this.state,canScrollLeft=_this$state.canScrollLeft,canScrollRight=_this$state.canScrollRight;var $container=$('.day-select__navigation');var $listing=$('.day-select__listing');var innerWidth=$listing[0].scrollWidth;var width=$container.width();var margin=10;var maxScroll=innerWidth-width-margin;var currentScroll=$container.scrollLeft();if(currentScroll<=0){_this.setState({canScrollLeft:false});}if(currentScroll>0&&!canScrollLeft){_this.setState({canScrollLeft:true});}if(currentScroll>=maxScroll){_this.setState({canScrollRight:false});}if(currentScroll<maxScroll&&!canScrollRight){_this.setState({canScrollRight:true});}};_this.state={canScrollLeft:false,canScrollRight:false};return _this;}SelectDayCarousel.prototype.updateDaySelectCompact=function updateDaySelectCompact(){var daySelectWidth=$('.day-select__navigation').width();var containerSize=425;// 425px is minimal size to correct displaying styles on the day select carousel
                    var daySelectCompact=daySelectWidth<containerSize;var visibleTabs=daySelectCompact?3:4;var canScrollRight=this.props.optionGroups&&this.props.optionGroups.length>visibleTabs;this.setState({daySelectCompact:daySelectCompact,canScrollRight:canScrollRight});};SelectDayCarousel.prototype.render=function render(){var _props=this.props,optionGroups=_props.optionGroups,activeGroup=_props.activeGroup,onSelectGroup=_props.onSelectGroup;var _state=this.state,canScrollLeft=_state.canScrollLeft,canScrollRight=_state.canScrollRight,daySelectCompact=_state.daySelectCompact;return h("section",{className:"day-select__slider",role:"region","aria-label":"Select a day"},h("button",{className:(0,_classnames2.default)("day-select__slide day-select__slide--previous",{disabled:!canScrollLeft}),"aria-label":"previous","aria-controls":"carousel",onClick:this.scrollLeft,disabled:!canScrollLeft},h("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20"},h("g",{fill:"none","fill-rule":"evenodd"},h("path",{d:"M20 20H0V0h20z"}),h("path",{className:"colorable",fill:"#000","fill-rule":"nonzero",d:"M11.667 15l1.175-1.175L9.025 10l3.817-3.825L11.667 5l-5 5z"}))),"Previous"),h("nav",{onScroll:this.checkButtons,className:"tabs__navigation day-select__navigation","aria-label":"carousel"},h("ul",{className:"tabs__navigation__listing day-select__listing",role:"presentation"},optionGroups&&optionGroups.map(function(group,index){var tabSelected=index===activeGroup;var tabButtonClassName=(0,_classnames2.default)("tabs__navigation__tab day-select__tab tab",{"tab--selected":tabSelected});var onClick=function onClick(){return onSelectGroup(index);};var liClassName=(0,_classnames2.default)("tabs__navigation__item",{"day-select__item":!daySelectCompact},{"day-select__item-compact":daySelectCompact});return h("li",{className:liClassName,role:"presentation"},h("button",{type:"button",role:"tab",id:"day-picker__btn--"+index,"aria-controls":"day-picker__panel--"+index,"aria-selected":tabSelected,className:tabButtonClassName,onClick:onClick},h("span",{className:"paazl-delimiter"},h(_StringWrapper2.default,{additionalClassName:"tab__title",content:(0,_DateTimeUtils.getDayName)(group.date)}),h(_StringWrapper2.default,{additionalClassName:"tab__date",content:(0,_DateTimeUtils.format)(group.date,_constants.FORMAT_MASKS.DAY_MONTH)}))));}))),h("button",{className:(0,_classnames2.default)("day-select__slide day-select__slide--next",{disabled:!canScrollRight}),"aria-label":"next","aria-controls":"carousel",onClick:this.scrollRight,disabled:!canScrollRight},h("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20"},h("g",{fill:"none","fill-rule":"evenodd"},h("path",{d:"M0 0h20v20H0z"}),h("path",{className:"colorable",fill:"#000","fill-rule":"nonzero",d:"M8.333 5L7.158 6.175 10.975 10l-3.817 3.825L8.333 15l5-5z"}))),"Next"));};return SelectDayCarousel;}(_preact.Component);exports.default=SelectDayCarousel;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(75), __webpack_require__(0)["h"]))

                /***/ }),
            /* 199 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _DateTimeUtils=__webpack_require__(13);var _constants=__webpack_require__(1);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);var _CurrencyUtils=__webpack_require__(17);var _NetworkUtils=__webpack_require__(12);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var OptionRowForm=function(_Component){_inherits(OptionRowForm,_Component);function OptionRowForm(props){_classCallCheck(this,OptionRowForm);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.setInputRef=function(node){_this.inputRef=node;};_this.loadCarrierLogo=function(logoUrl,config){(0,_NetworkUtils.doGet)(logoUrl,config).then(function(res){_this.setState({carrierLogoImage:!res||!res.data?"":"data:image/svg+xml;base64,"+res.data,imageAvailable:true});}).catch(function(err){console.error(err);_this.setState({carrierLogoImage:""});});};_this.getOptionDescription=function(){var option=_this.props.option;return option.description&&h(_StringWrapper2.default,{Tag:"p",additionalClassName:"option__information",content:option.description,notranslate:true});};_this.getPrice=function(){var _this$props=_this.props,option=_this$props.option,config=_this$props.config;return(0,_CurrencyUtils.formatPrice)(option.rate,config,"option__radio__price");};_this.getDeliveryEstimate=function(){var _this$props2=_this.props,option=_this$props2.option,exactDate=_this$props2.exactDate;var estimatedDeliveryRange=option.estimatedDeliveryRange;if(estimatedDeliveryRange&&!exactDate){return _this.renderEstimatedDeliveryRange(estimatedDeliveryRange);}if(option.deliveryDates&&option.deliveryDates.length){var index=0;if(exactDate){index=option.deliveryDates.findIndex(function(d){return exactDate.getTime()===(0,_DateTimeUtils.parse)(d.deliveryDate).getTime();});}var deliveryDate=(0,_DateTimeUtils.convertDateString)(option.deliveryDates[index].deliveryDate,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.DELIVERY_OPTION_DATE_FORMAT);var start=option.deliveryDates[index].timeRange.start;var end=option.deliveryDates[index].timeRange.end;if(start&&end){return exactDate?start+" - "+end:deliveryDate+", "+start+" - "+end;}return!exactDate&&deliveryDate;}};_this.renderEstimatedDeliveryRange=function(estimatedDeliveryRange){var config=_this.props.config;if(config.deliveryRangeFormat===_constants.DELIVERY_FORMATS.NUMBER||!estimatedDeliveryRange.earliestDate||!estimatedDeliveryRange.latestDate){return h(_TextWrapper2.default,{id:"shippingOptions.deliveryBusinessDays",fields:{min:estimatedDeliveryRange.min,max:estimatedDeliveryRange.max}});}var earliestDate=(0,_DateTimeUtils.convertDateString)(estimatedDeliveryRange.earliestDate,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.DELIVERY_OPTION_DATE_FORMAT);var latestDate=(0,_DateTimeUtils.convertDateString)(estimatedDeliveryRange.latestDate,_constants.FORMAT_MASKS.DEFAULT_DATE,_constants.FORMAT_MASKS.DELIVERY_OPTION_DATE_FORMAT);return earliestDate+" - "+latestDate;};_this.onSelectOption=function(){var _this$props3=_this.props,option=_this$props3.option,onSelectOption=_this$props3.onSelectOption,exactDate=_this$props3.exactDate;if(!option.checked){onSelectOption&&onSelectOption(option.identifier,exactDate);}_this.inputRef&&_this.inputRef.focus();};_this.handleImageError=function(){_this.setState({imageAvailable:false});};_this.onFocusIn=function(){_this.setState({focused:true});};_this.onFocusOut=function(){_this.setState({focused:false});};_this.state={focused:false,imageAvailable:true,carrierLogoImage:''};return _this;}OptionRowForm.prototype.componentDidMount=function componentDidMount(){var _props=this.props,config=_props.config,option=_props.option;this.loadCarrierLogo(_constants.CARRIER_LOGO_URL+option.carrier.name+".svg",config);};OptionRowForm.prototype.render=function render(){var option=this.props.option;var _state=this.state,imageAvailable=_state.imageAvailable,carrierLogoImage=_state.carrierLogoImage,focused=_state.focused;var checked=option.checked;var deliveryEstimate=this.getDeliveryEstimate();var price=this.getPrice();var optionDescription=this.getOptionDescription();return h("li",{className:"options__item",onClick:this.onSelectOption},h("article",{className:"option"},h("div",{className:(0,_classnames2.default)("option__area",{checked:checked,focused:focused})},h("div",{className:"option__radio paazl-delimiter"},h("p",{className:"option__radio__title"},h("input",{className:"option__hidden",type:"radio",id:"option-"+option.identifier,name:"option",ref:this.setInputRef,checked:checked,onFocus:this.onFocusIn,onBlur:this.onFocusOut}),h("label",{htmlFor:"option-"+option.identifier},h(_StringWrapper2.default,{content:option.name,additionalClassName:"option__radio__title--strong",notranslate:true,capitalize:true}),h(_StringWrapper2.default,{content:deliveryEstimate,additionalClassName:"option__radio__title--default",notranslate:true,capitalize:true}))),price,h("figure",{className:"option__radio__image"},imageAvailable&&h("img",{src:carrierLogoImage,className:"option__radio__image__source polyfill-object-fit-contain",onError:this.handleImageError,title:option.carrier.description,alt:option.carrier.description}))),checked&&h("div",{className:"paazl-delimiter"},h("section",{className:"option__extra"},optionDescription)))));};return OptionRowForm;}(_preact.Component);exports.default=OptionRowForm;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 200 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TitleForm=function(_Component){_inherits(TitleForm,_Component);function TitleForm(props){_classCallCheck(this,TitleForm);return _possibleConstructorReturn(this,_Component.call(this,props));}TitleForm.prototype.render=function render(){return h("header",{className:"body__header"},h(_TextWrapper2.default,{Tag:"h3",htmlId:"delivery-tab-title",additionalClassName:"body__title title",id:"shippingOptions.title"}));};return TitleForm;}(_preact.Component);exports.default=TitleForm;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 201 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _TitleForm=__webpack_require__(202);var _TitleForm2=_interopRequireDefault(_TitleForm);var _FooterForm=__webpack_require__(203);var _FooterForm2=_interopRequireDefault(_FooterForm);var _PickupListContainer=__webpack_require__(207);var _PickupListContainer2=_interopRequireDefault(_PickupListContainer);var _PickupModal=__webpack_require__(212);var _PickupModal2=_interopRequireDefault(_PickupModal);var _restApiService=__webpack_require__(38);var _SimpleMapModal=__webpack_require__(242);var _SimpleMapModal2=_interopRequireDefault(_SimpleMapModal);var _ConfigUtils=__webpack_require__(36);var _Loader=__webpack_require__(83);var _Loader2=_interopRequireDefault(_Loader);var _NetworkUtils=__webpack_require__(12);var _constants=__webpack_require__(1);var _CurrencyUtils=__webpack_require__(17);var _DatesEstimationUtils=__webpack_require__(22);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PickupContainer=function(_Component){_inherits(PickupContainer,_Component);function PickupContainer(props){_classCallCheck(this,PickupContainer);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.componentDidMount=function(){var _this$props=_this.props,config=_this$props.config,isStorePickup=_this$props.isStorePickup;_this.fetchData(config,isStorePickup);};_this.componentWillReceiveProps=function(nextProps){var _this$props2=_this.props,config=_this$props2.config,isStorePickup=_this$props2.isStorePickup;if((0,_ConfigUtils.isPickupConfigChanged)(config,nextProps.config)||isStorePickup!==nextProps.isStorePickup){_this.fetchData(nextProps.config,nextProps.isStorePickup);}if(!_this.props.tabActive&&nextProps.tabActive){_this.checkoutPickupLocation(true);}};_this.fetchData=function(config,isStorePickup){_this.loadPickupLocations(config);if(isStorePickup||!config.availableTabs.includes(_constants.TABS.STORE)){_this.loadStoreLogo(config);}};_this.toggleMapModal=function(modalOpened){_this.switchOpenModalClass(modalOpened);_this.setState({modalOpened:modalOpened});};_this.toggleSimpleMapModal=function(modalSimpleMapOpened,pickupLocation){_this.switchOpenModalClass(modalSimpleMapOpened);_this.setState({modalSimpleMapOpened:modalSimpleMapOpened,modalSimpleMapPickupLocation:pickupLocation});};_this.switchOpenModalClass=function(opened){var scrollTop=_this.state.scrollTop;var htmlBodyElement=document.querySelector('body');var htmlClassList=document.querySelector('html').classList;var bodyClassList=htmlBodyElement.classList;if(opened){var scrolledTop=htmlBodyElement.scrollTop||document.scrollingElement&&document.scrollingElement.scrollTop;htmlClassList.add('paazl-modal-open');bodyClassList.add('paazl-modal-open');_this.setState({scrollTop:scrolledTop});}else{htmlClassList.remove('paazl-modal-open');bodyClassList.remove('paazl-modal-open');htmlBodyElement.scrollTo&&htmlBodyElement.scrollTo(0,scrollTop);document.scrollingElement&&document.scrollingElement.scrollTo(0,scrollTop);}};_this.loadPickupLocations=function(config){var isStorePickup=_this.props.isStorePickup;(0,_restApiService.loadPickupLocations)(config,isStorePickup,_this.setPickupLocations);};_this.loadStoreLogo=function(config){(0,_NetworkUtils.doGet)(_constants.STORE_LOGO_URL,config).then(function(res){_this.setState({storeLogo:!res||!res.data?"":"data:image/svg+xml;base64,"+res.data});}).catch(function(err){console.error(err);_this.setState({storeLogo:""});});};_this.setPickupLocations=function(pickupLocations){var loading=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;var oldPreviousSelectionApplied=_this.state.previousSelectionApplied;var _this$props3=_this.props,tabActive=_this$props3.tabActive,isStorePickup=_this$props3.isStorePickup,onTabLoaded=_this$props3.onTabLoaded,config=_this$props3.config;var isEmpty=pickupLocations.length===0;var previousSelectionApplied=oldPreviousSelectionApplied;if(!isEmpty&&!previousSelectionApplied&&_this.isTabPreviouslySelected()){previousSelectionApplied=true;pickupLocations=[].concat(pickupLocations).map(function(p){var checked=p.code===config.previousSelection.previousPickupCode;var shippingOptionIdentifier=checked?config.previousSelection.previousOption:p.shippingOptions[0].identifier;return _extends({},p,{checked:checked,shippingOptionIdentifier:shippingOptionIdentifier});});}else if(!isEmpty){pickupLocations[0].checked=true;pickupLocations.forEach(function(element){element.shippingOptionIdentifier=element.shippingOptions[0].identifier;});}_this.setState({pickupLocations:pickupLocations,loading:loading,previousSelectionApplied:previousSelectionApplied});_this.checkoutPickupLocation(tabActive);var tab=isStorePickup?_constants.TABS.STORE:_constants.TABS.PICKUP;var options=pickupLocations.reduce(function(acc,p){return acc.concat(p.shippingOptions);},[]);var price=!isEmpty&&(0,_CurrencyUtils.findMinPrice)(options);var date=!isEmpty&&(0,_DatesEstimationUtils.findMinDate)(options,config.deliveryRangeFormat);onTabLoaded({tab:tab,isEmpty:isEmpty,price:price,date:date});};_this.isTabPreviouslySelected=function(){var _this$props4=_this.props,isStorePickup=_this$props4.isStorePickup,config=_this$props4.config;var previousSelection=config.previousSelection;return previousSelection&&previousSelection.previousPickupCode&&(isStorePickup&&previousSelection.previousTab===_constants.TABS.STORE||!isStorePickup&&previousSelection.previousTab===_constants.TABS.PICKUP);};_this.onPickupHere=function(pickupLocations){_this.setState({pickupLocations:pickupLocations});_this.checkoutPickupLocation(true);_this.toggleMapModal(false);};_this.checkoutPickupLocation=function(tabActive){var pickupLocation=_this.state.pickupLocations.find(function(element){return element.checked;});if(pickupLocation&&tabActive){(0,_restApiService.checkout)(_this.props.config,pickupLocation.shippingOptionIdentifier,pickupLocation.code);}};_this.onSelectPickupLocation=function(code){var pickupLocations=_this.state.pickupLocations;_this.setState({pickupLocations:pickupLocations.slice().map(function(o){return _extends({},o,{checked:o.code===code});})});_this.checkoutPickupLocation(true);};_this.getSelectedPickupLocationId=function(){var pickupLocations=_this.state.pickupLocations;if(pickupLocations){var pickupLocationIndex=pickupLocations.findIndex(function(o){return o.checked;});return pickupLocationIndex!==-1?pickupLocations[pickupLocationIndex].code:-1;}return-1;};_this.state={pickupLocations:[],storeLogo:"",modalOpened:false,modalSimpleMapOpened:false,loading:true,previousSelectionApplied:false,scrollTop:0};return _this;}PickupContainer.prototype.render=function render(){var _props=this.props,tabActive=_props.tabActive,isStorePickup=_props.isStorePickup,config=_props.config;var _state=this.state,modalOpened=_state.modalOpened,pickupLocations=_state.pickupLocations,loading=_state.loading,modalSimpleMapOpened=_state.modalSimpleMapOpened,modalSimpleMapPickupLocation=_state.modalSimpleMapPickupLocation,storeLogo=_state.storeLogo;var panelClassName=(0,_classnames2.default)("body__panel panel method-select__panel",{"panel--selected":tabActive});var hasPickupLocations=pickupLocations&&pickupLocations.length>0;return h("div",{id:isStorePickup?"tab-panel-store":"tab-panel-pickup",className:panelClassName,"aria-labelledby":isStorePickup?"tab-button-store":"tab-button-pickup","aria-hidden":!tabActive},h("div",{className:"method-select__tab-content"},h(_Loader2.default,{isLoading:loading}),!loading&&h(_TitleForm2.default,{isStorePickup:isStorePickup}),!loading&&h(_PickupListContainer2.default,{toggleModal:this.toggleMapModal,toggleSimpleMapModal:this.toggleSimpleMapModal,pickupLocations:pickupLocations.slice(0,config.initialPickupLocations),onSelectPickupLocation:this.onSelectPickupLocation,isStorePickup:isStorePickup,storeLogo:storeLogo,config:config}),!loading&&hasPickupLocations&&h(_FooterForm2.default,{pickupLocations:pickupLocations,tabActive:tabActive,isStorePickup:isStorePickup,config:config}),!loading&&h(_PickupModal2.default,{open:modalOpened,toggleModal:this.toggleMapModal,isStorePickup:isStorePickup,storeLogo:storeLogo,config:config,initialPickupLocations:pickupLocations,onPickupHere:this.onPickupHere,selectedPickupLocationId:this.getSelectedPickupLocationId()}),!loading&&h(_SimpleMapModal2.default,{open:modalSimpleMapOpened,toggleMapModal:this.toggleSimpleMapModal,pickupLocation:modalSimpleMapPickupLocation,isStorePickup:isStorePickup,storeLogo:storeLogo,config:config})));};return PickupContainer;}(_preact.Component);exports.default=PickupContainer;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 202 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var TitleForm=function(_Component){_inherits(TitleForm,_Component);function TitleForm(props){_classCallCheck(this,TitleForm);return _possibleConstructorReturn(this,_Component.call(this,props));}TitleForm.prototype.render=function render(){var isStorePickup=this.props.isStorePickup;var pickupType=isStorePickup?"store":"carrier";return h("header",{className:"body__header"},h(_TextWrapper2.default,{Tag:"h3",htmlId:"pickup-tab-title",additionalClassName:"body__title title",id:"pickupLocations."+pickupType+".title"}));};return TitleForm;}(_preact.Component);exports.default=TitleForm;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 203 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _DatesEstimationUtils=__webpack_require__(22);var _PostNumberContainer=__webpack_require__(204);var _PostNumberContainer2=_interopRequireDefault(_PostNumberContainer);var _AppUtils=__webpack_require__(11);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var FooterForm=function(_Component){_inherits(FooterForm,_Component);function FooterForm(props){_classCallCheck(this,FooterForm);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.getSelectedPickupLocation=function(){var pickupLocations=_this.props.pickupLocations;return pickupLocations&&pickupLocations.find(function(element){return element.checked;});};_this.getFooterText=function(selectedOption){var config=_this.props.config;if(selectedOption){return(0,_DatesEstimationUtils.resolveDateEstimationComponent)(_DatesEstimationUtils.TYPE.PICKUP_LONG,selectedOption,config.deliveryRangeFormat);}};return _this;}FooterForm.prototype.render=function render(){var _props=this.props,config=_props.config,tabActive=_props.tabActive,isStorePickup=_props.isStorePickup;var pickupLocation=this.getSelectedPickupLocation();var selectedOption=(0,_AppUtils.findSelectedOptionForPickup)(pickupLocation);var footerText=this.getFooterText(selectedOption);var pickupType=isStorePickup||(0,_AppUtils.isStoreOption)(pickupLocation)?"store":"carrier";var clockIcon=h("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20","aria-hidden":"true",focusable:"false"},h("g",{fill:"none","fill-rule":"evenodd"},h("path",{d:"M0 0h20v20H0z"}),h("path",{className:"colorable",fill:"#000","fill-rule":"nonzero",d:"M9.99166667 1.66666667c-4.6 0-8.325 3.73333333-8.325 8.33333333 0 4.6 3.725 8.3333333 8.325 8.3333333C14.6 18.3333333 18.3333333 14.6 18.3333333 10S14.6 1.66666667 9.99166667 1.66666667zM10 16.6666667c-3.68333333 0-6.66666667-2.9833334-6.66666667-6.6666667 0-3.68333333 2.98333334-6.66666667 6.66666667-6.66666667 3.6833333 0 6.6666667 2.98333334 6.6666667 6.66666667 0 3.6833333-2.9833334 6.6666667-6.6666667 6.6666667zm.4166667-10.83333337H9.16666667v4.99999997l4.37500003 2.625.625-1.025-3.75-2.225V5.83333333z"})));return h("footer",{className:"body__footer footer"},selectedOption&&selectedOption.needsCustomerNumber&&h(_PostNumberContainer2.default,{config:config,selectedOption:selectedOption,pickupLocationCode:pickupLocation&&pickupLocation.code,tabActive:tabActive}),footerText&&h("aside",{className:"footer__message",role:"alert","aria-live":"assertive"},h(_TextWrapper2.default,{Tag:"p",id:"pickupLocations."+pickupType+".packageWillBeReady",contentBefore:clockIcon,contentAfter:footerText,spaceBetweenSuffix:true})));};return FooterForm;}(_preact.Component);exports.default=FooterForm;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 204 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _class,_temp,_initialiseProps;var _preact=__webpack_require__(0);var _PostNumberHeaderForm=__webpack_require__(205);var _PostNumberHeaderForm2=_interopRequireDefault(_PostNumberHeaderForm);var _PostNumberInput=__webpack_require__(206);var _PostNumberInput2=_interopRequireDefault(_PostNumberInput);var _restApiService=__webpack_require__(38);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var STATUS_LOADING="STATUS_LOADING";var STATUS_VALID="VALID";var STATUS_INVALID="INVALID";var PostNumberContainer=(_temp=_class=function(_Component){_inherits(PostNumberContainer,_Component);function PostNumberContainer(props){_classCallCheck(this,PostNumberContainer);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_initialiseProps.call(_this);var postNumber=props.config&&props.config.customerNumber;var stringPostNumber=typeof postNumber==='number'?postNumber.toString():postNumber;_this.state={postNumber:stringPostNumber||'',status:null};return _this;}PostNumberContainer.prototype.componentDidMount=function componentDidMount(){var tabActive=this.props.tabActive;var postNumber=this.state.postNumber;if(tabActive&&postNumber){this.onChangeConfirm();}};PostNumberContainer.prototype.componentDidUpdate=function componentDidUpdate(prevProps){var _props=this.props,selectedOption=_props.selectedOption,tabActive=_props.tabActive;var postNumber=this.state.postNumber;var optionChanged=selectedOption&&selectedOption.identifier!==prevProps.selectedOption.identifier;if(tabActive&&postNumber&&(optionChanged||tabActive!==prevProps.tabActive)){this.onChangeConfirm();}};PostNumberContainer.prototype.render=function render(){var _state=this.state,postNumber=_state.postNumber,status=_state.status;return h("aside",{className:"postnumber"},h(_PostNumberHeaderForm2.default,null),h("form",{className:"postnumber__form"},h(_PostNumberInput2.default,{postNumber:postNumber,onChange:this.onChangePostNumber,onChangeConfirm:this.onChangeConfirm}),status===STATUS_LOADING&&h("figure",{className:"postnumber__status postnumber__status--loading"},"Loading"),status===STATUS_VALID&&h("figure",{className:"postnumber__status postnumber__status--valid"},"Valid"),status===STATUS_INVALID&&h("figure",{className:"postnumber__status postnumber__status--invalid"},"Invalid"),status===STATUS_INVALID&&h("div",{className:"postnumber__status__message"},h(_TextWrapper2.default,{id:"customerNumber.invalidCustomerNumber"}))));};return PostNumberContainer;}(_preact.Component),_initialiseProps=function _initialiseProps(){var _this2=this;this.onChangePostNumber=function(postNumber){_this2.setState({postNumber:postNumber});};this.onChangeConfirm=function(){var _props2=_this2.props,config=_props2.config,selectedOption=_props2.selectedOption,pickupLocationCode=_props2.pickupLocationCode;var postNumber=_this2.state.postNumber;if(!_this2.isPostNumberValid()){_this2.setState({status:STATUS_INVALID});return;}_this2.setState({status:STATUS_LOADING});(0,_restApiService.checkout)(config,selectedOption.identifier,pickupLocationCode,selectedOption.exactDay,postNumber,_this2.onCheckoutSuccess,_this2.onCheckoutError);};this.onCheckoutSuccess=function(res){if(res.status===200){_this2.setState({status:STATUS_VALID});}};this.onCheckoutError=function(err){if(err.response.status===400&&err.response.data.errors&&err.response.data.errors[0].code===2110){_this2.setState({status:STATUS_INVALID});}};this.isPostNumberValid=function(){var postNumber=_this2.state.postNumber;return postNumber&&postNumber.match(/^\d{6,10}$/);};},_temp);exports.default=PostNumberContainer;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 205 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PostNumberHeaderForm=function(_Component){_inherits(PostNumberHeaderForm,_Component);function PostNumberHeaderForm(props){_classCallCheck(this,PostNumberHeaderForm);return _possibleConstructorReturn(this,_Component.call(this,props));}PostNumberHeaderForm.prototype.render=function render(){return h("header",{className:"postnumber__header"},h("h1",{className:"postnumber__title"},h(_TextWrapper2.default,{id:"customerNumber.title"}),h("span",{className:"postnumber__title--status"},h(_StringWrapper2.default,{content:" ("}),h(_TextWrapper2.default,{id:"customerNumber.required"}),h(_StringWrapper2.default,{content:")"}))),h("p",{className:"postnumber__description"},h(_TextWrapper2.default,{id:"customerNumber.description"})));};return PostNumberHeaderForm;}(_preact.Component);exports.default=PostNumberHeaderForm;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 206 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _constants=__webpack_require__(1);function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PostNumberInput=function(_Component){_inherits(PostNumberInput,_Component);function PostNumberInput(props){_classCallCheck(this,PostNumberInput);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.getInputText=function(){var postNumber=_this.props.postNumber;return postNumber&&postNumber.match(/.{1,3}/g).join(" ");};_this.onChangeInputText=function(e){var onChange=_this.props.onChange;onChange&&onChange(e.target.value.replace(/\D/g,''));};_this.checkEnterKeyPress=function(e){var onChangeConfirm=_this.props.onChangeConfirm;if(e.keyCode===13){e.preventDefault();e.stopPropagation();onChangeConfirm();}};return _this;}PostNumberInput.prototype.render=function render(){var onChangeConfirm=this.props.onChangeConfirm;return h("div",{className:"postnumber__input"},h("label",{className:"postnumber__label"},h("figure",{className:"postnumber__logo"},h("img",{className:"postnumber__logo__source",src:_constants.IMAGES_BASE_URL+"logo-dhl.png"}))),h("input",{className:"postnumber__field",type:"text",value:this.getInputText(),onInput:this.onChangeInputText,onBlur:onChangeConfirm,onKeyPress:this.checkEnterKeyPress,placeholder:"123 456 789 0",id:"postnumber-input",maxLength:"13"}));};return PostNumberInput;}(_preact.Component);exports.default=PostNumberInput;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 207 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _PickupElement=__webpack_require__(208);var _PickupElement2=_interopRequireDefault(_PickupElement);var _DifferentLocationButton=__webpack_require__(211);var _DifferentLocationButton2=_interopRequireDefault(_DifferentLocationButton);var _ItemsNotFoundForm=__webpack_require__(53);var _ItemsNotFoundForm2=_interopRequireDefault(_ItemsNotFoundForm);var _constants=__webpack_require__(1);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PickupListContainer=function(_Component){_inherits(PickupListContainer,_Component);function PickupListContainer(props){_classCallCheck(this,PickupListContainer);return _possibleConstructorReturn(this,_Component.call(this,props));}PickupListContainer.prototype.render=function render(){var _props=this.props,config=_props.config,pickupLocations=_props.pickupLocations,onSelectPickupLocation=_props.onSelectPickupLocation,toggleModal=_props.toggleModal,toggleSimpleMapModal=_props.toggleSimpleMapModal,isStorePickup=_props.isStorePickup,storeLogo=_props.storeLogo;var currentTab=isStorePickup?_constants.TABS.STORE:_constants.TABS.PICKUP;var sectionClassName=isStorePickup?"store-select":"pickup-select";var listClassName=isStorePickup?"store-select__listing":"pickup-select__listing";var hasItems=pickupLocations&&pickupLocations.length>0;return h("section",{className:sectionClassName},!hasItems&&h(_ItemsNotFoundForm2.default,{tab:currentTab}),h("ul",{className:listClassName,"aria-labelledby":"pickup-tab-title"},hasItems&&pickupLocations.map(function(p){return h(_PickupElement2.default,{config:config,isStorePickup:isStorePickup,storeLogo:storeLogo,pickupLocation:p,onSelectPickupLocation:onSelectPickupLocation,toggleSimpleMapModal:toggleSimpleMapModal});})),h(_DifferentLocationButton2.default,{toggleModal:toggleModal,isStorePickup:isStorePickup}));};return PickupListContainer;}(_preact.Component);exports.default=PickupListContainer;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 208 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _OpeningHoursTooltipLink=__webpack_require__(84);var _OpeningHoursTooltipLink2=_interopRequireDefault(_OpeningHoursTooltipLink);var _DatesEstimationUtils=__webpack_require__(22);var _LabelAddressForm=__webpack_require__(86);var _LabelAddressForm2=_interopRequireDefault(_LabelAddressForm);var _LabelPriceDistanceAsideForm=__webpack_require__(87);var _LabelPriceDistanceAsideForm2=_interopRequireDefault(_LabelPriceDistanceAsideForm);var _AppUtils=__webpack_require__(11);var _StoreLogoForm=__webpack_require__(88);var _StoreLogoForm2=_interopRequireDefault(_StoreLogoForm);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PickupElement=function(_Component){_inherits(PickupElement,_Component);function PickupElement(props){_classCallCheck(this,PickupElement);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.setInputRef=function(node){_this.inputRef=node;};_this.onSelectPickupLocation=function(){var _this$props=_this.props,pickupLocation=_this$props.pickupLocation,onSelectPickupLocation=_this$props.onSelectPickupLocation;if(!pickupLocation.checked){onSelectPickupLocation&&onSelectPickupLocation(pickupLocation.code);}_this.inputRef&&_this.inputRef.focus();};_this.openMapModal=function(e){e.preventDefault();_this.props.toggleSimpleMapModal(true,_this.props.pickupLocation);};_this.getAvailabilityEstimate=function(){var _this$props2=_this.props,pickupLocation=_this$props2.pickupLocation,config=_this$props2.config;var shippingOption=(0,_AppUtils.findSelectedOptionForPickup)(pickupLocation);if(shippingOption){return(0,_DatesEstimationUtils.resolveDateEstimationComponent)(_DatesEstimationUtils.TYPE.PICKUP_SHORT,shippingOption,config.deliveryRangeFormat);}};_this.onFocusIn=function(){_this.setState({focused:true});};_this.onFocusOut=function(){_this.setState({focused:false});};_this.state={focused:false,openingHoursVisible:false};return _this;}PickupElement.prototype.render=function render(){var _props=this.props,pickupLocation=_props.pickupLocation,isStorePickup=_props.isStorePickup,config=_props.config,storeLogo=_props.storeLogo;var focused=this.state.focused;var checked=pickupLocation.checked;var availabilityEstimate=this.getAvailabilityEstimate();var isStore=isStorePickup||(0,_AppUtils.isStoreOption)(pickupLocation);var idPrefix=isStore?"store-":"point-";var itemClassName=isStore?"store-select__item":"pickup-select__item";return h("li",{className:itemClassName},h("article",{className:(0,_classnames2.default)("point",{"point--store":isStore}),key:idPrefix+pickupLocation.code,onClick:this.onSelectPickupLocation},h("div",{className:(0,_classnames2.default)("point__label",{checked:checked,focused:focused})},h("div",{className:"paazl-delimiter"},h("header",{className:"point__header"},h("section",{className:(0,_classnames2.default)("point__main",{"store-logo-missing":!storeLogo})},h(_StoreLogoForm2.default,{isStorePickup:isStore,storeLogo:storeLogo,config:config}),h("section",{className:(0,_classnames2.default)("point__main__body",{"store-logo-missing":!storeLogo})},h("h4",{className:"point__title"},h("input",{type:"radio",className:"point__hidden",id:idPrefix+pickupLocation.code,name:isStore?"selected-store":"selected-point",ref:this.setInputRef,checked:checked,onFocus:this.onFocusIn,onBlur:this.onFocusOut}),h("label",{htmlFor:idPrefix+pickupLocation.code},h(_StringWrapper2.default,{content:pickupLocation.name,notranslate:true}))))),h(_LabelPriceDistanceAsideForm2.default,{pickupLocation:pickupLocation,config:config})),h(_LabelAddressForm2.default,{address:pickupLocation.address,storeLogoMissing:!storeLogo}),h("footer",{className:"point__footer"},h("aside",{className:(0,_classnames2.default)({"point__footer__message":availabilityEstimate})},availabilityEstimate&&h(_TextWrapper2.default,{id:"pickupLocations.available",spaceAfter:true}),availabilityEstimate),h("ul",{className:"point__options"},h("li",{className:"point__options__item point__options__item--map"},h("button",{type:"button",className:"point__options__link link link--location",onClick:this.openMapModal},h("svg",{xmlns:"http://www.w3.org/2000/svg",width:"20",height:"20"},h("g",{fill:"none","fill-rule":"evenodd"},h("path",{d:"M0 0h20v20H0z"}),h("path",{className:"colorable",fill:"#000","fill-rule":"nonzero",d:"M15 6.66666667c0-2.75833334-2.2416667-5-5-5-2.75833333 0-5 2.24166666-5 5 0 3.75000003 5 9.16666663 5 9.16666663s5-5.4166666 5-9.16666663zm-6.66666667 0C8.33333333 5.75 9.08333333 5 10 5c.9166667 0 1.6666667.75 1.6666667 1.66666667 0 .91666666-.7416667 1.66666666-1.6666667 1.66666666-.91666667 0-1.66666667-.75-1.66666667-1.66666666zM4.16666667 16.6666667v1.6666666H15.8333333v-1.6666666H4.16666667z"}))),h(_TextWrapper2.default,{id:"pickupLocations.viewOnMap"}))),h(_OpeningHoursTooltipLink2.default,{openingTimes:pickupLocation.openingTimes})))))));};return PickupElement;}(_preact.Component);exports.default=PickupElement;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 209 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var OpeningHoursRow=function(_Component){_inherits(OpeningHoursRow,_Component);function OpeningHoursRow(props){_classCallCheck(this,OpeningHoursRow);return _possibleConstructorReturn(this,_Component.call(this,props));}OpeningHoursRow.prototype.render=function render(){var _props=this.props,dayOfWeek=_props.dayOfWeek,timeFirstPart=_props.timeFirstPart,timeSecondPart=_props.timeSecondPart;return h("li",{className:"tooltip__listing__item"},h("span",{className:"paazl-delimiter"},h(_StringWrapper2.default,{content:dayOfWeek,additionalClassName:"tooltip__listing__item--day"}),h("span",{className:"tooltip__listing__item--time"},timeFirstPart&&h(_StringWrapper2.default,{additionalClassName:"widget-tooltip--time-part",content:timeFirstPart,notranslate:true}),timeSecondPart&&h(_StringWrapper2.default,{additionalClassName:"widget-tooltip--time-part",content:timeSecondPart,notranslate:true}))));};return OpeningHoursRow;}(_preact.Component);exports.default=OpeningHoursRow;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 210 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                exports.__esModule=true;exports.formatDistance=exports.convertDistance=exports.getDistanceUnit=undefined;var _I18nResolver=__webpack_require__(28);var getDistanceUnit=exports.getDistanceUnit=function getDistanceUnit(distance){var tranlations=(0,_I18nResolver.getCurrentTranslation)();return distance>=1000?tranlations.common.kilometers:tranlations.common.meters;};var convertDistance=exports.convertDistance=function convertDistance(distanceInMeters,decimal){if(distanceInMeters<1000){return distanceInMeters;}return(Math.round(distanceInMeters*1000)/1000/1000).toFixed(decimal);};var formatDistance=exports.formatDistance=function formatDistance(distance){var formattedDistance=convertDistance(distance,1);var distanceUnit=getDistanceUnit(distance);if(!isNaN(formattedDistance)){return formattedDistance+" "+distanceUnit;}};

                /***/ }),
            /* 211 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var DifferentLocationButton=function(_Component){_inherits(DifferentLocationButton,_Component);function DifferentLocationButton(props){_classCallCheck(this,DifferentLocationButton);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.openModal=function(e){e.preventDefault();_this.props.toggleModal(true);};return _this;}DifferentLocationButton.prototype.render=function render(){var isStorePickup=this.props.isStorePickup;var selectDifferentButtonClassName=(0,_classnames2.default)({"pickup-select__button":!isStorePickup},{"store-select__button":isStorePickup},"button button--primary button--location");var pickupType=isStorePickup?"store":"carrier";return h("button",{className:selectDifferentButtonClassName,id:isStorePickup?"open-store-select":"open-pickup-select",onClick:this.openModal},h(_TextWrapper2.default,{id:"pickupLocations."+pickupType+".selectDifferent"}));};return DifferentLocationButton;}(_preact.Component);exports.default=DifferentLocationButton;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 212 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _preact=__webpack_require__(0);var _PickupLocationMapForm=__webpack_require__(89);var _PickupLocationMapForm2=_interopRequireDefault(_PickupLocationMapForm);var _PickupModalListContainer=__webpack_require__(238);var _PickupModalListContainer2=_interopRequireDefault(_PickupModalListContainer);var _restApiService=__webpack_require__(38);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _SearchContainer=__webpack_require__(241);var _SearchContainer2=_interopRequireDefault(_SearchContainer);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PickupModal=function(_Component){_inherits(PickupModal,_Component);function PickupModal(props){_classCallCheck(this,PickupModal);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.componentWillReceiveProps=function(nextProps){var modalOpened=nextProps.open&&!_this.props.open;if(modalOpened&&!_this.state.initialized){_this.setState({pickupLocations:nextProps.initialPickupLocations,initialized:true});}if(modalOpened&&nextProps.selectedPickupLocationId!==-1&&nextProps.selectedPickupLocationId){_this.onSelectPickupLocation(nextProps.selectedPickupLocationId);}};_this.getLocationsPerPage=function(pickupLocations){return pickupLocations&&pickupLocations.slice(0,_this.state.pickupLocationsOnPage);};_this.onSelectPickupLocation=function(code){var pickupLocations=_this.state.pickupLocations;_this.setState({pickupLocations:pickupLocations.map(function(o){return _extends({},o,{checked:o.code===code});})});};_this.onSelectShippingOption=function(code,shippingOptionIdentifier){var pickupLocations=_this.state.pickupLocations;if(pickupLocations){var itemIndex=pickupLocations.findIndex(function(o){return o.code===code;});if(itemIndex!==-1){var pickupLocation=pickupLocations[itemIndex];_this.setState({pickupLocations:[].concat(pickupLocations.slice(0,itemIndex),_extends({},pickupLocation,{shippingOptionIdentifier:shippingOptionIdentifier}),pickupLocations.slice(itemIndex+1))});}}};_this.closeModal=function(){_this.props.toggleModal(false);};_this.limitReached=function(){var _this$state=_this.state,pickupLocationsOnPage=_this$state.pickupLocationsOnPage,pickupLocations=_this$state.pickupLocations;return!pickupLocations||pickupLocationsOnPage>=pickupLocations.length||pickupLocationsOnPage>=_this.props.config.pickupLocationsLimit;};_this.loadMorePickupLocations=function(){var pickupLocationsOnPage=_this.state.pickupLocationsOnPage+_this.props.config.pickupLocationsPageLimit;_this.setState({pickupLocationsOnPage:pickupLocationsOnPage});};_this.loadPickupLocations=function(consigneePostalCode){var _this$props=_this.props,config=_this$props.config,isStorePickup=_this$props.isStorePickup;_this.setState({isLoading:true});(0,_restApiService.loadPickupLocations)(_extends({},config,{consigneePostalCode:consigneePostalCode}),isStorePickup,_this.setPickupLocations);};_this.setPickupLocations=function(pickupLocations){if(pickupLocations.length>0){pickupLocations[0].checked=true;pickupLocations.forEach(function(element){element.shippingOptionIdentifier=element.shippingOptions[0].identifier;});}_this.setState({pickupLocations:pickupLocations,pickupLocationsOnPage:_this.props.config.pickupLocationsPageLimit,isLoading:false});};_this.createPickupLocationRef=function(ref,code){var pickupLocations=_this.state.pickupLocations;if(pickupLocations){var itemIndex=pickupLocations.findIndex(function(o){return o.code===code;});if(itemIndex!==-1){var pickupLocation=pickupLocations[itemIndex];_this.setState({pickupLocations:[].concat(pickupLocations.slice(0,itemIndex),_extends({},pickupLocation,{ref:ref}),pickupLocations.slice(itemIndex+1))});}}};_this.preventScroll=function(e){e.preventDefault();e.stopPropagation();};_this.state={initialized:false,isLoading:false,pickupLocationsOnPage:props.config.pickupLocationsPageLimit};return _this;}PickupModal.prototype.render=function render(){var _props=this.props,open=_props.open,onPickupHere=_props.onPickupHere,config=_props.config,isStorePickup=_props.isStorePickup,storeLogo=_props.storeLogo,initialPickupLocations=_props.initialPickupLocations;var _state=this.state,isLoading=_state.isLoading,pickupLocations=_state.pickupLocations;var idPrefix=isStorePickup?"store-":"pickup-";var pickupType=isStorePickup?"store":"carrier";var modalClassName=(0,_classnames2.default)({"pickup-select__modal modal":!isStorePickup},{"store-select__modal modal":isStorePickup},{open:open});var visiblePickupLocations=this.getLocationsPerPage(pickupLocations);return h("aside",{className:modalClassName,"aria-modal":"true","aria-hidden":!open,id:idPrefix+"select",onScroll:this.preventScroll,onTouchMove:this.preventScroll},h("div",{className:"modal__container"},h("section",{className:"window "+idPrefix+"points",role:"dialog",id:isStorePickup?"store":"pickup"},h("nav",{className:"window__controls"},h("header",{className:"window__header"},h("h3",{className:"window__title",role:"alert","aria-live":"polite"},h(_TextWrapper2.default,{id:"pickupLocations."+pickupType+".title"}))),h(_SearchContainer2.default,{loadPickupLocations:this.loadPickupLocations,config:config}),h(_PickupModalListContainer2.default,{pickupLocations:visiblePickupLocations,initialPickupLocations:initialPickupLocations,isStorePickup:isStorePickup,storeLogo:storeLogo,canLoadMore:!isLoading&&!this.limitReached(),loadMorePickupLocations:this.loadMorePickupLocations,onPickupHere:onPickupHere,onSelectPickupLocation:this.onSelectPickupLocation,onSelectShippingOption:this.onSelectShippingOption,createPickupLocationRef:this.createPickupLocationRef,config:config})),h(_PickupLocationMapForm2.default,{pickupLocations:visiblePickupLocations,isStorePickup:isStorePickup,storeLogo:storeLogo,open:open,onSelectPickupLocation:this.onSelectPickupLocation,config:config}),h("button",{className:"window__close",onClick:this.closeModal},"Close"))));};return PickupModal;}(_preact.Component);exports.default=PickupModal;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 213 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;
                exports.default = undefined;

                var _google_map = __webpack_require__(214);

                var _google_map2 = _interopRequireDefault(_google_map);

                function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

                exports.default = _google_map2.default;

                /***/ }),
            /* 214 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;

                var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

                var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

                var _react = __webpack_require__(29);

                var _react2 = _interopRequireDefault(_react);

                var _propTypes = __webpack_require__(54);

                var _propTypes2 = _interopRequireDefault(_propTypes);

                var _reactDom = __webpack_require__(29);

                var _reactDom2 = _interopRequireDefault(_reactDom);

                var _google_map_map = __webpack_require__(219);

                var _google_map_map2 = _interopRequireDefault(_google_map_map);

                var _marker_dispatcher = __webpack_require__(220);

                var _marker_dispatcher2 = _interopRequireDefault(_marker_dispatcher);

                var _google_map_markers = __webpack_require__(92);

                var _google_map_markers2 = _interopRequireDefault(_google_map_markers);

                var _google_map_markers_prerender = __webpack_require__(222);

                var _google_map_markers_prerender2 = _interopRequireDefault(_google_map_markers_prerender);

                var _google_heatmap = __webpack_require__(223);

                var _google_map_loader = __webpack_require__(224);

                var _google_map_loader2 = _interopRequireDefault(_google_map_loader);

                var _geo = __webpack_require__(226);

                var _geo2 = _interopRequireDefault(_geo);

                var _raf = __webpack_require__(228);

                var _raf2 = _interopRequireDefault(_raf);

                var _pick = __webpack_require__(229);

                var _pick2 = _interopRequireDefault(_pick);

                var _omit = __webpack_require__(93);

                var _omit2 = _interopRequireDefault(_omit);

                var _log = __webpack_require__(230);

                var _log2 = _interopRequireDefault(_log);

                var _isEmpty = __webpack_require__(231);

                var _isEmpty2 = _interopRequireDefault(_isEmpty);

                var _isNumber = __webpack_require__(232);

                var _isNumber2 = _interopRequireDefault(_isNumber);

                var _detect = __webpack_require__(233);

                var _detect2 = _interopRequireDefault(_detect);

                var _shallowEqual = __webpack_require__(94);

                var _shallowEqual2 = _interopRequireDefault(_shallowEqual);

                var _isPlainObject = __webpack_require__(234);

                var _isPlainObject2 = _interopRequireDefault(_isPlainObject);

                var _isArraysEqualEps = __webpack_require__(235);

                var _isArraysEqualEps2 = _interopRequireDefault(_isArraysEqualEps);

                var _detectElementResize = __webpack_require__(236);

                var _detectElementResize2 = _interopRequireDefault(_detectElementResize);

                var _passiveEvents = __webpack_require__(98);

                var _passiveEvents2 = _interopRequireDefault(_passiveEvents);

                function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /* eslint-disable import/no-extraneous-dependencies, react/forbid-prop-types, react/no-find-dom-node, no-console */


// helpers


// loaders


// utils


// consts
                var kEPS = 0.00001;
                var K_GOOGLE_TILE_SIZE = 256;
// real minZoom calculated here _getMinZoom
                var K_IDLE_TIMEOUT = 100;
                var K_IDLE_CLICK_TIMEOUT = 300;
                var DEFAULT_MIN_ZOOM = 3;
// Starting with version 3.32, the maps API calls `draw()` each frame during
// a zoom animation.
                var DRAW_CALLED_DURING_ANIMATION_VERSION = 32;

                function defaultOptions_() /* maps */{
                    return {
                        overviewMapControl: false,
                        streetViewControl: false,
                        rotateControl: true,
                        mapTypeControl: false,
                        // disable poi
                        styles: [{
                            featureType: 'poi',
                            elementType: 'labels',
                            stylers: [{ visibility: 'off' }]
                        }],
                        minZoom: DEFAULT_MIN_ZOOM // dynamically recalculted if possible during init
                    };
                }

                var latLng2Obj = function latLng2Obj(latLng) {
                    return (0, _isPlainObject2.default)(latLng) ? latLng : { lat: latLng[0], lng: latLng[1] };
                };

                var _checkMinZoom = function _checkMinZoom(zoom, minZoom) {
                    if (true) {
                        if (zoom < minZoom) {
                            console.warn('GoogleMap: ' + // eslint-disable-line
                                'minZoom option is less than recommended ' + 'minZoom option for your map sizes.\n' + 'overrided to value ' + minZoom);
                        }
                    }

                    if (minZoom < zoom) {
                        return zoom;
                    }
                    return minZoom;
                };

                var isFullScreen = function isFullScreen() {
                    return document.fullscreen || document.webkitIsFullScreen || document.mozFullScreen || document.msFullscreenElement;
                };

                var GoogleMap = function (_Component) {
                    _inherits(GoogleMap, _Component);

                    // eslint-disable-line

                    function GoogleMap(props) {
                        _classCallCheck(this, GoogleMap);

                        var _this = _possibleConstructorReturn(this, _Component.call(this, props));

                        _this._getMinZoom = function () {
                            if (_this.geoService_.getWidth() > 0 || _this.geoService_.getHeight() > 0) {
                                var tilesPerWidth = Math.ceil(_this.geoService_.getWidth() / K_GOOGLE_TILE_SIZE) + 2;
                                var tilesPerHeight = Math.ceil(_this.geoService_.getHeight() / K_GOOGLE_TILE_SIZE) + 2;
                                var maxTilesPerDim = Math.max(tilesPerWidth, tilesPerHeight);
                                return Math.ceil((0, _log2.default)(maxTilesPerDim));
                            }
                            return DEFAULT_MIN_ZOOM;
                        };

                        _this._computeMinZoom = function (minZoom) {
                            if (!(0, _isEmpty2.default)(minZoom)) {
                                return minZoom;
                            }
                            return _this._getMinZoom();
                        };

                        _this._mapDomResizeCallback = function () {
                            _this.resetSizeOnIdle_ = true;
                            if (_this.maps_) {
                                var originalCenter = _this.props.center || _this.props.defaultCenter;
                                var currentCenter = _this.map_.getCenter();
                                _this.maps_.event.trigger(_this.map_, 'resize');
                                _this.map_.setCenter(_this.props.resetBoundsOnResize ? originalCenter : currentCenter);
                            }
                        };

                        _this._setLayers = function (layerTypes) {
                            layerTypes.forEach(function (layerType) {
                                _this.layers_[layerType] = new _this.maps_[layerType]();
                                _this.layers_[layerType].setMap(_this.map_);
                            });
                        };

                        _this._initMap = function () {
                            // only initialize the map once
                            if (_this.initialized_) {
                                return;
                            }
                            _this.initialized_ = true;

                            var propsCenter = latLng2Obj(_this.props.center || _this.props.defaultCenter);
                            _this.geoService_.setView(propsCenter, _this.props.zoom || _this.props.defaultZoom, 0);

                            _this._onBoundsChanged(); // now we can calculate map bounds center etc...

                            var bootstrapURLKeys = _extends({}, _this.props.apiKey && { key: _this.props.apiKey }, _this.props.bootstrapURLKeys);
                            var libraries = {
                                visualization: _this.props.heatmapLibrary,
                                geometry: _this.props.geometryLibrary,
                                places: _this.props.placesLibrary,
                                drawing: _this.props.drawingLibrary
                            };
                            _this.props.googleMapLoader(bootstrapURLKeys, libraries).then(function (maps) {
                                if (!_this.mounted_) {
                                    return;
                                }

                                var centerLatLng = _this.geoService_.getCenter();

                                var propsOptions = {
                                    zoom: _this.props.zoom || _this.props.defaultZoom,
                                    center: new maps.LatLng(centerLatLng.lat, centerLatLng.lng)
                                };

                                // Start Heatmap
                                if (_this.props.heatmap.positions) {
                                    Object.assign(_this, {
                                        heatmap: (0, _google_heatmap.generateHeatmap)(maps, _this.props.heatmap)
                                    });
                                    (0, _google_heatmap.optionsHeatmap)(_this.heatmap, _this.props.heatmap);
                                }
                                // End Heatmap

                                // prevent to exapose full api
                                // next props must be exposed (console.log(Object.keys(pick(maps, isPlainObject))))
                                // "Animation", "ControlPosition", "MapTypeControlStyle", "MapTypeId",
                                // "NavigationControlStyle", "ScaleControlStyle", "StrokePosition",
                                // "SymbolPath", "ZoomControlStyle",
                                // "event", "DirectionsStatus", "DirectionsTravelMode", "DirectionsUnitSystem",
                                // "DistanceMatrixStatus",
                                // "DistanceMatrixElementStatus", "ElevationStatus", "GeocoderLocationType",
                                // "GeocoderStatus", "KmlLayerStatus",
                                // "MaxZoomStatus", "StreetViewStatus", "TransitMode", "TransitRoutePreference",
                                // "TravelMode", "UnitSystem"
                                var mapPlainObjects = (0, _pick2.default)(maps, _isPlainObject2.default);
                                var options = typeof _this.props.options === 'function' ? _this.props.options(mapPlainObjects) : _this.props.options;
                                var defaultOptions = defaultOptions_(mapPlainObjects);

                                var draggableOptions = !(0, _isEmpty2.default)(_this.props.draggable) && {
                                    draggable: _this.props.draggable
                                };

                                var minZoom = _this._computeMinZoom(options.minZoom);
                                _this.minZoom_ = minZoom;

                                var preMapOptions = _extends({}, defaultOptions, {
                                    minZoom: minZoom
                                }, options, propsOptions);

                                _this.defaultDraggableOption_ = !(0, _isEmpty2.default)(preMapOptions.draggable) ? preMapOptions.draggable : _this.defaultDraggableOption_;

                                var mapOptions = _extends({}, preMapOptions, draggableOptions);

                                mapOptions.minZoom = _checkMinZoom(mapOptions.minZoom, minZoom);

                                var map = new maps.Map(_reactDom2.default.findDOMNode(_this.googleMapDom_), mapOptions);

                                _this.map_ = map;
                                _this.maps_ = maps;

                                _this._setLayers(_this.props.layerTypes);

                                // Parse `google.maps.version` to capture the major version number.
                                var versionMatch = maps.version.match(/^3\.(\d+)\./);
                                // The major version is the first (and only) captured group.
                                var mapsVersion = versionMatch && Number(versionMatch[1]);

                                // render in overlay
                                var this_ = _this;
                                var overlay = Object.assign(new maps.OverlayView(), {
                                    onAdd: function onAdd() {
                                        var K_MAX_WIDTH = typeof screen !== 'undefined' ? screen.width + 'px' : '2000px';
                                        var K_MAX_HEIGHT = typeof screen !== 'undefined' ? screen.height + 'px' : '2000px';

                                        var div = document.createElement('div');
                                        this.div = div;
                                        div.style.backgroundColor = 'transparent';
                                        div.style.position = 'absolute';
                                        div.style.left = '0px';
                                        div.style.top = '0px';
                                        div.style.width = K_MAX_WIDTH; // prevents some chrome draw defects
                                        div.style.height = K_MAX_HEIGHT;

                                        if (this_.props.overlayViewDivStyle) {
                                            var overlayViewDivStyle = this_.props.overlayViewDivStyle;

                                            if ((typeof overlayViewDivStyle === 'undefined' ? 'undefined' : _typeof(overlayViewDivStyle)) === 'object') {
                                                Object.keys(overlayViewDivStyle).forEach(function (property) {
                                                    div.style[property] = overlayViewDivStyle[property];
                                                });
                                            }
                                        }

                                        var panes = this.getPanes();
                                        panes.overlayMouseTarget.appendChild(div);
                                        this_.geoService_.setMapCanvasProjection(maps, overlay.getProjection());
                                        _reactDom2.default.unstable_renderSubtreeIntoContainer(this_, _react2.default.createElement(_google_map_markers2.default, {
                                                experimental: this_.props.experimental,
                                                onChildClick: this_._onChildClick,
                                                onChildMouseDown: this_._onChildMouseDown,
                                                onChildMouseEnter: this_._onChildMouseEnter,
                                                onChildMouseLeave: this_._onChildMouseLeave,
                                                geoService: this_.geoService_,
                                                insideMapPanes: true,
                                                distanceToMouse: this_.props.distanceToMouse,
                                                getHoverDistance: this_._getHoverDistance,
                                                dispatcher: this_.markersDispatcher_
                                            }), div,
                                            // remove prerendered markers
                                            function () {
                                                return this_.setState({ overlayCreated: true });
                                            });
                                    },
                                    onRemove: function onRemove() {
                                        if (this.div) {
                                            _reactDom2.default.unmountComponentAtNode(this.div);
                                        }
                                    },
                                    draw: function draw() {
                                        this_.updateCounter_++;
                                        this_._onBoundsChanged(map, maps, !this_.props.debounced);

                                        if (!this_.googleApiLoadedCalled_) {
                                            this_._onGoogleApiLoaded({ map: map, maps: maps });
                                            this_.googleApiLoadedCalled_ = true;
                                        }

                                        if (this_.mouse_) {
                                            var latLng = this_.geoService_.fromContainerPixelToLatLng(this_.mouse_);
                                            this_.mouse_.lat = latLng.lat;
                                            this_.mouse_.lng = latLng.lng;
                                        }

                                        this_._onChildMouseMove();

                                        if (this_.markersDispatcher_) {
                                            this_.markersDispatcher_.emit('kON_CHANGE');
                                            if (this_.fireMouseEventOnIdle_) {
                                                this_.markersDispatcher_.emit('kON_MOUSE_POSITION_CHANGE');
                                            }
                                        }
                                    }
                                });

                                _this.overlay_ = overlay;

                                overlay.setMap(map);
                                if (_this.props.heatmap.positions) {
                                    _this.heatmap.setMap(map);
                                }

                                if (_this.props.onTilesLoaded) {
                                    maps.event.addListener(map, 'tilesloaded', function () {
                                        this_._onTilesLoaded();
                                    });
                                }

                                maps.event.addListener(map, 'zoom_changed', function () {
                                    // recalc position at zoom start
                                    if (this_.geoService_.getZoom() !== map.getZoom()) {
                                        if (!this_.zoomAnimationInProgress_) {
                                            this_.zoomAnimationInProgress_ = true;
                                            this_._onZoomAnimationStart();
                                        }

                                        // If draw() is not called each frame during a zoom animation,
                                        // simulate it.
                                        if (mapsVersion < DRAW_CALLED_DURING_ANIMATION_VERSION) {
                                            var TIMEOUT_ZOOM = 300;

                                            if (new Date().getTime() - _this.zoomControlClickTime_ < TIMEOUT_ZOOM) {
                                                // there is strange Google Map Api behavior in chrome when zoom animation of map
                                                // is started only on second raf call, if was click on zoom control
                                                // or +- keys pressed, so i wait for two rafs before change state

                                                // this does not fully prevent animation jump
                                                // but reduce it's occurence probability
                                                (0, _raf2.default)(function () {
                                                    return (0, _raf2.default)(function () {
                                                        this_.updateCounter_++;
                                                        this_._onBoundsChanged(map, maps);
                                                    });
                                                });
                                            } else {
                                                this_.updateCounter_++;
                                                this_._onBoundsChanged(map, maps);
                                            }
                                        }
                                    }
                                });

                                maps.event.addListener(map, 'idle', function () {
                                    if (_this.resetSizeOnIdle_) {
                                        _this._setViewSize();
                                        var currMinZoom = _this._computeMinZoom(_this.props.options.minZoom);

                                        if (currMinZoom !== _this.minZoom_) {
                                            _this.minZoom_ = currMinZoom;
                                            map.setOptions({ minZoom: currMinZoom });
                                        }

                                        _this.resetSizeOnIdle_ = false;
                                    }

                                    if (this_.zoomAnimationInProgress_) {
                                        this_.zoomAnimationInProgress_ = false;
                                        this_._onZoomAnimationEnd();
                                    }

                                    this_.updateCounter_++;
                                    this_._onBoundsChanged(map, maps);

                                    this_.dragTime_ = 0;

                                    if (this_.markersDispatcher_) {
                                        this_.markersDispatcher_.emit('kON_CHANGE');
                                    }
                                });

                                maps.event.addListener(map, 'mouseover', function () {
                                    // has advantage over div MouseLeave
                                    this_.mouseInMap_ = true;
                                });

                                // an alternative way to know the mouse is back within the map
                                // This would not fire when clicking/interacting with google maps
                                // own on-map countrols+markers. This handles an edge case for touch devices
                                // + 'draggable:false' custom option. See #332 for more details.
                                maps.event.addListener(map, 'click', function () {
                                    this_.mouseInMap_ = true;
                                });

                                maps.event.addListener(map, 'mouseout', function () {
                                    // has advantage over div MouseLeave
                                    this_.mouseInMap_ = false;
                                    this_.mouse_ = null;
                                    this_.markersDispatcher_.emit('kON_MOUSE_POSITION_CHANGE');
                                });

                                maps.event.addListener(map, 'drag', function () {
                                    this_.dragTime_ = new Date().getTime();
                                    this_._onDrag(map);
                                });
                                // user choosing satellite vs roads, etc
                                maps.event.addListener(map, 'maptypeid_changed', function () {
                                    this_._onMapTypeIdChange(map.getMapTypeId());
                                });
                            }).catch(function (e) {
                                // notify callback of load failure
                                _this._onGoogleApiLoaded({ map: null, maps: null });
                                console.error(e); // eslint-disable-line no-console
                                throw e;
                            });
                        };

                        _this._onGoogleApiLoaded = function () {
                            if (_this.props.onGoogleApiLoaded) {
                                var _this$props;

                                if ("development" !== 'production' && _this.props.yesIWantToUseGoogleMapApiInternals !== true) {
                                    console.warn('GoogleMap: ' + // eslint-disable-line
                                        'Usage of internal api objects is dangerous ' + 'and can cause a lot of issues.\n' + 'To hide this warning add yesIWantToUseGoogleMapApiInternals={true} ' + 'to <GoogleMap instance');
                                }

                                (_this$props = _this.props).onGoogleApiLoaded.apply(_this$props, arguments);
                            }
                        };

                        _this._getHoverDistance = function () {
                            return _this.props.hoverDistance;
                        };

                        _this._onDrag = function () {
                            var _this$props2;

                            return _this.props.onDrag && (_this$props2 = _this.props).onDrag.apply(_this$props2, arguments);
                        };

                        _this._onMapTypeIdChange = function () {
                            var _this$props3;

                            return _this.props.onMapTypeIdChange && (_this$props3 = _this.props).onMapTypeIdChange.apply(_this$props3, arguments);
                        };

                        _this._onZoomAnimationStart = function () {
                            var _this$props4;

                            return _this.props.onZoomAnimationStart && (_this$props4 = _this.props).onZoomAnimationStart.apply(_this$props4, arguments);
                        };

                        _this._onZoomAnimationEnd = function () {
                            var _this$props5;

                            return _this.props.onZoomAnimationEnd && (_this$props5 = _this.props).onZoomAnimationEnd.apply(_this$props5, arguments);
                        };

                        _this._onTilesLoaded = function () {
                            return _this.props.onTilesLoaded && _this.props.onTilesLoaded();
                        };

                        _this._onChildClick = function () {
                            if (_this.props.onChildClick) {
                                var _this$props6;

                                return (_this$props6 = _this.props).onChildClick.apply(_this$props6, arguments);
                            }
                            return undefined;
                        };

                        _this._onChildMouseDown = function (hoverKey, childProps) {
                            _this.childMouseDownArgs_ = [hoverKey, childProps];
                            if (_this.props.onChildMouseDown) {
                                _this.props.onChildMouseDown(hoverKey, childProps, _extends({}, _this.mouse_));
                            }
                        };

                        _this._onChildMouseUp = function () {
                            if (_this.childMouseDownArgs_) {
                                if (_this.props.onChildMouseUp) {
                                    var _this$props7;

                                    (_this$props7 = _this.props).onChildMouseUp.apply(_this$props7, _this.childMouseDownArgs_.concat([_extends({}, _this.mouse_)]));
                                }
                                _this.childMouseDownArgs_ = null;
                                _this.childMouseUpTime_ = new Date().getTime();
                            }
                        };

                        _this._onChildMouseMove = function () {
                            if (_this.childMouseDownArgs_) {
                                if (_this.props.onChildMouseMove) {
                                    var _this$props8;

                                    (_this$props8 = _this.props).onChildMouseMove.apply(_this$props8, _this.childMouseDownArgs_.concat([_extends({}, _this.mouse_)]));
                                }
                            }
                        };

                        _this._onChildMouseEnter = function () {
                            if (_this.props.onChildMouseEnter) {
                                var _this$props9;

                                return (_this$props9 = _this.props).onChildMouseEnter.apply(_this$props9, arguments);
                            }
                            return undefined;
                        };

                        _this._onChildMouseLeave = function () {
                            if (_this.props.onChildMouseLeave) {
                                var _this$props10;

                                return (_this$props10 = _this.props).onChildMouseLeave.apply(_this$props10, arguments);
                            }
                            return undefined;
                        };

                        _this._setViewSize = function () {
                            if (!_this.mounted_) return;
                            if (isFullScreen()) {
                                _this.geoService_.setViewSize(window.innerWidth, window.innerHeight);
                            } else {
                                var mapDom = _reactDom2.default.findDOMNode(_this.googleMapDom_);
                                _this.geoService_.setViewSize(mapDom.clientWidth, mapDom.clientHeight);
                            }
                            _this._onBoundsChanged();
                        };

                        _this._onWindowResize = function () {
                            _this.resetSizeOnIdle_ = true;
                        };

                        _this._onMapMouseMove = function (e) {
                            if (!_this.mouseInMap_) return;

                            var currTime = new Date().getTime();
                            var K_RECALC_CLIENT_RECT_MS = 50;

                            if (currTime - _this.mouseMoveTime_ > K_RECALC_CLIENT_RECT_MS) {
                                _this.boundingRect_ = e.currentTarget.getBoundingClientRect();
                            }
                            _this.mouseMoveTime_ = currTime;

                            var mousePosX = e.clientX - _this.boundingRect_.left;
                            var mousePosY = e.clientY - _this.boundingRect_.top;

                            if (!_this.mouse_) {
                                _this.mouse_ = { x: 0, y: 0, lat: 0, lng: 0 };
                            }

                            _this.mouse_.x = mousePosX;
                            _this.mouse_.y = mousePosY;

                            var latLng = _this.geoService_.fromContainerPixelToLatLng(_this.mouse_);
                            _this.mouse_.lat = latLng.lat;
                            _this.mouse_.lng = latLng.lng;

                            _this._onChildMouseMove();

                            if (currTime - _this.dragTime_ < K_IDLE_TIMEOUT) {
                                _this.fireMouseEventOnIdle_ = true;
                            } else {
                                _this.markersDispatcher_.emit('kON_MOUSE_POSITION_CHANGE');
                                _this.fireMouseEventOnIdle_ = false;
                            }
                        };

                        _this._onClick = function () {
                            var _this$props11;

                            return _this.props.onClick && !_this.childMouseDownArgs_ && new Date().getTime() - _this.childMouseUpTime_ > K_IDLE_CLICK_TIMEOUT && _this.dragTime_ === 0 && (_this$props11 = _this.props).onClick.apply(_this$props11, arguments);
                        };

                        _this._onMapClick = function (event) {
                            if (_this.markersDispatcher_) {
                                // support touch events and recalculate mouse position on click
                                _this._onMapMouseMove(event);
                                var currTime = new Date().getTime();
                                if (currTime - _this.dragTime_ > K_IDLE_TIMEOUT) {
                                    if (_this.mouse_) {
                                        _this._onClick(_extends({}, _this.mouse_, {
                                            event: event
                                        }));
                                    }

                                    _this.markersDispatcher_.emit('kON_CLICK', event);
                                }
                            }
                        };

                        _this._onMapMouseDownNative = function (event) {
                            if (!_this.mouseInMap_) return;

                            _this._onMapMouseDown(event);
                        };

                        _this._onMapMouseDown = function (event) {
                            if (_this.markersDispatcher_) {
                                var currTime = new Date().getTime();
                                if (currTime - _this.dragTime_ > K_IDLE_TIMEOUT) {
                                    // Hovered marker detected at mouse move could be deleted at mouse down time
                                    // so it will be good to force hovered marker recalculation
                                    _this._onMapMouseMove(event);
                                    _this.markersDispatcher_.emit('kON_MDOWN', event);
                                }
                            }
                        };

                        _this._onMapMouseDownCapture = function () {
                            if ((0, _detect2.default)().isChrome) {
                                // to fix strange zoom in chrome
                                _this.zoomControlClickTime_ = new Date().getTime();
                            }
                        };

                        _this._onKeyDownCapture = function () {
                            if ((0, _detect2.default)().isChrome) {
                                _this.zoomControlClickTime_ = new Date().getTime();
                            }
                        };

                        _this._isCenterDefined = function (center) {
                            return center && ((0, _isPlainObject2.default)(center) && (0, _isNumber2.default)(center.lat) && (0, _isNumber2.default)(center.lng) || center.length === 2 && (0, _isNumber2.default)(center[0]) && (0, _isNumber2.default)(center[1]));
                        };

                        _this._onBoundsChanged = function (map, maps, callExtBoundsChange) {
                            if (map) {
                                var gmC = map.getCenter();
                                _this.geoService_.setView([gmC.lat(), gmC.lng()], map.getZoom(), 0);
                            }

                            if ((_this.props.onChange || _this.props.onBoundsChange) && _this.geoService_.canProject()) {
                                var zoom = _this.geoService_.getZoom();
                                var bounds = _this.geoService_.getBounds();
                                var centerLatLng = _this.geoService_.getCenter();

                                if (!(0, _isArraysEqualEps2.default)(bounds, _this.prevBounds_, kEPS)) {
                                    if (callExtBoundsChange !== false) {
                                        var marginBounds = _this.geoService_.getBounds(_this.props.margin);
                                        if (_this.props.onBoundsChange) {
                                            _this.props.onBoundsChange(_this.centerIsObject_ ? _extends({}, centerLatLng) : [centerLatLng.lat, centerLatLng.lng], zoom, bounds, marginBounds);
                                        }

                                        if (_this.props.onChange) {
                                            _this.props.onChange({
                                                center: _extends({}, centerLatLng),
                                                zoom: zoom,
                                                bounds: {
                                                    nw: {
                                                        lat: bounds[0],
                                                        lng: bounds[1]
                                                    },
                                                    se: {
                                                        lat: bounds[2],
                                                        lng: bounds[3]
                                                    },
                                                    sw: {
                                                        lat: bounds[4],
                                                        lng: bounds[5]
                                                    },
                                                    ne: {
                                                        lat: bounds[6],
                                                        lng: bounds[7]
                                                    }
                                                },
                                                marginBounds: {
                                                    nw: {
                                                        lat: marginBounds[0],
                                                        lng: marginBounds[1]
                                                    },
                                                    se: {
                                                        lat: marginBounds[2],
                                                        lng: marginBounds[3]
                                                    },
                                                    sw: {
                                                        lat: marginBounds[4],
                                                        lng: marginBounds[5]
                                                    },
                                                    ne: {
                                                        lat: marginBounds[6],
                                                        lng: marginBounds[7]
                                                    }
                                                },

                                                size: _this.geoService_.hasSize() ? {
                                                    width: _this.geoService_.getWidth(),
                                                    height: _this.geoService_.getHeight()
                                                } : {
                                                    width: 0,
                                                    height: 0
                                                }
                                            });
                                        }

                                        _this.prevBounds_ = bounds;
                                    }
                                }
                            }
                        };

                        _this._registerChild = function (ref) {
                            _this.googleMapDom_ = ref;
                        };

                        _this.mounted_ = false;
                        _this.initialized_ = false;
                        _this.googleApiLoadedCalled_ = false;

                        _this.map_ = null;
                        _this.maps_ = null;
                        _this.prevBounds_ = null;
                        _this.heatmap = null;

                        _this.layers_ = {};

                        _this.mouse_ = null;
                        _this.mouseMoveTime_ = 0;
                        _this.boundingRect_ = null;
                        _this.mouseInMap_ = true;

                        _this.dragTime_ = 0;
                        _this.fireMouseEventOnIdle_ = false;
                        _this.updateCounter_ = 0;

                        _this.markersDispatcher_ = new _marker_dispatcher2.default(_this);
                        _this.geoService_ = new _geo2.default(K_GOOGLE_TILE_SIZE);
                        _this.centerIsObject_ = (0, _isPlainObject2.default)(_this.props.center);

                        _this.minZoom_ = DEFAULT_MIN_ZOOM;
                        _this.defaultDraggableOption_ = true;

                        _this.zoomControlClickTime_ = 0;

                        _this.childMouseDownArgs_ = null;
                        _this.childMouseUpTime_ = 0;

                        _this.googleMapDom_ = null;

                        if (true) {
                            if (_this.props.apiKey) {
                                console.warn('GoogleMap: ' + // eslint-disable-line no-console
                                    'apiKey is deprecated, use ' + 'bootstrapURLKeys={{key: YOUR_API_KEY}} instead.');
                            }

                            if (_this.props.onBoundsChange) {
                                console.warn('GoogleMap: ' + // eslint-disable-line no-console
                                    'onBoundsChange is deprecated, use ' + 'onChange({center, zoom, bounds, ...other}) instead.');
                            }

                            if ((0, _isEmpty2.default)(_this.props.center) && (0, _isEmpty2.default)(_this.props.defaultCenter)) {
                                console.warn('GoogleMap: center or defaultCenter property must be defined' // eslint-disable-line no-console
                                );
                            }

                            if ((0, _isEmpty2.default)(_this.props.zoom) && (0, _isEmpty2.default)(_this.props.defaultZoom)) {
                                console.warn('GoogleMap: zoom or defaultZoom property must be defined' // eslint-disable-line no-console
                                );
                            }
                        }

                        if (_this._isCenterDefined(_this.props.center || _this.props.defaultCenter)) {
                            var propsCenter = latLng2Obj(_this.props.center || _this.props.defaultCenter);
                            _this.geoService_.setView(propsCenter, _this.props.zoom || _this.props.defaultZoom, 0);
                        }

                        _this.zoomAnimationInProgress_ = false;

                        _this.state = {
                            overlayCreated: false
                        };
                        return _this;
                    }

                    GoogleMap.prototype.componentDidMount = function componentDidMount() {
                        var _this2 = this;

                        this.mounted_ = true;
                        (0, _passiveEvents2.default)(window, 'resize', this._onWindowResize, false);
                        (0, _passiveEvents2.default)(window, 'keydown', this._onKeyDownCapture, true);
                        var mapDom = _reactDom2.default.findDOMNode(this.googleMapDom_);
                        // gmap can't prevent map drag if mousedown event already occured
                        // the only workaround I find is prevent mousedown native browser event

                        if (mapDom) {
                            (0, _passiveEvents2.default)(mapDom, 'mousedown', this._onMapMouseDownNative, true);
                        }

                        (0, _passiveEvents2.default)(window, 'mouseup', this._onChildMouseUp, false);
                        var bootstrapURLKeys = _extends({}, this.props.apiKey && { key: this.props.apiKey }, this.props.bootstrapURLKeys);
                        var libraries = {
                            visualization: this.props.heatmapLibrary,
                            geometry: this.props.geometryLibrary,
                            places: this.props.placesLibrary,
                            drawing: this.props.drawingLibrary
                        };
                        this.props.googleMapLoader(bootstrapURLKeys, libraries);
                        // we can start load immediatly

                        setTimeout(function () {
                            // to detect size
                            _this2._setViewSize();
                            if (_this2._isCenterDefined(_this2.props.center || _this2.props.defaultCenter)) {
                                _this2._initMap();
                            }
                        }, 0, this);
                        if (this.props.resetBoundsOnResize) {
                            var that = this;
                            _detectElementResize2.default.addResizeListener(mapDom, that._mapDomResizeCallback);
                        }
                    };

                    GoogleMap.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {
                        var _this3 = this;

                        if (true) {
                            if (!(0, _shallowEqual2.default)(this.props.defaultCenter, nextProps.defaultCenter)) {
                                console.warn("GoogleMap: defaultCenter prop changed. You can't change default props.");
                            }

                            if (!(0, _shallowEqual2.default)(this.props.defaultZoom, nextProps.defaultZoom)) {
                                console.warn("GoogleMap: defaultZoom prop changed. You can't change default props.");
                            }
                        }

                        if (nextProps.updateHeatmap) {
                            setTimeout(function () {
                                return (0, _google_heatmap.optionsHeatmap)(_this3.heatmap, nextProps.heatmap);
                            });
                        }

                        if (!this._isCenterDefined(this.props.center) && this._isCenterDefined(nextProps.center)) {
                            setTimeout(function () {
                                return _this3._initMap();
                            }, 0);
                        }

                        if (this.map_) {
                            var centerLatLng = this.geoService_.getCenter();
                            if (this._isCenterDefined(nextProps.center)) {
                                var nextPropsCenter = latLng2Obj(nextProps.center);
                                var currCenter = this._isCenterDefined(this.props.center) ? latLng2Obj(this.props.center) : null;

                                if (!currCenter || Math.abs(nextPropsCenter.lat - currCenter.lat) + Math.abs(nextPropsCenter.lng - currCenter.lng) > kEPS) {
                                    if (Math.abs(nextPropsCenter.lat - centerLatLng.lat) + Math.abs(nextPropsCenter.lng - centerLatLng.lng) > kEPS) {
                                        this.map_.panTo({
                                            lat: nextPropsCenter.lat,
                                            lng: nextPropsCenter.lng
                                        });
                                    }
                                }
                            }

                            if (!(0, _isEmpty2.default)(nextProps.zoom)) {
                                // if zoom chaged by user
                                if (Math.abs(nextProps.zoom - this.props.zoom) > 0) {
                                    this.map_.setZoom(nextProps.zoom);
                                }
                            }

                            if (!(0, _isEmpty2.default)(this.props.draggable) && (0, _isEmpty2.default)(nextProps.draggable)) {
                                // reset to default
                                this.map_.setOptions({ draggable: this.defaultDraggableOption_ });
                            } else if (!(0, _shallowEqual2.default)(this.props.draggable, nextProps.draggable)) {
                                // also prevent this on window 'mousedown' event to prevent map move
                                this.map_.setOptions({ draggable: nextProps.draggable });
                            }

                            // use shallowEqual to try avoid calling map._setOptions if only the ref changes
                            if (!(0, _isEmpty2.default)(nextProps.options) && !(0, _shallowEqual2.default)(this.props.options, nextProps.options)) {
                                var mapPlainObjects = (0, _pick2.default)(this.maps_, _isPlainObject2.default);
                                var options = typeof nextProps.options === 'function' ? nextProps.options(mapPlainObjects) : nextProps.options;
                                // remove zoom, center and draggable options as these are managed by google-maps-react
                                options = (0, _omit2.default)(options, ['zoom', 'center', 'draggable']);

                                if ('minZoom' in options) {
                                    var minZoom = this._computeMinZoom(options.minZoom);
                                    options.minZoom = _checkMinZoom(options.minZoom, minZoom);
                                }

                                this.map_.setOptions(options);
                            }

                            if (!(0, _shallowEqual2.default)(nextProps.layerTypes, this.props.layerTypes)) {
                                Object.keys(this.layers_).forEach(function (layerKey) {
                                    _this3.layers_[layerKey].setMap(null);
                                    delete _this3.layers_[layerKey];
                                });
                                this._setLayers(nextProps.layerTypes);
                            }
                        }
                    };

                    GoogleMap.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps, nextState) {
                        // draggable does not affect inner components
                        return !(0, _shallowEqual2.default)((0, _omit2.default)(this.props, ['draggable']), (0, _omit2.default)(nextProps, ['draggable'])) || !(0, _shallowEqual2.default)(this.state, nextState);
                    };

                    GoogleMap.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {
                        this.markersDispatcher_.emit('kON_CHANGE');

                        if (!(0, _shallowEqual2.default)(this.props.hoverDistance, prevProps.hoverDistance)) {
                            this.markersDispatcher_.emit('kON_MOUSE_POSITION_CHANGE');
                        }
                    };

                    GoogleMap.prototype.componentWillUnmount = function componentWillUnmount() {
                        this.mounted_ = false;
                        var mapDom = _reactDom2.default.findDOMNode(this.googleMapDom_);
                        if (mapDom) {
                            mapDom.removeEventListener('mousedown', this._onMapMouseDownNative, true);
                        }
                        window.removeEventListener('resize', this._onWindowResize);
                        window.removeEventListener('keydown', this._onKeyDownCapture);
                        window.removeEventListener('mouseup', this._onChildMouseUp, false);
                        if (this.props.resetBoundsOnResize) {
                            _detectElementResize2.default.removeResizeListener(mapDom, this._mapDomResizeCallback);
                        }

                        if (this.overlay_) {
                            // this triggers overlay_.onRemove(), which will unmount the <GoogleMapMarkers/>
                            this.overlay_.setMap(null);
                        }

                        if (this.maps_ && this.map_) {
                            // fix google, as otherwise listeners works even without map
                            this.map_.setOptions({ scrollwheel: false });
                            this.maps_.event.clearInstanceListeners(this.map_);
                        }

                        this.map_ = null;
                        this.maps_ = null;
                        this.markersDispatcher_.dispose();

                        this.resetSizeOnIdle_ = false;

                        delete this.map_;
                        delete this.markersDispatcher_;
                    };
                    // calc minZoom if map size available
                    // it's better to not set minZoom less than this calculation gives
                    // otherwise there is no homeomorphism between screen coordinates and map
                    // (one map coordinate can have different screen coordinates)


                    // this method works only if this.props.onChildMouseDown was called


                    // this method works only if this.props.onChildMouseDown was called


                    // K_IDLE_CLICK_TIMEOUT - looks like 300 is enough


                    // gmap can't prevent map drag if mousedown event already occured
                    // the only workaround I find is prevent mousedown native browser event


                    GoogleMap.prototype.render = function render() {
                        var mapMarkerPrerender = !this.state.overlayCreated ? _react2.default.createElement(_google_map_markers_prerender2.default, {
                            experimental: this.props.experimental,
                            onChildClick: this._onChildClick,
                            onChildMouseDown: this._onChildMouseDown,
                            onChildMouseEnter: this._onChildMouseEnter,
                            onChildMouseLeave: this._onChildMouseLeave,
                            geoService: this.geoService_,
                            insideMapPanes: false,
                            distanceToMouse: this.props.distanceToMouse,
                            getHoverDistance: this._getHoverDistance,
                            dispatcher: this.markersDispatcher_
                        }) : null;

                        return _react2.default.createElement(
                            'div',
                            {
                                style: this.props.style,
                                onMouseMove: this._onMapMouseMove,
                                onMouseDownCapture: this._onMapMouseDownCapture,
                                onClick: this._onMapClick
                            },
                            _react2.default.createElement(_google_map_map2.default, { registerChild: this._registerChild }),
                            mapMarkerPrerender
                        );
                    };

                    return GoogleMap;
                }(_react.Component);

                GoogleMap.propTypes = {
                    apiKey: _propTypes2.default.string,
                    bootstrapURLKeys: _propTypes2.default.any,

                    defaultCenter: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.shape({
                        lat: _propTypes2.default.number,
                        lng: _propTypes2.default.number
                    })]),
                    center: _propTypes2.default.oneOfType([_propTypes2.default.array, _propTypes2.default.shape({
                        lat: _propTypes2.default.number,
                        lng: _propTypes2.default.number
                    })]),
                    defaultZoom: _propTypes2.default.number,
                    zoom: _propTypes2.default.number,
                    onBoundsChange: _propTypes2.default.func,
                    onChange: _propTypes2.default.func,
                    onClick: _propTypes2.default.func,
                    onChildClick: _propTypes2.default.func,
                    onChildMouseDown: _propTypes2.default.func,
                    onChildMouseUp: _propTypes2.default.func,
                    onChildMouseMove: _propTypes2.default.func,
                    onChildMouseEnter: _propTypes2.default.func,
                    onChildMouseLeave: _propTypes2.default.func,
                    onZoomAnimationStart: _propTypes2.default.func,
                    onZoomAnimationEnd: _propTypes2.default.func,
                    onDrag: _propTypes2.default.func,
                    onMapTypeIdChange: _propTypes2.default.func,
                    onTilesLoaded: _propTypes2.default.func,
                    options: _propTypes2.default.any,
                    distanceToMouse: _propTypes2.default.func,
                    hoverDistance: _propTypes2.default.number,
                    debounced: _propTypes2.default.bool,
                    margin: _propTypes2.default.array,
                    googleMapLoader: _propTypes2.default.any,
                    onGoogleApiLoaded: _propTypes2.default.func,
                    yesIWantToUseGoogleMapApiInternals: _propTypes2.default.bool,
                    draggable: _propTypes2.default.bool,
                    style: _propTypes2.default.any,
                    resetBoundsOnResize: _propTypes2.default.bool,
                    layerTypes: _propTypes2.default.arrayOf(_propTypes2.default.string) // ['TransitLayer', 'TrafficLayer']
                };
                GoogleMap.defaultProps = {
                    distanceToMouse: function distanceToMouse(pt, mousePos /* , markerProps */) {
                        return Math.sqrt((pt.x - mousePos.x) * (pt.x - mousePos.x) + (pt.y - mousePos.y) * (pt.y - mousePos.y));
                    },

                    hoverDistance: 30,
                    debounced: true,
                    options: defaultOptions_,
                    googleMapLoader: _google_map_loader2.default,
                    yesIWantToUseGoogleMapApiInternals: false,
                    style: {
                        width: '100%',
                        height: '100%',
                        margin: 0,
                        padding: 0,
                        position: 'relative'
                    },
                    layerTypes: [],
                    heatmap: {},
                    libraries: {
                        visualization: false,
                        geometry: false,
                        places: false,
                        drawing: false
                    }
                };
                GoogleMap.googleMapLoader = _google_map_loader2.default;
                exports.default = GoogleMap;

                /***/ }),
            /* 215 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /** @license React v16.13.1
                 * react-is.development.js
                 *
                 * Copyright (c) Facebook, Inc. and its affiliates.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */





                if (true) {
                    (function() {
                        'use strict';

// The Symbol used to tag the ReactElement-like types. If there is no native Symbol
// nor polyfill, then a plain number is used for performance.
                        var hasSymbol = typeof Symbol === 'function' && Symbol.for;
                        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
                        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
                        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
                        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
                        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
                        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
                        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
// (unstable) APIs that have been removed. Can we remove the symbols?

                        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
                        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
                        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
                        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
                        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
                        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
                        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
                        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
                        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
                        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
                        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;

                        function isValidElementType(type) {
                            return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
                                type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
                        }

                        function typeOf(object) {
                            if (typeof object === 'object' && object !== null) {
                                var $$typeof = object.$$typeof;

                                switch ($$typeof) {
                                    case REACT_ELEMENT_TYPE:
                                        var type = object.type;

                                        switch (type) {
                                            case REACT_ASYNC_MODE_TYPE:
                                            case REACT_CONCURRENT_MODE_TYPE:
                                            case REACT_FRAGMENT_TYPE:
                                            case REACT_PROFILER_TYPE:
                                            case REACT_STRICT_MODE_TYPE:
                                            case REACT_SUSPENSE_TYPE:
                                                return type;

                                            default:
                                                var $$typeofType = type && type.$$typeof;

                                                switch ($$typeofType) {
                                                    case REACT_CONTEXT_TYPE:
                                                    case REACT_FORWARD_REF_TYPE:
                                                    case REACT_LAZY_TYPE:
                                                    case REACT_MEMO_TYPE:
                                                    case REACT_PROVIDER_TYPE:
                                                        return $$typeofType;

                                                    default:
                                                        return $$typeof;
                                                }

                                        }

                                    case REACT_PORTAL_TYPE:
                                        return $$typeof;
                                }
                            }

                            return undefined;
                        } // AsyncMode is deprecated along with isAsyncMode

                        var AsyncMode = REACT_ASYNC_MODE_TYPE;
                        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
                        var ContextConsumer = REACT_CONTEXT_TYPE;
                        var ContextProvider = REACT_PROVIDER_TYPE;
                        var Element = REACT_ELEMENT_TYPE;
                        var ForwardRef = REACT_FORWARD_REF_TYPE;
                        var Fragment = REACT_FRAGMENT_TYPE;
                        var Lazy = REACT_LAZY_TYPE;
                        var Memo = REACT_MEMO_TYPE;
                        var Portal = REACT_PORTAL_TYPE;
                        var Profiler = REACT_PROFILER_TYPE;
                        var StrictMode = REACT_STRICT_MODE_TYPE;
                        var Suspense = REACT_SUSPENSE_TYPE;
                        var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated

                        function isAsyncMode(object) {
                            {
                                if (!hasWarnedAboutDeprecatedIsAsyncMode) {
                                    hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint

                                    console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
                                }
                            }

                            return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
                        }
                        function isConcurrentMode(object) {
                            return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
                        }
                        function isContextConsumer(object) {
                            return typeOf(object) === REACT_CONTEXT_TYPE;
                        }
                        function isContextProvider(object) {
                            return typeOf(object) === REACT_PROVIDER_TYPE;
                        }
                        function isElement(object) {
                            return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
                        }
                        function isForwardRef(object) {
                            return typeOf(object) === REACT_FORWARD_REF_TYPE;
                        }
                        function isFragment(object) {
                            return typeOf(object) === REACT_FRAGMENT_TYPE;
                        }
                        function isLazy(object) {
                            return typeOf(object) === REACT_LAZY_TYPE;
                        }
                        function isMemo(object) {
                            return typeOf(object) === REACT_MEMO_TYPE;
                        }
                        function isPortal(object) {
                            return typeOf(object) === REACT_PORTAL_TYPE;
                        }
                        function isProfiler(object) {
                            return typeOf(object) === REACT_PROFILER_TYPE;
                        }
                        function isStrictMode(object) {
                            return typeOf(object) === REACT_STRICT_MODE_TYPE;
                        }
                        function isSuspense(object) {
                            return typeOf(object) === REACT_SUSPENSE_TYPE;
                        }

                        exports.AsyncMode = AsyncMode;
                        exports.ConcurrentMode = ConcurrentMode;
                        exports.ContextConsumer = ContextConsumer;
                        exports.ContextProvider = ContextProvider;
                        exports.Element = Element;
                        exports.ForwardRef = ForwardRef;
                        exports.Fragment = Fragment;
                        exports.Lazy = Lazy;
                        exports.Memo = Memo;
                        exports.Portal = Portal;
                        exports.Profiler = Profiler;
                        exports.StrictMode = StrictMode;
                        exports.Suspense = Suspense;
                        exports.isAsyncMode = isAsyncMode;
                        exports.isConcurrentMode = isConcurrentMode;
                        exports.isContextConsumer = isContextConsumer;
                        exports.isContextProvider = isContextProvider;
                        exports.isElement = isElement;
                        exports.isForwardRef = isForwardRef;
                        exports.isFragment = isFragment;
                        exports.isLazy = isLazy;
                        exports.isMemo = isMemo;
                        exports.isPortal = isPortal;
                        exports.isProfiler = isProfiler;
                        exports.isStrictMode = isStrictMode;
                        exports.isSuspense = isSuspense;
                        exports.isValidElementType = isValidElementType;
                        exports.typeOf = typeOf;
                    })();
                }


                /***/ }),
            /* 216 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /**
                 * Copyright (c) 2013-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */



                var ReactIs = __webpack_require__(90);
                var assign = __webpack_require__(217);

                var ReactPropTypesSecret = __webpack_require__(91);
                var checkPropTypes = __webpack_require__(218);

                var has = Function.call.bind(Object.prototype.hasOwnProperty);
                var printWarning = function() {};

                if (true) {
                    printWarning = function(text) {
                        var message = 'Warning: ' + text;
                        if (typeof console !== 'undefined') {
                            console.error(message);
                        }
                        try {
                            // --- Welcome to debugging React ---
                            // This error was thrown as a convenience so that you can use this stack
                            // to find the callsite that caused this warning to fire.
                            throw new Error(message);
                        } catch (x) {}
                    };
                }

                function emptyFunctionThatReturnsNull() {
                    return null;
                }

                module.exports = function(isValidElement, throwOnDirectAccess) {
                    /* global Symbol */
                    var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
                    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.

                    /**
                     * Returns the iterator method function contained on the iterable object.
                     *
                     * Be sure to invoke the function with the iterable as context:
                     *
                     *     var iteratorFn = getIteratorFn(myIterable);
                     *     if (iteratorFn) {
                     *       var iterator = iteratorFn.call(myIterable);
                     *       ...
                     *     }
                     *
                     * @param {?object} maybeIterable
                     * @return {?function}
                     */
                    function getIteratorFn(maybeIterable) {
                        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
                        if (typeof iteratorFn === 'function') {
                            return iteratorFn;
                        }
                    }

                    /**
                     * Collection of methods that allow declaration and validation of props that are
                     * supplied to React components. Example usage:
                     *
                     *   var Props = require('ReactPropTypes');
                     *   var MyArticle = React.createClass({
                     *     propTypes: {
                     *       // An optional string prop named "description".
                     *       description: Props.string,
                     *
                     *       // A required enum prop named "category".
                     *       category: Props.oneOf(['News','Photos']).isRequired,
                     *
                     *       // A prop named "dialog" that requires an instance of Dialog.
                     *       dialog: Props.instanceOf(Dialog).isRequired
                     *     },
                     *     render: function() { ... }
                     *   });
                     *
                     * A more formal specification of how these methods are used:
                     *
                     *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
                     *   decl := ReactPropTypes.{type}(.isRequired)?
                     *
                     * Each and every declaration produces a function with the same signature. This
                     * allows the creation of custom validation functions. For example:
                     *
                     *  var MyLink = React.createClass({
                     *    propTypes: {
                     *      // An optional string or URI prop named "href".
                     *      href: function(props, propName, componentName) {
                     *        var propValue = props[propName];
                     *        if (propValue != null && typeof propValue !== 'string' &&
                     *            !(propValue instanceof URI)) {
                     *          return new Error(
                     *            'Expected a string or an URI for ' + propName + ' in ' +
                     *            componentName
                     *          );
                     *        }
                     *      }
                     *    },
                     *    render: function() {...}
                     *  });
                     *
                     * @internal
                     */

                    var ANONYMOUS = '<<anonymous>>';

                    // Important!
                    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
                    var ReactPropTypes = {
                        array: createPrimitiveTypeChecker('array'),
                        bool: createPrimitiveTypeChecker('boolean'),
                        func: createPrimitiveTypeChecker('function'),
                        number: createPrimitiveTypeChecker('number'),
                        object: createPrimitiveTypeChecker('object'),
                        string: createPrimitiveTypeChecker('string'),
                        symbol: createPrimitiveTypeChecker('symbol'),

                        any: createAnyTypeChecker(),
                        arrayOf: createArrayOfTypeChecker,
                        element: createElementTypeChecker(),
                        elementType: createElementTypeTypeChecker(),
                        instanceOf: createInstanceTypeChecker,
                        node: createNodeChecker(),
                        objectOf: createObjectOfTypeChecker,
                        oneOf: createEnumTypeChecker,
                        oneOfType: createUnionTypeChecker,
                        shape: createShapeTypeChecker,
                        exact: createStrictShapeTypeChecker,
                    };

                    /**
                     * inlined Object.is polyfill to avoid requiring consumers ship their own
                     * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
                     */
                    /*eslint-disable no-self-compare*/
                    function is(x, y) {
                        // SameValue algorithm
                        if (x === y) {
                            // Steps 1-5, 7-10
                            // Steps 6.b-6.e: +0 != -0
                            return x !== 0 || 1 / x === 1 / y;
                        } else {
                            // Step 6.a: NaN == NaN
                            return x !== x && y !== y;
                        }
                    }
                    /*eslint-enable no-self-compare*/

                    /**
                     * We use an Error-like object for backward compatibility as people may call
                     * PropTypes directly and inspect their output. However, we don't use real
                     * Errors anymore. We don't inspect their stack anyway, and creating them
                     * is prohibitively expensive if they are created too often, such as what
                     * happens in oneOfType() for any type before the one that matched.
                     */
                    function PropTypeError(message) {
                        this.message = message;
                        this.stack = '';
                    }
                    // Make `instanceof Error` still work for returned errors.
                    PropTypeError.prototype = Error.prototype;

                    function createChainableTypeChecker(validate) {
                        if (true) {
                            var manualPropTypeCallCache = {};
                            var manualPropTypeWarningCount = 0;
                        }
                        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
                            componentName = componentName || ANONYMOUS;
                            propFullName = propFullName || propName;

                            if (secret !== ReactPropTypesSecret) {
                                if (throwOnDirectAccess) {
                                    // New behavior only for users of `prop-types` package
                                    var err = new Error(
                                        'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +
                                        'Use `PropTypes.checkPropTypes()` to call them. ' +
                                        'Read more at http://fb.me/use-check-prop-types'
                                    );
                                    err.name = 'Invariant Violation';
                                    throw err;
                                } else if ("development" !== 'production' && typeof console !== 'undefined') {
                                    // Old behavior for people using React.PropTypes
                                    var cacheKey = componentName + ':' + propName;
                                    if (
                                        !manualPropTypeCallCache[cacheKey] &&
                                        // Avoid spamming the console because they are often not actionable except for lib authors
                                        manualPropTypeWarningCount < 3
                                    ) {
                                        printWarning(
                                            'You are manually calling a React.PropTypes validation ' +
                                            'function for the `' + propFullName + '` prop on `' + componentName  + '`. This is deprecated ' +
                                            'and will throw in the standalone `prop-types` package. ' +
                                            'You may be seeing this warning due to a third-party PropTypes ' +
                                            'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.'
                                        );
                                        manualPropTypeCallCache[cacheKey] = true;
                                        manualPropTypeWarningCount++;
                                    }
                                }
                            }
                            if (props[propName] == null) {
                                if (isRequired) {
                                    if (props[propName] === null) {
                                        return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
                                    }
                                    return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
                                }
                                return null;
                            } else {
                                return validate(props, propName, componentName, location, propFullName);
                            }
                        }

                        var chainedCheckType = checkType.bind(null, false);
                        chainedCheckType.isRequired = checkType.bind(null, true);

                        return chainedCheckType;
                    }

                    function createPrimitiveTypeChecker(expectedType) {
                        function validate(props, propName, componentName, location, propFullName, secret) {
                            var propValue = props[propName];
                            var propType = getPropType(propValue);
                            if (propType !== expectedType) {
                                // `propValue` being instance of, say, date/regexp, pass the 'object'
                                // check, but we can offer a more precise error message here rather than
                                // 'of type `object`'.
                                var preciseType = getPreciseType(propValue);

                                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'));
                            }
                            return null;
                        }
                        return createChainableTypeChecker(validate);
                    }

                    function createAnyTypeChecker() {
                        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
                    }

                    function createArrayOfTypeChecker(typeChecker) {
                        function validate(props, propName, componentName, location, propFullName) {
                            if (typeof typeChecker !== 'function') {
                                return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
                            }
                            var propValue = props[propName];
                            if (!Array.isArray(propValue)) {
                                var propType = getPropType(propValue);
                                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
                            }
                            for (var i = 0; i < propValue.length; i++) {
                                var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
                                if (error instanceof Error) {
                                    return error;
                                }
                            }
                            return null;
                        }
                        return createChainableTypeChecker(validate);
                    }

                    function createElementTypeChecker() {
                        function validate(props, propName, componentName, location, propFullName) {
                            var propValue = props[propName];
                            if (!isValidElement(propValue)) {
                                var propType = getPropType(propValue);
                                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
                            }
                            return null;
                        }
                        return createChainableTypeChecker(validate);
                    }

                    function createElementTypeTypeChecker() {
                        function validate(props, propName, componentName, location, propFullName) {
                            var propValue = props[propName];
                            if (!ReactIs.isValidElementType(propValue)) {
                                var propType = getPropType(propValue);
                                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
                            }
                            return null;
                        }
                        return createChainableTypeChecker(validate);
                    }

                    function createInstanceTypeChecker(expectedClass) {
                        function validate(props, propName, componentName, location, propFullName) {
                            if (!(props[propName] instanceof expectedClass)) {
                                var expectedClassName = expectedClass.name || ANONYMOUS;
                                var actualClassName = getClassName(props[propName]);
                                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
                            }
                            return null;
                        }
                        return createChainableTypeChecker(validate);
                    }

                    function createEnumTypeChecker(expectedValues) {
                        if (!Array.isArray(expectedValues)) {
                            if (true) {
                                if (arguments.length > 1) {
                                    printWarning(
                                        'Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' +
                                        'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).'
                                    );
                                } else {
                                    printWarning('Invalid argument supplied to oneOf, expected an array.');
                                }
                            }
                            return emptyFunctionThatReturnsNull;
                        }

                        function validate(props, propName, componentName, location, propFullName) {
                            var propValue = props[propName];
                            for (var i = 0; i < expectedValues.length; i++) {
                                if (is(propValue, expectedValues[i])) {
                                    return null;
                                }
                            }

                            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                                var type = getPreciseType(value);
                                if (type === 'symbol') {
                                    return String(value);
                                }
                                return value;
                            });
                            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
                        }
                        return createChainableTypeChecker(validate);
                    }

                    function createObjectOfTypeChecker(typeChecker) {
                        function validate(props, propName, componentName, location, propFullName) {
                            if (typeof typeChecker !== 'function') {
                                return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
                            }
                            var propValue = props[propName];
                            var propType = getPropType(propValue);
                            if (propType !== 'object') {
                                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
                            }
                            for (var key in propValue) {
                                if (has(propValue, key)) {
                                    var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                                    if (error instanceof Error) {
                                        return error;
                                    }
                                }
                            }
                            return null;
                        }
                        return createChainableTypeChecker(validate);
                    }

                    function createUnionTypeChecker(arrayOfTypeCheckers) {
                        if (!Array.isArray(arrayOfTypeCheckers)) {
                            true ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;
                            return emptyFunctionThatReturnsNull;
                        }

                        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
                            var checker = arrayOfTypeCheckers[i];
                            if (typeof checker !== 'function') {
                                printWarning(
                                    'Invalid argument supplied to oneOfType. Expected an array of check functions, but ' +
                                    'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.'
                                );
                                return emptyFunctionThatReturnsNull;
                            }
                        }

                        function validate(props, propName, componentName, location, propFullName) {
                            for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
                                var checker = arrayOfTypeCheckers[i];
                                if (checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret) == null) {
                                    return null;
                                }
                            }

                            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`.'));
                        }
                        return createChainableTypeChecker(validate);
                    }

                    function createNodeChecker() {
                        function validate(props, propName, componentName, location, propFullName) {
                            if (!isNode(props[propName])) {
                                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
                            }
                            return null;
                        }
                        return createChainableTypeChecker(validate);
                    }

                    function createShapeTypeChecker(shapeTypes) {
                        function validate(props, propName, componentName, location, propFullName) {
                            var propValue = props[propName];
                            var propType = getPropType(propValue);
                            if (propType !== 'object') {
                                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
                            }
                            for (var key in shapeTypes) {
                                var checker = shapeTypes[key];
                                if (!checker) {
                                    continue;
                                }
                                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                                if (error) {
                                    return error;
                                }
                            }
                            return null;
                        }
                        return createChainableTypeChecker(validate);
                    }

                    function createStrictShapeTypeChecker(shapeTypes) {
                        function validate(props, propName, componentName, location, propFullName) {
                            var propValue = props[propName];
                            var propType = getPropType(propValue);
                            if (propType !== 'object') {
                                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
                            }
                            // We need to check all keys in case some are required but missing from
                            // props.
                            var allKeys = assign({}, props[propName], shapeTypes);
                            for (var key in allKeys) {
                                var checker = shapeTypes[key];
                                if (!checker) {
                                    return new PropTypeError(
                                        'Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' +
                                        '\nBad object: ' + JSON.stringify(props[propName], null, '  ') +
                                        '\nValid keys: ' +  JSON.stringify(Object.keys(shapeTypes), null, '  ')
                                    );
                                }
                                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                                if (error) {
                                    return error;
                                }
                            }
                            return null;
                        }

                        return createChainableTypeChecker(validate);
                    }

                    function isNode(propValue) {
                        switch (typeof propValue) {
                            case 'number':
                            case 'string':
                            case 'undefined':
                                return true;
                            case 'boolean':
                                return !propValue;
                            case 'object':
                                if (Array.isArray(propValue)) {
                                    return propValue.every(isNode);
                                }
                                if (propValue === null || isValidElement(propValue)) {
                                    return true;
                                }

                                var iteratorFn = getIteratorFn(propValue);
                                if (iteratorFn) {
                                    var iterator = iteratorFn.call(propValue);
                                    var step;
                                    if (iteratorFn !== propValue.entries) {
                                        while (!(step = iterator.next()).done) {
                                            if (!isNode(step.value)) {
                                                return false;
                                            }
                                        }
                                    } else {
                                        // Iterator will provide entry [k,v] tuples rather than values.
                                        while (!(step = iterator.next()).done) {
                                            var entry = step.value;
                                            if (entry) {
                                                if (!isNode(entry[1])) {
                                                    return false;
                                                }
                                            }
                                        }
                                    }
                                } else {
                                    return false;
                                }

                                return true;
                            default:
                                return false;
                        }
                    }

                    function isSymbol(propType, propValue) {
                        // Native Symbol.
                        if (propType === 'symbol') {
                            return true;
                        }

                        // falsy value can't be a Symbol
                        if (!propValue) {
                            return false;
                        }

                        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
                        if (propValue['@@toStringTag'] === 'Symbol') {
                            return true;
                        }

                        // Fallback for non-spec compliant Symbols which are polyfilled.
                        if (typeof Symbol === 'function' && propValue instanceof Symbol) {
                            return true;
                        }

                        return false;
                    }

                    // Equivalent of `typeof` but with special handling for array and regexp.
                    function getPropType(propValue) {
                        var propType = typeof propValue;
                        if (Array.isArray(propValue)) {
                            return 'array';
                        }
                        if (propValue instanceof RegExp) {
                            // Old webkits (at least until Android 4.0) return 'function' rather than
                            // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
                            // passes PropTypes.object.
                            return 'object';
                        }
                        if (isSymbol(propType, propValue)) {
                            return 'symbol';
                        }
                        return propType;
                    }

                    // This handles more types than `getPropType`. Only used for error messages.
                    // See `createPrimitiveTypeChecker`.
                    function getPreciseType(propValue) {
                        if (typeof propValue === 'undefined' || propValue === null) {
                            return '' + propValue;
                        }
                        var propType = getPropType(propValue);
                        if (propType === 'object') {
                            if (propValue instanceof Date) {
                                return 'date';
                            } else if (propValue instanceof RegExp) {
                                return 'regexp';
                            }
                        }
                        return propType;
                    }

                    // Returns a string that is postfixed to a warning about an invalid type.
                    // For example, "undefined" or "of type array"
                    function getPostfixForTypeWarning(value) {
                        var type = getPreciseType(value);
                        switch (type) {
                            case 'array':
                            case 'object':
                                return 'an ' + type;
                            case 'boolean':
                            case 'date':
                            case 'regexp':
                                return 'a ' + type;
                            default:
                                return type;
                        }
                    }

                    // Returns class name of the object, if any.
                    function getClassName(propValue) {
                        if (!propValue.constructor || !propValue.constructor.name) {
                            return ANONYMOUS;
                        }
                        return propValue.constructor.name;
                    }

                    ReactPropTypes.checkPropTypes = checkPropTypes;
                    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
                    ReactPropTypes.PropTypes = ReactPropTypes;

                    return ReactPropTypes;
                };


                /***/ }),
            /* 217 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /*
object-assign
(c) Sindre Sorhus
@license MIT
*/


                /* eslint-disable no-unused-vars */
                var getOwnPropertySymbols = Object.getOwnPropertySymbols;
                var hasOwnProperty = Object.prototype.hasOwnProperty;
                var propIsEnumerable = Object.prototype.propertyIsEnumerable;

                function toObject(val) {
                    if (val === null || val === undefined) {
                        throw new TypeError('Object.assign cannot be called with null or undefined');
                    }

                    return Object(val);
                }

                function shouldUseNative() {
                    try {
                        if (!Object.assign) {
                            return false;
                        }

                        // Detect buggy property enumeration order in older V8 versions.

                        // https://bugs.chromium.org/p/v8/issues/detail?id=4118
                        var test1 = new String('abc');  // eslint-disable-line no-new-wrappers
                        test1[5] = 'de';
                        if (Object.getOwnPropertyNames(test1)[0] === '5') {
                            return false;
                        }

                        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
                        var test2 = {};
                        for (var i = 0; i < 10; i++) {
                            test2['_' + String.fromCharCode(i)] = i;
                        }
                        var order2 = Object.getOwnPropertyNames(test2).map(function (n) {
                            return test2[n];
                        });
                        if (order2.join('') !== '0123456789') {
                            return false;
                        }

                        // https://bugs.chromium.org/p/v8/issues/detail?id=3056
                        var test3 = {};
                        'abcdefghijklmnopqrst'.split('').forEach(function (letter) {
                            test3[letter] = letter;
                        });
                        if (Object.keys(Object.assign({}, test3)).join('') !==
                            'abcdefghijklmnopqrst') {
                            return false;
                        }

                        return true;
                    } catch (err) {
                        // We don't expect any of the above to throw, but better to be safe.
                        return false;
                    }
                }

                module.exports = shouldUseNative() ? Object.assign : function (target, source) {
                    var from;
                    var to = toObject(target);
                    var symbols;

                    for (var s = 1; s < arguments.length; s++) {
                        from = Object(arguments[s]);

                        for (var key in from) {
                            if (hasOwnProperty.call(from, key)) {
                                to[key] = from[key];
                            }
                        }

                        if (getOwnPropertySymbols) {
                            symbols = getOwnPropertySymbols(from);
                            for (var i = 0; i < symbols.length; i++) {
                                if (propIsEnumerable.call(from, symbols[i])) {
                                    to[symbols[i]] = from[symbols[i]];
                                }
                            }
                        }
                    }

                    return to;
                };


                /***/ }),
            /* 218 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /**
                 * Copyright (c) 2013-present, Facebook, Inc.
                 *
                 * This source code is licensed under the MIT license found in the
                 * LICENSE file in the root directory of this source tree.
                 */



                var printWarning = function() {};

                if (true) {
                    var ReactPropTypesSecret = __webpack_require__(91);
                    var loggedTypeFailures = {};
                    var has = Function.call.bind(Object.prototype.hasOwnProperty);

                    printWarning = function(text) {
                        var message = 'Warning: ' + text;
                        if (typeof console !== 'undefined') {
                            console.error(message);
                        }
                        try {
                            // --- Welcome to debugging React ---
                            // This error was thrown as a convenience so that you can use this stack
                            // to find the callsite that caused this warning to fire.
                            throw new Error(message);
                        } catch (x) {}
                    };
                }

                /**
                 * Assert that the values match with the type specs.
                 * Error messages are memorized and will only be shown once.
                 *
                 * @param {object} typeSpecs Map of name to a ReactPropType
                 * @param {object} values Runtime values that need to be type-checked
                 * @param {string} location e.g. "prop", "context", "child context"
                 * @param {string} componentName Name of the component for error messages.
                 * @param {?Function} getStack Returns the component stack.
                 * @private
                 */
                function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
                    if (true) {
                        for (var typeSpecName in typeSpecs) {
                            if (has(typeSpecs, typeSpecName)) {
                                var error;
                                // Prop type validation may throw. In case they do, we don't want to
                                // fail the render phase where it didn't fail before. So we log it.
                                // After these have been cleaned up, we'll let them throw.
                                try {
                                    // This is intentionally an invariant that gets caught. It's the same
                                    // behavior as without this statement except with a better message.
                                    if (typeof typeSpecs[typeSpecName] !== 'function') {
                                        var err = Error(
                                            (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +
                                            'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.'
                                        );
                                        err.name = 'Invariant Violation';
                                        throw err;
                                    }
                                    error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
                                } catch (ex) {
                                    error = ex;
                                }
                                if (error && !(error instanceof Error)) {
                                    printWarning(
                                        (componentName || 'React class') + ': type specification of ' +
                                        location + ' `' + typeSpecName + '` is invalid; the type checker ' +
                                        'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +
                                        'You may have forgotten to pass an argument to the type checker ' +
                                        'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +
                                        'shape all require an argument).'
                                    );
                                }
                                if (error instanceof Error && !(error.message in loggedTypeFailures)) {
                                    // Only monitor this failure once because there tends to be a lot of the
                                    // same error.
                                    loggedTypeFailures[error.message] = true;

                                    var stack = getStack ? getStack() : '';

                                    printWarning(
                                        'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')
                                    );
                                }
                            }
                        }
                    }
                }

                /**
                 * Resets warning cache when testing.
                 *
                 * @private
                 */
                checkPropTypes.resetWarningCache = function() {
                    if (true) {
                        loggedTypeFailures = {};
                    }
                }

                module.exports = checkPropTypes;


                /***/ }),
            /* 219 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;

                var _react = __webpack_require__(29);

                var _react2 = _interopRequireDefault(_react);

                function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

                var style = {
                    width: '100%',
                    height: '100%',
                    left: 0,
                    top: 0,
                    margin: 0,
                    padding: 0,
                    position: 'absolute'
                };

                var GoogleMapMap = function (_Component) {
                    _inherits(GoogleMapMap, _Component);

                    function GoogleMapMap() {
                        _classCallCheck(this, GoogleMapMap);

                        return _possibleConstructorReturn(this, _Component.apply(this, arguments));
                    }

                    GoogleMapMap.prototype.shouldComponentUpdate = function shouldComponentUpdate() {
                        return false; // disable react on this div
                    };

                    GoogleMapMap.prototype.render = function render() {
                        var registerChild = this.props.registerChild;

                        return _react2.default.createElement('div', { ref: registerChild, style: style });
                    };

                    return GoogleMapMap;
                }(_react.Component);

                exports.default = GoogleMapMap;

                /***/ }),
            /* 220 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;

                var _eventemitter = __webpack_require__(221);

                var _eventemitter2 = _interopRequireDefault(_eventemitter);

                function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

                function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

                var MarkerDispatcher = function (_EventEmitter) {
                    _inherits(MarkerDispatcher, _EventEmitter);

                    function MarkerDispatcher(gmapInstance) {
                        _classCallCheck(this, MarkerDispatcher);

                        var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));

                        _this.gmapInstance = gmapInstance;
                        return _this;
                    }

                    MarkerDispatcher.prototype.getChildren = function getChildren() {
                        return this.gmapInstance.props.children;
                    };

                    MarkerDispatcher.prototype.getMousePosition = function getMousePosition() {
                        return this.gmapInstance.mouse_;
                    };

                    MarkerDispatcher.prototype.getUpdateCounter = function getUpdateCounter() {
                        return this.gmapInstance.updateCounter_;
                    };

                    MarkerDispatcher.prototype.dispose = function dispose() {
                        this.gmapInstance = null;
                        this.removeAllListeners();
                    };

                    return MarkerDispatcher;
                }(_eventemitter2.default);

                exports.default = MarkerDispatcher;

                /***/ }),
            /* 221 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var has = Object.prototype.hasOwnProperty;

//
// We store our EE objects in a plain object whose properties are event names.
// If `Object.create(null)` is not supported we prefix the event names with a
// `~` to make sure that the built-in object properties are not overridden or
// used as an attack vector.
// We also assume that `Object.create(null)` is available when the event name
// is an ES6 Symbol.
//
                var prefix = typeof Object.create !== 'function' ? '~' : false;

                /**
                 * Representation of a single EventEmitter function.
                 *
                 * @param {Function} fn Event handler to be called.
                 * @param {Mixed} context Context for function execution.
                 * @param {Boolean} [once=false] Only emit once
                 * @api private
                 */
                function EE(fn, context, once) {
                    this.fn = fn;
                    this.context = context;
                    this.once = once || false;
                }

                /**
                 * Minimal EventEmitter interface that is molded against the Node.js
                 * EventEmitter interface.
                 *
                 * @constructor
                 * @api public
                 */
                function EventEmitter() { /* Nothing to set */ }

                /**
                 * Hold the assigned EventEmitters by name.
                 *
                 * @type {Object}
                 * @private
                 */
                EventEmitter.prototype._events = undefined;

                /**
                 * Return an array listing the events for which the emitter has registered
                 * listeners.
                 *
                 * @returns {Array}
                 * @api public
                 */
                EventEmitter.prototype.eventNames = function eventNames() {
                    var events = this._events
                        , names = []
                        , name;

                    if (!events) return names;

                    for (name in events) {
                        if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
                    }

                    if (Object.getOwnPropertySymbols) {
                        return names.concat(Object.getOwnPropertySymbols(events));
                    }

                    return names;
                };

                /**
                 * Return a list of assigned event listeners.
                 *
                 * @param {String} event The events that should be listed.
                 * @param {Boolean} exists We only need to know if there are listeners.
                 * @returns {Array|Boolean}
                 * @api public
                 */
                EventEmitter.prototype.listeners = function listeners(event, exists) {
                    var evt = prefix ? prefix + event : event
                        , available = this._events && this._events[evt];

                    if (exists) return !!available;
                    if (!available) return [];
                    if (available.fn) return [available.fn];

                    for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {
                        ee[i] = available[i].fn;
                    }

                    return ee;
                };

                /**
                 * Emit an event to all registered event listeners.
                 *
                 * @param {String} event The name of the event.
                 * @returns {Boolean} Indication if we've emitted an event.
                 * @api public
                 */
                EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
                    var evt = prefix ? prefix + event : event;

                    if (!this._events || !this._events[evt]) return false;

                    var listeners = this._events[evt]
                        , len = arguments.length
                        , args
                        , i;

                    if ('function' === typeof listeners.fn) {
                        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

                        switch (len) {
                            case 1: return listeners.fn.call(listeners.context), true;
                            case 2: return listeners.fn.call(listeners.context, a1), true;
                            case 3: return listeners.fn.call(listeners.context, a1, a2), true;
                            case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
                            case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
                            case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
                        }

                        for (i = 1, args = new Array(len -1); i < len; i++) {
                            args[i - 1] = arguments[i];
                        }

                        listeners.fn.apply(listeners.context, args);
                    } else {
                        var length = listeners.length
                            , j;

                        for (i = 0; i < length; i++) {
                            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

                            switch (len) {
                                case 1: listeners[i].fn.call(listeners[i].context); break;
                                case 2: listeners[i].fn.call(listeners[i].context, a1); break;
                                case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
                                default:
                                    if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
                                        args[j - 1] = arguments[j];
                                    }

                                    listeners[i].fn.apply(listeners[i].context, args);
                            }
                        }
                    }

                    return true;
                };

                /**
                 * Register a new EventListener for the given event.
                 *
                 * @param {String} event Name of the event.
                 * @param {Function} fn Callback function.
                 * @param {Mixed} [context=this] The context of the function.
                 * @api public
                 */
                EventEmitter.prototype.on = function on(event, fn, context) {
                    var listener = new EE(fn, context || this)
                        , evt = prefix ? prefix + event : event;

                    if (!this._events) this._events = prefix ? {} : Object.create(null);
                    if (!this._events[evt]) this._events[evt] = listener;
                    else {
                        if (!this._events[evt].fn) this._events[evt].push(listener);
                        else this._events[evt] = [
                            this._events[evt], listener
                        ];
                    }

                    return this;
                };

                /**
                 * Add an EventListener that's only called once.
                 *
                 * @param {String} event Name of the event.
                 * @param {Function} fn Callback function.
                 * @param {Mixed} [context=this] The context of the function.
                 * @api public
                 */
                EventEmitter.prototype.once = function once(event, fn, context) {
                    var listener = new EE(fn, context || this, true)
                        , evt = prefix ? prefix + event : event;

                    if (!this._events) this._events = prefix ? {} : Object.create(null);
                    if (!this._events[evt]) this._events[evt] = listener;
                    else {
                        if (!this._events[evt].fn) this._events[evt].push(listener);
                        else this._events[evt] = [
                            this._events[evt], listener
                        ];
                    }

                    return this;
                };

                /**
                 * Remove event listeners.
                 *
                 * @param {String} event The event we want to remove.
                 * @param {Function} fn The listener that we need to find.
                 * @param {Mixed} context Only remove listeners matching this context.
                 * @param {Boolean} once Only remove once listeners.
                 * @api public
                 */
                EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
                    var evt = prefix ? prefix + event : event;

                    if (!this._events || !this._events[evt]) return this;

                    var listeners = this._events[evt]
                        , events = [];

                    if (fn) {
                        if (listeners.fn) {
                            if (
                                listeners.fn !== fn
                                || (once && !listeners.once)
                                || (context && listeners.context !== context)
                            ) {
                                events.push(listeners);
                            }
                        } else {
                            for (var i = 0, length = listeners.length; i < length; i++) {
                                if (
                                    listeners[i].fn !== fn
                                    || (once && !listeners[i].once)
                                    || (context && listeners[i].context !== context)
                                ) {
                                    events.push(listeners[i]);
                                }
                            }
                        }
                    }

                    //
                    // Reset the array, or remove it completely if we have no more listeners.
                    //
                    if (events.length) {
                        this._events[evt] = events.length === 1 ? events[0] : events;
                    } else {
                        delete this._events[evt];
                    }

                    return this;
                };

                /**
                 * Remove all listeners or only the listeners for the specified event.
                 *
                 * @param {String} event The event want to remove all listeners for.
                 * @api public
                 */
                EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
                    if (!this._events) return this;

                    if (event) delete this._events[prefix ? prefix + event : event];
                    else this._events = prefix ? {} : Object.create(null);

                    return this;
                };

//
// Alias methods names because people roll like that.
//
                EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
                EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// This function doesn't apply anymore.
//
                EventEmitter.prototype.setMaxListeners = function setMaxListeners() {
                    return this;
                };

//
// Expose the prefix.
//
                EventEmitter.prefixed = prefix;

//
// Expose the module.
//
                if (true) {
                    module.exports = EventEmitter;
                }


                /***/ }),
            /* 222 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;

                var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

                exports.default = function (props) {
                    return _react2.default.createElement(
                        'div',
                        { style: style },
                        _react2.default.createElement(_google_map_markers2.default, _extends({}, props, { prerender: true }))
                    );
                };

                var _react = __webpack_require__(29);

                var _react2 = _interopRequireDefault(_react);

                var _google_map_markers = __webpack_require__(92);

                var _google_map_markers2 = _interopRequireDefault(_google_map_markers);

                function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

                var style = {
                    width: '50%',
                    height: '50%',
                    left: '50%',
                    top: '50%',
                    // backgroundColor: 'red',
                    margin: 0,
                    padding: 0,
                    position: 'absolute'
                    // opacity: 0.3
                };

                /***/ }),
            /* 223 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;
                var generateHeatmap = exports.generateHeatmap = function generateHeatmap(instance, _ref) {
                    var positions = _ref.positions;
                    return new instance.visualization.HeatmapLayer({
                        data: positions.reduce(function (acc, _ref2) {
                            var lat = _ref2.lat,
                                lng = _ref2.lng,
                                _ref2$weight = _ref2.weight,
                                weight = _ref2$weight === undefined ? 1 : _ref2$weight;

                            acc.push({
                                location: new instance.LatLng(lat, lng),
                                weight: weight
                            });
                            return acc;
                        }, [])
                    });
                };

                var optionsHeatmap = exports.optionsHeatmap = function optionsHeatmap(instance, _ref3) {
                    var _ref3$options = _ref3.options,
                        options = _ref3$options === undefined ? {} : _ref3$options;
                    return Object.keys(options).map(function (option) {
                        return instance.set(option, options[option]);
                    });
                };

                /***/ }),
            /* 224 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;
                var BASE_URL = 'https://maps';
                var DEFAULT_URL = BASE_URL + '.googleapis.com';
                var API_PATH = '/maps/api/js?callback=_$_google_map_initialize_$_';

                var getUrl = function getUrl(region) {
                    if (region && region.toLowerCase() === 'cn') {
                        return BASE_URL + '.google.cn';
                    }
                    return DEFAULT_URL;
                };

                var $script_ = null;

                var loadPromise_ = void 0;

                var resolveCustomPromise_ = void 0;

                var _customPromise = new Promise(function (resolve) {
                    resolveCustomPromise_ = resolve;
                });

// TODO add libraries language and other map options

                exports.default = function (bootstrapURLKeys, libraries) {
                    if (!$script_) {
                        $script_ = __webpack_require__(225); // eslint-disable-line
                    }

                    // call from outside google-map-react
                    // will be as soon as loadPromise_ resolved
                    if (!bootstrapURLKeys) {
                        return _customPromise;
                    }

                    if (loadPromise_) {
                        return loadPromise_;
                    }

                    loadPromise_ = new Promise(function (resolve, reject) {
                        if (typeof window === 'undefined') {
                            reject(new Error('google map cannot be loaded outside browser env'));
                            return;
                        }

                        if (window.google && window.google.maps) {
                            resolve(window.google.maps);
                            return;
                        }

                        if (typeof window._$_google_map_initialize_$_ !== 'undefined') {
                            reject(new Error('google map initialization error'));
                        }

                        window._$_google_map_initialize_$_ = function () {
                            delete window._$_google_map_initialize_$_;
                            resolve(window.google.maps);
                        };

                        if (true) {
                            if (Object.keys(bootstrapURLKeys).indexOf('callback') > -1) {
                                var message = '"callback" key in bootstrapURLKeys is not allowed,\n                          use onGoogleApiLoaded property instead';
                                // eslint-disable-next-line no-console
                                console.error(message);
                                throw new Error(message);
                            }
                        }

                        var params = Object.keys(bootstrapURLKeys).reduce(function (r, key) {
                            return r + '&' + key + '=' + bootstrapURLKeys[key];
                        }, '');

                        var baseUrl = getUrl(bootstrapURLKeys.region);
                        var librariesUrl = Object.keys(libraries).reduce(function (libraryUrl, libraryKey) {
                            if (libraries[libraryKey]) {
                                return '' + libraryUrl + libraryKey + ',';
                            }
                            return libraryUrl;
                        }, '&libraries=').slice(0, -1);

                        $script_('' + baseUrl + API_PATH + params + librariesUrl, function () {
                            return typeof window.google === 'undefined' && reject(new Error('google map initialization error (not loaded)'));
                        });
                    });

                    resolveCustomPromise_(loadPromise_);

                    return loadPromise_;
                };

                /***/ }),
            /* 225 */
            /***/ (function(module, exports, __webpack_require__) {

                var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
  * $script.js JS loader & dependency manager
  * https://github.com/ded/script.js
  * (c) Dustin Diaz 2014 | License MIT
  */

                (function (name, definition) {
                    if (typeof module != 'undefined' && module.exports) module.exports = definition()
                    else if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (definition),
                        __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
                            (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :
                            __WEBPACK_AMD_DEFINE_FACTORY__),
                    __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))
                    else this[name] = definition()
                })('$script', function () {
                    var doc = document
                        , head = doc.getElementsByTagName('head')[0]
                        , s = 'string'
                        , f = false
                        , push = 'push'
                        , readyState = 'readyState'
                        , onreadystatechange = 'onreadystatechange'
                        , list = {}
                        , ids = {}
                        , delay = {}
                        , scripts = {}
                        , scriptpath
                        , urlArgs

                    function every(ar, fn) {
                        for (var i = 0, j = ar.length; i < j; ++i) if (!fn(ar[i])) return f
                        return 1
                    }
                    function each(ar, fn) {
                        every(ar, function (el) {
                            fn(el)
                            return 1
                        })
                    }

                    function $script(paths, idOrDone, optDone) {
                        paths = paths[push] ? paths : [paths]
                        var idOrDoneIsDone = idOrDone && idOrDone.call
                            , done = idOrDoneIsDone ? idOrDone : optDone
                            , id = idOrDoneIsDone ? paths.join('') : idOrDone
                            , queue = paths.length
                        function loopFn(item) {
                            return item.call ? item() : list[item]
                        }
                        function callback() {
                            if (!--queue) {
                                list[id] = 1
                                done && done()
                                for (var dset in delay) {
                                    every(dset.split('|'), loopFn) && !each(delay[dset], loopFn) && (delay[dset] = [])
                                }
                            }
                        }
                        setTimeout(function () {
                            each(paths, function loading(path, force) {
                                if (path === null) return callback()

                                if (!force && !/^https?:\/\//.test(path) && scriptpath) {
                                    path = (path.indexOf('.js') === -1) ? scriptpath + path + '.js' : scriptpath + path;
                                }

                                if (scripts[path]) {
                                    if (id) ids[id] = 1
                                    return (scripts[path] == 2) ? callback() : setTimeout(function () { loading(path, true) }, 0)
                                }

                                scripts[path] = 1
                                if (id) ids[id] = 1
                                create(path, callback)
                            })
                        }, 0)
                        return $script
                    }

                    function create(path, fn) {
                        var el = doc.createElement('script'), loaded
                        el.onload = el.onerror = el[onreadystatechange] = function () {
                            if ((el[readyState] && !(/^c|loade/.test(el[readyState]))) || loaded) return;
                            el.onload = el[onreadystatechange] = null
                            loaded = 1
                            scripts[path] = 2
                            fn()
                        }
                        el.async = 1
                        el.src = urlArgs ? path + (path.indexOf('?') === -1 ? '?' : '&') + urlArgs : path;
                        head.insertBefore(el, head.lastChild)
                    }

                    $script.get = create

                    $script.order = function (scripts, id, done) {
                        (function callback(s) {
                            s = scripts.shift()
                            !scripts.length ? $script(s, id, done) : $script(s, callback)
                        }())
                    }

                    $script.path = function (p) {
                        scriptpath = p
                    }
                    $script.urlArgs = function (str) {
                        urlArgs = str;
                    }
                    $script.ready = function (deps, ready, req) {
                        deps = deps[push] ? deps : [deps]
                        var missing = [];
                        !each(deps, function (dep) {
                            list[dep] || missing[push](dep);
                        }) && every(deps, function (dep) {return list[dep]}) ?
                            ready() : !function (key) {
                                delay[key] = delay[key] || []
                                delay[key][push](ready)
                                req && req(missing)
                            }(deps.join('|'))
                        return $script
                    }

                    $script.done = function (idOrDone) {
                        $script([null], idOrDone)
                    }

                    return $script
                });


                /***/ }),
            /* 226 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;

                var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

                var _pointGeometry = __webpack_require__(95);

                var _pointGeometry2 = _interopRequireDefault(_pointGeometry);

                var _lat_lng = __webpack_require__(96);

                var _lat_lng2 = _interopRequireDefault(_lat_lng);

                var _transform = __webpack_require__(227);

                var _transform2 = _interopRequireDefault(_transform);

                function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

                var Geo = function () {
                    function Geo(tileSize) {
                        _classCallCheck(this, Geo);

                        // left_top view пользует гугл
                        // super();
                        this.hasSize_ = false;
                        this.hasView_ = false;
                        this.transform_ = new _transform2.default(tileSize || 512);
                    }

                    Geo.prototype.setView = function setView(center, zoom, bearing) {
                        this.transform_.center = _lat_lng2.default.convert(center);
                        this.transform_.zoom = +zoom;
                        this.transform_.bearing = +bearing;
                        this.hasView_ = true;
                    };

                    Geo.prototype.setViewSize = function setViewSize(width, height) {
                        this.transform_.width = width;
                        this.transform_.height = height;
                        this.hasSize_ = true;
                    };

                    Geo.prototype.setMapCanvasProjection = function setMapCanvasProjection(maps, mapCanvasProjection) {
                        this.maps_ = maps;
                        this.mapCanvasProjection_ = mapCanvasProjection;
                    };

                    Geo.prototype.canProject = function canProject() {
                        return this.hasSize_ && this.hasView_;
                    };

                    Geo.prototype.hasSize = function hasSize() {
                        return this.hasSize_;
                    };

                    /** Returns the pixel position relative to the map center. */


                    Geo.prototype.fromLatLngToCenterPixel = function fromLatLngToCenterPixel(ptLatLng) {
                        return this.transform_.locationPoint(_lat_lng2.default.convert(ptLatLng));
                    };

                    /**
                     * Returns the pixel position relative to the map panes,
                     * or relative to the map center if there are no panes.
                     */


                    Geo.prototype.fromLatLngToDivPixel = function fromLatLngToDivPixel(ptLatLng) {
                        if (this.mapCanvasProjection_) {
                            var latLng = new this.maps_.LatLng(ptLatLng.lat, ptLatLng.lng);
                            return this.mapCanvasProjection_.fromLatLngToDivPixel(latLng);
                        }
                        return this.fromLatLngToCenterPixel(ptLatLng);
                    };

                    /** Returns the pixel position relative to the map top-left. */


                    Geo.prototype.fromLatLngToContainerPixel = function fromLatLngToContainerPixel(ptLatLng) {
                        if (this.mapCanvasProjection_) {
                            var latLng = new this.maps_.LatLng(ptLatLng.lat, ptLatLng.lng);
                            return this.mapCanvasProjection_.fromLatLngToContainerPixel(latLng);
                        }

                        var pt = this.fromLatLngToCenterPixel(ptLatLng);
                        pt.x -= this.transform_.worldSize * Math.round(pt.x / this.transform_.worldSize);

                        pt.x += this.transform_.width / 2;
                        pt.y += this.transform_.height / 2;

                        return pt;
                    };

                    /** Returns the LatLng for the given offset from the map top-left. */


                    Geo.prototype.fromContainerPixelToLatLng = function fromContainerPixelToLatLng(ptXY) {
                        if (this.mapCanvasProjection_) {
                            var latLng = this.mapCanvasProjection_.fromContainerPixelToLatLng(ptXY);
                            return { lat: latLng.lat(), lng: latLng.lng() };
                        }

                        var ptxy = _extends({}, ptXY);
                        ptxy.x -= this.transform_.width / 2;
                        ptxy.y -= this.transform_.height / 2;
                        var ptRes = this.transform_.pointLocation(_pointGeometry2.default.convert(ptxy));

                        ptRes.lng -= 360 * Math.round(ptRes.lng / 360); // convert 2 google format
                        return ptRes;
                    };

                    Geo.prototype.getWidth = function getWidth() {
                        return this.transform_.width;
                    };

                    Geo.prototype.getHeight = function getHeight() {
                        return this.transform_.height;
                    };

                    Geo.prototype.getZoom = function getZoom() {
                        return this.transform_.zoom;
                    };

                    Geo.prototype.getCenter = function getCenter() {
                        var ptRes = this.transform_.pointLocation({ x: 0, y: 0 });

                        return ptRes;
                    };

                    Geo.prototype.getBounds = function getBounds(margins, roundFactor) {
                        var bndT = margins && margins[0] || 0;
                        var bndR = margins && margins[1] || 0;
                        var bndB = margins && margins[2] || 0;
                        var bndL = margins && margins[3] || 0;

                        if (this.getWidth() - bndR - bndL > 0 && this.getHeight() - bndT - bndB > 0) {
                            var topLeftCorner = this.transform_.pointLocation(_pointGeometry2.default.convert({
                                x: bndL - this.getWidth() / 2,
                                y: bndT - this.getHeight() / 2
                            }));
                            var bottomRightCorner = this.transform_.pointLocation(_pointGeometry2.default.convert({
                                x: this.getWidth() / 2 - bndR,
                                y: this.getHeight() / 2 - bndB
                            }));

                            var res = [topLeftCorner.lat, topLeftCorner.lng, // NW
                                bottomRightCorner.lat, bottomRightCorner.lng, // SE
                                bottomRightCorner.lat, topLeftCorner.lng, // SW
                                topLeftCorner.lat, bottomRightCorner.lng];

                            if (roundFactor) {
                                res = res.map(function (r) {
                                    return Math.round(r * roundFactor) / roundFactor;
                                });
                            }
                            return res;
                        }

                        return [0, 0, 0, 0];
                    };

                    return Geo;
                }();

                exports.default = Geo;

                /***/ }),
            /* 227 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;

                var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable class-methods-use-this */


                var _pointGeometry = __webpack_require__(95);

                var _pointGeometry2 = _interopRequireDefault(_pointGeometry);

                var _lat_lng = __webpack_require__(96);

                var _lat_lng2 = _interopRequireDefault(_lat_lng);

                var _wrap = __webpack_require__(97);

                function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

                function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// A single transform, generally used for a single tile to be scaled, rotated, and zoomed.
                var Transform = function () {
                    function Transform(tileSize, minZoom, maxZoom) {
                        _classCallCheck(this, Transform);

                        this.tileSize = tileSize || 512; // constant

                        this._minZoom = minZoom || 0;
                        this._maxZoom = maxZoom || 52;

                        this.latRange = [-85.05113, 85.05113];

                        this.width = 0;
                        this.height = 0;
                        this.zoom = 0;
                        this.center = new _lat_lng2.default(0, 0);
                        this.angle = 0;
                    }

                    Transform.prototype.zoomScale = function zoomScale(zoom) {
                        return Math.pow(2, zoom);
                    };

                    Transform.prototype.scaleZoom = function scaleZoom(scale) {
                        return Math.log(scale) / Math.LN2;
                    };

                    Transform.prototype.project = function project(latlng, worldSize) {
                        return new _pointGeometry2.default(this.lngX(latlng.lng, worldSize), this.latY(latlng.lat, worldSize));
                    };

                    Transform.prototype.unproject = function unproject(point, worldSize) {
                        return new _lat_lng2.default(this.yLat(point.y, worldSize), this.xLng(point.x, worldSize));
                    };

                    // lat/lon <-> absolute pixel coords convertion
                    Transform.prototype.lngX = function lngX(lon, worldSize) {
                        return (180 + lon) * (worldSize || this.worldSize) / 360;
                    };

                    // latitude to absolute y coord


                    Transform.prototype.latY = function latY(lat, worldSize) {
                        var y = 180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360));
                        return (180 - y) * (worldSize || this.worldSize) / 360;
                    };

                    Transform.prototype.xLng = function xLng(x, worldSize) {
                        return x * 360 / (worldSize || this.worldSize) - 180;
                    };

                    Transform.prototype.yLat = function yLat(y, worldSize) {
                        var y2 = 180 - y * 360 / (worldSize || this.worldSize);
                        return 360 / Math.PI * Math.atan(Math.exp(y2 * Math.PI / 180)) - 90;
                    };

                    Transform.prototype.locationPoint = function locationPoint(latlng) {
                        var p = this.project(latlng);
                        return this.centerPoint._sub(this.point._sub(p)._rotate(this.angle));
                    };

                    Transform.prototype.pointLocation = function pointLocation(p) {
                        var p2 = this.centerPoint._sub(p)._rotate(-this.angle);
                        return this.unproject(this.point.sub(p2));
                    };

                    _createClass(Transform, [{
                        key: 'minZoom',
                        get: function get() {
                            return this._minZoom;
                        },
                        set: function set(zoom) {
                            this._minZoom = zoom;
                            this.zoom = Math.max(this.zoom, zoom);
                        }
                    }, {
                        key: 'maxZoom',
                        get: function get() {
                            return this._maxZoom;
                        },
                        set: function set(zoom) {
                            this._maxZoom = zoom;
                            this.zoom = Math.min(this.zoom, zoom);
                        }
                    }, {
                        key: 'worldSize',
                        get: function get() {
                            return this.tileSize * this.scale;
                        }
                    }, {
                        key: 'centerPoint',
                        get: function get() {
                            return new _pointGeometry2.default(0, 0); // this.size._div(2);
                        }
                    }, {
                        key: 'size',
                        get: function get() {
                            return new _pointGeometry2.default(this.width, this.height);
                        }
                    }, {
                        key: 'bearing',
                        get: function get() {
                            return -this.angle / Math.PI * 180;
                        },
                        set: function set(bearing) {
                            this.angle = -(0, _wrap.wrap)(bearing, -180, 180) * Math.PI / 180;
                        }
                    }, {
                        key: 'zoom',
                        get: function get() {
                            return this._zoom;
                        },
                        set: function set(zoom) {
                            var zoomV = Math.min(Math.max(zoom, this.minZoom), this.maxZoom);
                            this._zoom = zoomV;
                            this.scale = this.zoomScale(zoomV);
                            this.tileZoom = Math.floor(zoomV);
                            this.zoomFraction = zoomV - this.tileZoom;
                        }
                    }, {
                        key: 'x',
                        get: function get() {
                            return this.lngX(this.center.lng);
                        }
                    }, {
                        key: 'y',
                        get: function get() {
                            return this.latY(this.center.lat);
                        }
                    }, {
                        key: 'point',
                        get: function get() {
                            return new _pointGeometry2.default(this.x, this.y);
                        }
                    }]);

                    return Transform;
                }();

                exports.default = Transform;

                /***/ }),
            /* 228 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;
                exports.default = raf;
                function raf(callback) {
                    if (window.requestAnimationFrame) {
                        return window.requestAnimationFrame(callback);
                    }

                    var nativeRaf = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame;

                    return nativeRaf ? nativeRaf(callback) : window.setTimeout(callback, 1e3 / 60);
                }

                /***/ }),
            /* 229 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;
                exports.default = pick;
// source taken from https://github.com/rackt/redux/blob/master/src/utils/pick.js

                function pick(obj, fn) {
                    return Object.keys(obj).reduce(function (result, key) {
                        if (fn(obj[key])) {
                            result[key] = obj[key]; // eslint-disable-line
                        }
                        return result;
                    }, {});
                }

                /***/ }),
            /* 230 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;
                var log2 = Math.log2 ? Math.log2 : function (x) {
                    return Math.log(x) / Math.LN2;
                };

                exports.default = log2;

                /***/ }),
            /* 231 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;

                var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

                var isEmpty = function isEmpty(val) {
                    // check for empty object {}, array []
                    if (val !== null && (typeof val === 'undefined' ? 'undefined' : _typeof(val)) === 'object') {
                        if (Object.keys(val).length === 0) {
                            return true;
                        }
                    } else if (val === null || val === undefined || val === '') {
                        // check for undefined, null and ""
                        return true;
                    }
                    return false;
                };

                exports.default = isEmpty;

                /***/ }),
            /* 232 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;

                var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

                exports.default = isNumber;
                function isObjectLike(value) {
                    return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';
                }

                var objectToString = Object.prototype.toString;

                function isNumber(value) {
                    var numberTag = '[object Number]';
                    return typeof value === 'number' || isObjectLike(value) && objectToString.call(value) === numberTag;
                }

                /***/ }),
            /* 233 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;
                exports.default = detectBrowser;
// http://stackoverflow.com/questions/5899783/detect-safari-chrome-ie-firefox-opera-with-user-agent
                var detectBrowserResult_ = null;

                function detectBrowser() {
                    if (detectBrowserResult_) {
                        return detectBrowserResult_;
                    }

                    if (typeof navigator !== 'undefined') {
                        var isExplorer = navigator.userAgent.indexOf('MSIE') > -1;
                        var isFirefox = navigator.userAgent.indexOf('Firefox') > -1;
                        var isOpera = navigator.userAgent.toLowerCase().indexOf('op') > -1;

                        var isChrome = navigator.userAgent.indexOf('Chrome') > -1;
                        var isSafari = navigator.userAgent.indexOf('Safari') > -1;

                        if (isChrome && isSafari) {
                            isSafari = false;
                        }

                        if (isChrome && isOpera) {
                            isChrome = false;
                        }

                        detectBrowserResult_ = {
                            isExplorer: isExplorer,
                            isFirefox: isFirefox,
                            isOpera: isOpera,
                            isChrome: isChrome,
                            isSafari: isSafari
                        };
                        return detectBrowserResult_;
                    }

                    detectBrowserResult_ = {
                        isChrome: true,
                        isExplorer: false,
                        isFirefox: false,
                        isOpera: false,
                        isSafari: false
                    };

                    return detectBrowserResult_;
                }

                /***/ }),
            /* 234 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;

                var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

                exports.default = isPlainObject;
// source taken from https://github.com/rackt/redux/blob/master/src/utils/isPlainObject.js
                var fnToString = function fnToString(fn) {
                    return Function.prototype.toString.call(fn);
                };

                /**
                 * @param {any} obj The object to inspect.
                 * @returns {boolean} True if the argument appears to be a plain object.
                 */
                function isPlainObject(obj) {
                    if (!obj || (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object') {
                        return false;
                    }

                    var proto = typeof obj.constructor === 'function' ? Object.getPrototypeOf(obj) : Object.prototype;

                    if (proto === null) {
                        return true;
                    }

                    var constructor = proto.constructor;

                    return typeof constructor === 'function' && constructor instanceof constructor && fnToString(constructor) === fnToString(Object);
                }

                /***/ }),
            /* 235 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                exports.__esModule = true;
                exports.default = isArraysEqualEps;
                function isArraysEqualEps(arrayA, arrayB, eps) {
                    if (arrayA && arrayB) {
                        for (var i = 0; i !== arrayA.length; ++i) {
                            if (Math.abs(arrayA[i] - arrayB[i]) > eps) {
                                return false;
                            }
                        }
                        return true;
                    }
                    return false;
                }

                /***/ }),
            /* 236 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";


                var _passiveEvents = __webpack_require__(98);

                var _passiveEvents2 = _interopRequireDefault(_passiveEvents);

                function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Reliable `window` and `document` detection
                var canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);

// Check `document` and `window` in case of server-side rendering
                /* eslint-disable */
                /**
                 * Detect Element Resize.
                 * Forked in order to guard against unsafe 'window' and 'document' references.
                 *
                 * https://github.com/sdecima/javascript-detect-element-resize
                 * Sebastian Decima
                 *
                 * version: 0.5.3
                 **/

                var _window;
                if (canUseDOM) {
                    _window = window;
                } else if (typeof self !== 'undefined') {
                    _window = self;
                } else {
                    _window = undefined;
                }

                var attachEvent = typeof document !== 'undefined' && document.attachEvent;
                var stylesCreated = false;

                if (canUseDOM && !attachEvent) {
                    var requestFrame = function () {
                        var raf = _window.requestAnimationFrame || _window.mozRequestAnimationFrame || _window.webkitRequestAnimationFrame || function (fn) {
                            return _window.setTimeout(fn, 20);
                        };
                        return function (fn) {
                            return raf(fn);
                        };
                    }();

                    var cancelFrame = function () {
                        var cancel = _window.cancelAnimationFrame || _window.mozCancelAnimationFrame || _window.webkitCancelAnimationFrame || _window.clearTimeout;
                        return function (id) {
                            return cancel(id);
                        };
                    }();

                    var resetTriggers = function resetTriggers(element) {
                        var triggers = element.__resizeTriggers__,
                            expand = triggers.firstElementChild,
                            contract = triggers.lastElementChild,
                            expandChild = expand.firstElementChild;
                        contract.scrollLeft = contract.scrollWidth;
                        contract.scrollTop = contract.scrollHeight;
                        expandChild.style.width = expand.offsetWidth + 1 + 'px';
                        expandChild.style.height = expand.offsetHeight + 1 + 'px';
                        expand.scrollLeft = expand.scrollWidth;
                        expand.scrollTop = expand.scrollHeight;
                    };

                    var checkTriggers = function checkTriggers(element) {
                        return element.offsetWidth != element.__resizeLast__.width || element.offsetHeight != element.__resizeLast__.height;
                    };

                    var scrollListener = function scrollListener(e) {
                        var element = this;
                        resetTriggers(this);
                        if (this.__resizeRAF__) cancelFrame(this.__resizeRAF__);
                        this.__resizeRAF__ = requestFrame(function () {
                            if (checkTriggers(element)) {
                                element.__resizeLast__.width = element.offsetWidth;
                                element.__resizeLast__.height = element.offsetHeight;
                                element.__resizeListeners__.forEach(function (fn) {
                                    fn.call(element, e);
                                });
                            }
                        });
                    };

                    /* Detect CSS Animations support to detect element display/re-attach */
                    var animation = false,
                        animationstring = 'animation',
                        keyframeprefix = '',
                        animationstartevent = 'animationstart',
                        domPrefixes = 'Webkit Moz O ms'.split(' '),
                        startEvents = 'webkitAnimationStart animationstart oAnimationStart MSAnimationStart'.split(' '),
                        pfx = '';

                    if (canUseDOM) {
                        var elm = document.createElement('fakeelement');
                        if (elm.style.animationName !== undefined) {
                            animation = true;
                        }

                        if (animation === false) {
                            for (var i = 0; i < domPrefixes.length; i++) {
                                if (elm.style[domPrefixes[i] + 'AnimationName'] !== undefined) {
                                    pfx = domPrefixes[i];
                                    animationstring = pfx + 'Animation';
                                    keyframeprefix = '-' + pfx.toLowerCase() + '-';
                                    animationstartevent = startEvents[i];
                                    animation = true;
                                    break;
                                }
                            }
                        }
                    }

                    var animationName = 'resizeanim';
                    var animationKeyframes = '@' + keyframeprefix + 'keyframes ' + animationName + ' { from { opacity: 0; } to { opacity: 0; } } ';
                    var animationStyle = keyframeprefix + 'animation: 1ms ' + animationName + '; ';
                }

                var createStyles = function createStyles() {
                    if (!stylesCreated) {
                        //opacity:0 works around a chrome bug https://code.google.com/p/chromium/issues/detail?id=286360
                        var css = (animationKeyframes ? animationKeyframes : '') + '.resize-triggers { ' + (animationStyle ? animationStyle : '') + 'visibility: hidden; opacity: 0; } ' + '.resize-triggers, .resize-triggers > div, .contract-trigger:before { content: " "; display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; } .resize-triggers > div { background: #eee; overflow: auto; } .contract-trigger:before { width: 200%; height: 200%; }',
                            head = document.head || document.getElementsByTagName('head')[0],
                            style = document.createElement('style');

                        style.type = 'text/css';
                        if (style.styleSheet) {
                            style.styleSheet.cssText = css;
                        } else {
                            style.appendChild(document.createTextNode(css));
                        }

                        head.appendChild(style);
                        stylesCreated = true;
                    }
                };

                var addResizeListener = function addResizeListener(element, fn) {
                    if (element.parentNode === undefined) {
                        var tempParentDiv = document.createElement('div');
                        element.parentNode = tempParentDiv;
                    }
                    element = element.parentNode;
                    if (attachEvent) element.attachEvent('onresize', fn);else {
                        if (!element.__resizeTriggers__) {
                            if (getComputedStyle(element).position == 'static') element.style.position = 'relative';
                            createStyles();
                            element.__resizeLast__ = {};
                            element.__resizeListeners__ = [];
                            (element.__resizeTriggers__ = document.createElement('div')).className = 'resize-triggers';
                            element.__resizeTriggers__.innerHTML = '<div class="expand-trigger"><div></div></div>' + '<div class="contract-trigger"></div>';
                            element.appendChild(element.__resizeTriggers__);
                            resetTriggers(element);

                            (0, _passiveEvents2.default)(element, 'scroll', scrollListener, true);

                            /* Listen for a css animation to detect element display/re-attach */
                            animationstartevent && element.__resizeTriggers__.addEventListener(animationstartevent, function (e) {
                                if (e.animationName == animationName) resetTriggers(element);
                            });
                        }
                        element.__resizeListeners__.push(fn);
                    }
                };

                var removeResizeListener = function removeResizeListener(element, fn) {
                    element = element.parentNode;
                    if (attachEvent) element.detachEvent('onresize', fn);else {
                        element.__resizeListeners__.splice(element.__resizeListeners__.indexOf(fn), 1);
                        if (!element.__resizeListeners__.length) {
                            element.removeEventListener('scroll', scrollListener);
                            element.__resizeTriggers__ = !element.removeChild(element.__resizeTriggers__);
                        }
                    }
                };

                module.exports = {
                    addResizeListener: addResizeListener,
                    removeResizeListener: removeResizeListener
                };

                /***/ }),
            /* 237 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);var _OpeningHoursContainer=__webpack_require__(85);var _OpeningHoursContainer2=_interopRequireDefault(_OpeningHoursContainer);var _constants=__webpack_require__(1);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _AppUtils=__webpack_require__(11);var _NetworkUtils=__webpack_require__(12);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var MapMarker=function(_Component){_inherits(MapMarker,_Component);function MapMarker(props){_classCallCheck(this,MapMarker);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.loadCarrierLogo=function(logoUrl,config){(0,_NetworkUtils.doGet)(logoUrl,config).then(function(res){_this.setState({carrierLogoImage:!res||!res.data?"":"data:image/svg+xml;base64,"+res.data,imageAvailable:true});}).catch(function(err){console.error(err);_this.setState({carrierLogoImage:""});});};_this.onMarkerClick=function(e){e.preventDefault();e.stopPropagation();_this.setState({opened:true});document.addEventListener('mousedown',_this.handleClickOutside);document.addEventListener('touchstart',_this.handleClickOutside);_this.props.onSelectPickupLocation(_this.props.pickupLocation.code);_this.scrollToPickupLocation();};_this.scrollToPickupLocation=function(){var pickupLocation=_this.props.pickupLocation;pickupLocation&&pickupLocation.ref&&pickupLocation.ref.scrollIntoViewIfNeeded();};_this.onMarkerTouch=function(e){e.stopPropagation();};_this.setWrapperRef=function(node){_this.wrapperRef=node;};_this.handleClickOutside=function(event){var pickupLocation=_this.props.pickupLocation;var outsideTooltip=!_this.wrapperRef||!_this.wrapperRef.contains(event.target);var outsideListElement=!pickupLocation.ref||!pickupLocation.ref.contains(event.target);if(outsideTooltip&&outsideListElement){_this.setState({opened:false,animated:false});document.removeEventListener('mousedown',_this.handleClickOutside);document.removeEventListener('touchstart',_this.handleClickOutside);}};_this.getLogo=function(carrierLogoImage){var _this$props=_this.props,pickupLocation=_this$props.pickupLocation,isStorePickup=_this$props.isStorePickup,storeLogo=_this$props.storeLogo;if(isStorePickup||(0,_AppUtils.isStoreOption)(pickupLocation)){return storeLogo&&h("img",{src:storeLogo,className:"tooltip__logo__source polyfill-object-fit-contain",onError:_this.handleImageError});}return carrierLogoImage&&h("img",{src:carrierLogoImage,className:"tooltip__logo__source polyfill-object-fit-contain",onError:_this.handleImageError,alt:pickupLocation.shippingOptions[0].carrier.name,title:pickupLocation.shippingOptions[0].carrier.name});};_this.handleImageError=function(){_this.setState({imageAvailable:false});};var opened=props.pickupLocation&&props.pickupLocation.checked;_this.state={opened:opened,animated:true,imageAvailable:true,carrierLogoImage:''};if(opened){document.addEventListener('mousedown',_this.handleClickOutside);document.addEventListener('touchstart',_this.handleClickOutside);}return _this;}MapMarker.prototype.componentDidMount=function componentDidMount(){var _props=this.props,pickupLocation=_props.pickupLocation,config=_props.config;if(this.state.opened){this.props.updateMapPosition(true);}this.loadCarrierLogo(_constants.CARRIER_LOGO_URL+pickupLocation.shippingOptions[0].carrier.name+".svg",config);};MapMarker.prototype.componentDidUpdate=function componentDidUpdate(prevProps,prevState){if(this.state.opened&&!prevState.opened){this.props.updateMapPosition(true);}};MapMarker.prototype.componentWillReceiveProps=function componentWillReceiveProps(newProps){if(!this.props.pickupLocation.checked&&newProps.pickupLocation.checked){this.setState({opened:true,animated:true});document.addEventListener('mousedown',this.handleClickOutside);document.addEventListener('touchstart',this.handleClickOutside);}if(this.props.pickupLocation.checked&&!newProps.pickupLocation.checked){this.setState({opened:false,animated:false});}if(this.props.pickupLocation.checked&&newProps.pickupLocation.checked&&this.props.pickupLocation.code!==newProps.pickupLocation.code){this.setState({opened:true,animated:true});}};MapMarker.prototype.render=function render(){var _props2=this.props,pickupLocation=_props2.pickupLocation,storeLogo=_props2.storeLogo,setTooltipRef=_props2.setTooltipRef;var _state=this.state,opened=_state.opened,animated=_state.animated,imageAvailable=_state.imageAvailable,carrierLogoImage=_state.carrierLogoImage;var openingTimes=pickupLocation.openingTimes;var addressLine=[pickupLocation.address.street,pickupLocation.address.streetNumber,pickupLocation.address.streetNumberSuffix].join(' ');var isStore=(0,_AppUtils.isStoreOption)(pickupLocation)&&storeLogo;return h("div",{ref:this.setWrapperRef,className:"map-marker"},opened&&h("div",{ref:setTooltipRef,className:"widget-tooltip tooltip--map"},h("div",{className:"paazl-delimiter"},h("header",{className:"tooltip__header"},h("hgroup",{className:"tooltip__titles"},h(_StringWrapper2.default,{Tag:"h4",additionalClassName:"tooltip__title",content:pickupLocation.name,notranslate:true}),h(_StringWrapper2.default,{content:addressLine,additionalClassName:"tooltip__address",notranslate:true})),h("figure",{className:"tooltip__logo"},imageAvailable&&this.getLogo(carrierLogoImage))),h(_OpeningHoursContainer2.default,{openingTimes:openingTimes}))),h("div",{className:"marker",onClick:this.onMarkerClick,onTouchStart:this.onMarkerTouch},h("div",{className:(0,_classnames2.default)('pin',{animated:animated,"default-marker":!isStore},pickupLocation.checked&&'focused')},isStore&&h("img",{src:storeLogo})),h("div",{className:"pulse"})));};return MapMarker;}(_preact.Component);exports.default=MapMarker;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 238 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _PickupModalListElement=__webpack_require__(239);var _PickupModalListElement2=_interopRequireDefault(_PickupModalListElement);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _constants=__webpack_require__(1);var _ItemsNotFoundForm=__webpack_require__(53);var _ItemsNotFoundForm2=_interopRequireDefault(_ItemsNotFoundForm);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PickupModalListContainer=function(_Component){_inherits(PickupModalListContainer,_Component);function PickupModalListContainer(props){_classCallCheck(this,PickupModalListContainer);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.onPickupHere=function(){var _this$props=_this.props,onPickupHere=_this$props.onPickupHere,pickupLocations=_this$props.pickupLocations,initialPickupLocations=_this$props.initialPickupLocations,config=_this$props.config;var itemIndex=pickupLocations.findIndex(function(o){return o.checked;});if(itemIndex!==-1){var outerLocationsCount=config.initialPickupLocations;var itemVisibleInitially=itemIndex<outerLocationsCount&&initialPickupLocations.length>1;var visibleLocations=itemVisibleInitially?pickupLocations.slice(0,outerLocationsCount):pickupLocations.slice(itemIndex,itemIndex+1);onPickupHere&&onPickupHere(visibleLocations);}};_this.preventScrollPropagation=function(e){e.stopPropagation();};return _this;}PickupModalListContainer.prototype.render=function render(){var _this2=this;var _props=this.props,pickupLocations=_props.pickupLocations,isStorePickup=_props.isStorePickup,storeLogo=_props.storeLogo,loadMorePickupLocations=_props.loadMorePickupLocations,canLoadMore=_props.canLoadMore,createPickupLocationRef=_props.createPickupLocationRef,onSelectPickupLocation=_props.onSelectPickupLocation,onSelectShippingOption=_props.onSelectShippingOption,config=_props.config;var currentTab=isStorePickup?_constants.TABS.STORE:_constants.TABS.PICKUP;var hasPickupLocations=pickupLocations&&pickupLocations.length>0;return h("section",{className:"window__items",onScroll:this.preventScrollPropagation,onTouchMove:this.preventScrollPropagation},h("ul",{className:"window__listing"},hasPickupLocations?pickupLocations.map(function(p){return h(_PickupModalListElement2.default,{pickupLocation:p,isStorePickup:isStorePickup,storeLogo:storeLogo,onSelectPickupLocation:onSelectPickupLocation,onSelectShippingOption:onSelectShippingOption,onPickupHere:_this2.onPickupHere,createPickupLocationRef:createPickupLocationRef,config:config});}):h("div",{className:"service-points-not-found"},h(_ItemsNotFoundForm2.default,{tab:currentTab}))),hasPickupLocations&&h("footer",{className:(0,_classnames2.default)("window__listing__footer",{"hidden":!canLoadMore})},h("button",{className:"window__listing__button button button--primary",onClick:loadMorePickupLocations},h(_TextWrapper2.default,{id:"pickupLocations.loadMore"}))));};return PickupModalListContainer;}(_preact.Component);exports.default=PickupModalListContainer;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 239 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);var _OpeningHoursTooltipLink=__webpack_require__(84);var _OpeningHoursTooltipLink2=_interopRequireDefault(_OpeningHoursTooltipLink);var _ShippingOptionsDropdown=__webpack_require__(240);var _ShippingOptionsDropdown2=_interopRequireDefault(_ShippingOptionsDropdown);var _DatesEstimationUtils=__webpack_require__(22);var _CurrencyUtils=__webpack_require__(17);var _LabelAddressForm=__webpack_require__(86);var _LabelAddressForm2=_interopRequireDefault(_LabelAddressForm);var _LabelPriceDistanceAsideForm=__webpack_require__(87);var _LabelPriceDistanceAsideForm2=_interopRequireDefault(_LabelPriceDistanceAsideForm);var _AppUtils=__webpack_require__(11);var _StoreLogoForm=__webpack_require__(88);var _StoreLogoForm2=_interopRequireDefault(_StoreLogoForm);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PickupModalListElement=function(_Component){_inherits(PickupModalListElement,_Component);function PickupModalListElement(props){_classCallCheck(this,PickupModalListElement);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.onSelectPickupLocation=function(e){var _this$props=_this.props,pickupLocation=_this$props.pickupLocation,onSelectPickupLocation=_this$props.onSelectPickupLocation;if(!pickupLocation.checked){onSelectPickupLocation&&onSelectPickupLocation(pickupLocation.code);}if(_this.dropdownRef&&!_this.dropdownRef.contains(e.target)){_this.inputRef&&_this.inputRef.focus();}};_this.createRefWrap=function(ref){var _this$props2=_this.props,pickupLocation=_this$props2.pickupLocation,createPickupLocationRef=_this$props2.createPickupLocationRef;createPickupLocationRef&&createPickupLocationRef(ref,pickupLocation.code);return ref;};_this.setInputRef=function(node){_this.inputRef=node;};_this.setDropdownRef=function(node){_this.dropdownRef=node;};_this.onPickupHere=function(){var _this$props3=_this.props,pickupLocation=_this$props3.pickupLocation,onPickupHere=_this$props3.onPickupHere;onPickupHere&&onPickupHere(pickupLocation);};_this.getAvailabilityEstimate=function(){var _this$props4=_this.props,pickupLocation=_this$props4.pickupLocation,config=_this$props4.config;var shippingOption=(0,_AppUtils.findSelectedOptionForPickup)(pickupLocation);if(shippingOption){return(0,_DatesEstimationUtils.resolveDateEstimationComponent)(_DatesEstimationUtils.TYPE.PICKUP_LONG,shippingOption,config.deliveryRangeFormat);}};_this.onFocusIn=function(){_this.setState({focused:true});};_this.onFocusOut=function(){_this.setState({focused:false});};_this.state={focused:false};return _this;}PickupModalListElement.prototype.render=function render(){var _props=this.props,pickupLocation=_props.pickupLocation,onSelectShippingOption=_props.onSelectShippingOption,config=_props.config,isStorePickup=_props.isStorePickup,storeLogo=_props.storeLogo;var focused=this.state.focused;var checked=pickupLocation.checked;var availabilityEstimate=this.getAvailabilityEstimate();var isStore=isStorePickup||(0,_AppUtils.isStoreOption)(pickupLocation);var idPrefix=isStore?"store-":"point-";var pickupType=isStore?"store":"carrier";return h("li",{className:"window__listing__item",ref:this.createRefWrap},h("article",{className:"point point--compact paazl-delimiter",key:pickupLocation.code,onClick:this.onSelectPickupLocation},h("div",{className:(0,_classnames2.default)("point__label",{"point--store":isStore&&storeLogo,checked:checked,focused:focused})},h("div",{className:"paazl-delimiter"},h("div",{className:(0,_classnames2.default)({"point--store":isStore&&storeLogo})},h("header",{className:"point__header"},h("section",{className:"point__main"},h(_StoreLogoForm2.default,{isStorePickup:isStore,storeLogo:storeLogo,config:config}),h("section",{className:"point__main__body"},h("h4",{className:"point__title"},h("input",{type:"radio",className:"point__hidden",id:idPrefix+"modal-"+pickupLocation.code,name:isStore?"selected-store":"selected-point",ref:this.setInputRef,checked:checked,onFocus:this.onFocusIn,onBlur:this.onFocusOut}),h("label",{htmlFor:idPrefix+"modal-"+pickupLocation.code},h(_StringWrapper2.default,{content:pickupLocation.name,notranslate:true}))))),h(_LabelPriceDistanceAsideForm2.default,{pickupLocation:pickupLocation,config:config})),h(_LabelAddressForm2.default,{address:pickupLocation.address,storeLogoMissing:!storeLogo}),h("ul",{className:"point__options"},h(_OpeningHoursTooltipLink2.default,{openingTimes:pickupLocation.openingTimes}))),h("nav",{className:"point__select"},h(_ShippingOptionsDropdown2.default,{pickupLocation:pickupLocation,currentRate:(0,_CurrencyUtils.getPickupLocationShippingRate)(pickupLocation),onSelectShippingOption:onSelectShippingOption,setDropdownRef:this.setDropdownRef}),h("button",{className:"point__button button button--primary",onClick:this.onPickupHere},h(_TextWrapper2.default,{id:"pickupLocations.pickUpHere"})),h("aside",{className:"point__message point__message--logo"},h("span",{className:(0,_classnames2.default)({"point__message__text":availabilityEstimate})},availabilityEstimate&&h(_TextWrapper2.default,{id:"pickupLocations."+pickupType+".packageWillBeReady",spaceAfter:true}),availabilityEstimate)))))));};return PickupModalListElement;}(_preact.Component);exports.default=PickupModalListElement;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 240 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _I18nResolver=__webpack_require__(28);var _StringWrapper=__webpack_require__(6);var _StringWrapper2=_interopRequireDefault(_StringWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var ShippingOptionsDropdown=function(_Component){_inherits(ShippingOptionsDropdown,_Component);function ShippingOptionsDropdown(props){_classCallCheck(this,ShippingOptionsDropdown);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.onSelectShippingOption=function(e){var _this$props=_this.props,pickupLocation=_this$props.pickupLocation,onSelectShippingOption=_this$props.onSelectShippingOption;onSelectShippingOption&&onSelectShippingOption(pickupLocation.code,e.target.value);};_this.countDelta=function(p){var currentRate=_this.props.currentRate;var delta=void 0;if(p.rate===0){var tranlations=(0,_I18nResolver.getCurrentTranslation)();delta="("+tranlations.common.free+")";}else{var rate=p.rate-currentRate;var prefix=rate>0?"+":"";delta=rate===0?"":"("+(prefix+"€ "+rate)+")";}return h("option",{value:p.identifier},h(_StringWrapper2.default,{content:p.name+" "+delta,notranslate:true}));};return _this;}ShippingOptionsDropdown.prototype.render=function render(){var _props=this.props,pickupLocation=_props.pickupLocation,setDropdownRef=_props.setDropdownRef;return pickupLocation.shippingOptions.length>1&&h("div",{className:"point__select__dropdown select",ref:setDropdownRef},h("select",{className:"select__source",onChange:this.onSelectShippingOption,"data-no-fancy-select":"true"},pickupLocation.shippingOptions.map(this.countDelta)));};return ShippingOptionsDropdown;}(_preact.Component);exports.default=ShippingOptionsDropdown;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 241 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _TextWrapper=__webpack_require__(3);var _TextWrapper2=_interopRequireDefault(_TextWrapper);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var SearchContainer=function(_Component){_inherits(SearchContainer,_Component);function SearchContainer(props){_classCallCheck(this,SearchContainer);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.componentDidMount=function(){var consigneePostalCode=_this.props.config.consigneePostalCode;_this.setState({postalCode:consigneePostalCode});};_this.checkEnterKeyPress=function(e){if(e.keyCode===13){e.preventDefault();e.stopPropagation();_this.onChangePostalCode(e);_this.executeUpdatePostalCode();}};_this.onChangePostalCode=function(e){var postalCode=e.target.value;_this.setState({postalCode:postalCode});};_this.onSearchButtonClick=function(e){e.preventDefault();e.stopPropagation();_this.executeUpdatePostalCode();};_this.executeUpdatePostalCode=function(){var _this$state=_this.state,consigneePostalCode=_this$state.consigneePostalCode,postalCode=_this$state.postalCode;var loadPickupLocations=_this.props.loadPickupLocations;if(consigneePostalCode!==postalCode){_this.setState({consigneePostalCode:postalCode});loadPickupLocations(postalCode);}};_this.state={postalCode:"",consigneePostalCode:""};return _this;}SearchContainer.prototype.render=function render(){var postalCode=this.state.postalCode;return h("form",{className:"window__form"},h("div",{className:"window__form__input-group"},h("input",{type:"text",className:"window__form__field field field--search",value:postalCode,onChange:this.onChangePostalCode,onBlurCapture:this.executeUpdatePostalCode,onKeyPress:this.checkEnterKeyPress}),h("button",{className:"window__form__button button button--primary button--small",onClick:this.onSearchButtonClick},h(_TextWrapper2.default,{id:"pickupLocations.search"}))));};return SearchContainer;}(_preact.Component);exports.default=SearchContainer;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 242 */
            /***/ (function(module, exports, __webpack_require__) {

                "use strict";
                /* WEBPACK VAR INJECTION */(function(h) {exports.__esModule=true;exports.default=undefined;var _preact=__webpack_require__(0);var _classnames=__webpack_require__(2);var _classnames2=_interopRequireDefault(_classnames);var _PickupLocationMapForm=__webpack_require__(89);var _PickupLocationMapForm2=_interopRequireDefault(_PickupLocationMapForm);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call&&(typeof call==="object"||typeof call==="function")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!=="function"&&superClass!==null){throw new TypeError("Super expression must either be null or a function, not "+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var SimpleMapModal=function(_Component){_inherits(SimpleMapModal,_Component);function SimpleMapModal(props){_classCallCheck(this,SimpleMapModal);var _this=_possibleConstructorReturn(this,_Component.call(this,props));_this.closeModal=function(){_this.props.toggleMapModal(false);};_this.preventScroll=function(e){e.preventDefault();e.stopPropagation();};_this.noop=function(){};return _this;}/**
                 * Stub for unused callbacks.
                 */SimpleMapModal.prototype.render=function render(){var _props=this.props,pickupLocation=_props.pickupLocation,open=_props.open,isStorePickup=_props.isStorePickup,storeLogo=_props.storeLogo,config=_props.config;var modalClassName=(0,_classnames2.default)("pickup-select__modal modal",{open:open});var pickupLocations=pickupLocation?[pickupLocation]:[];return h("aside",{className:modalClassName,"aria-modal":"true","aria-hidden":"true",id:"simple-map",onScroll:this.preventScroll,onTouchMove:this.preventScroll},h("div",{className:"modal__container"},h("section",{className:"window"},h(_PickupLocationMapForm2.default,{pickupLocations:pickupLocations,open:open,onSelectPickupLocation:this.noop,isStorePickup:isStorePickup,storeLogo:storeLogo,config:config,simple:true}),h("button",{className:"window__close",onClick:this.closeModal},"Close"))));};return SimpleMapModal;}(_preact.Component);exports.default=SimpleMapModal;
                    /* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)["h"]))

                /***/ }),
            /* 243 */
            /***/ (function(module, __webpack_exports__, __webpack_require__) {

                "use strict";
                Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
                /*!
 * css-vars-ponyfill
 * v2.0.2
 * https://jhildenbiddle.github.io/css-vars-ponyfill/
 * (c) 2018-2019 John Hildenbiddle <http://hildenbiddle.com>
 * MIT license
 */
                function _extends() {
                    _extends = Object.assign || function(target) {
                        for (var i = 1; i < arguments.length; i++) {
                            var source = arguments[i];
                            for (var key in source) {
                                if (Object.prototype.hasOwnProperty.call(source, key)) {
                                    target[key] = source[key];
                                }
                            }
                        }
                        return target;
                    };
                    return _extends.apply(this, arguments);
                }

                function _toConsumableArray(arr) {
                    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();
                }

                function _arrayWithoutHoles(arr) {
                    if (Array.isArray(arr)) {
                        for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];
                        return arr2;
                    }
                }

                function _iterableToArray(iter) {
                    if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]") return Array.from(iter);
                }

                function _nonIterableSpread() {
                    throw new TypeError("Invalid attempt to spread non-iterable instance");
                }

                /*!
 * get-css-data
 * v1.6.3
 * https://github.com/jhildenbiddle/get-css-data
 * (c) 2018-2019 John Hildenbiddle <http://hildenbiddle.com>
 * MIT license
 */ function getUrls(urls) {
                    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                    var settings = {
                        mimeType: options.mimeType || null,
                        onBeforeSend: options.onBeforeSend || Function.prototype,
                        onSuccess: options.onSuccess || Function.prototype,
                        onError: options.onError || Function.prototype,
                        onComplete: options.onComplete || Function.prototype
                    };
                    var urlArray = Array.isArray(urls) ? urls : [ urls ];
                    var urlQueue = Array.apply(null, Array(urlArray.length)).map(function(x) {
                        return null;
                    });
                    function isValidCss() {
                        var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
                        var isHTML = cssText.trim().charAt(0) === "<";
                        return !isHTML;
                    }
                    function onError(xhr, urlIndex) {
                        settings.onError(xhr, urlArray[urlIndex], urlIndex);
                    }
                    function onSuccess(responseText, urlIndex) {
                        var returnVal = settings.onSuccess(responseText, urlArray[urlIndex], urlIndex);
                        responseText = returnVal === false ? "" : returnVal || responseText;
                        urlQueue[urlIndex] = responseText;
                        if (urlQueue.indexOf(null) === -1) {
                            settings.onComplete(urlQueue);
                        }
                    }
                    var parser = document.createElement("a");
                    urlArray.forEach(function(url, i) {
                        parser.setAttribute("href", url);
                        parser.href = String(parser.href);
                        var isIElte9 = Boolean(document.all && !window.atob);
                        var isIElte9CORS = isIElte9 && parser.host.split(":")[0] !== location.host.split(":")[0];
                        if (isIElte9CORS) {
                            var isSameProtocol = parser.protocol === location.protocol;
                            if (isSameProtocol) {
                                var xdr = new XDomainRequest();
                                xdr.open("GET", url);
                                xdr.timeout = 0;
                                xdr.onprogress = Function.prototype;
                                xdr.ontimeout = Function.prototype;
                                xdr.onload = function() {
                                    if (isValidCss(xdr.responseText)) {
                                        onSuccess(xdr.responseText, i);
                                    } else {
                                        onError(xdr, i);
                                    }
                                };
                                xdr.onerror = function(err) {
                                    onError(xdr, i);
                                };
                                setTimeout(function() {
                                    xdr.send();
                                }, 0);
                            } else {
                                console.warn("Internet Explorer 9 Cross-Origin (CORS) requests must use the same protocol (".concat(url, ")"));
                                onError(null, i);
                            }
                        } else {
                            var xhr = new XMLHttpRequest();
                            xhr.open("GET", url);
                            if (settings.mimeType && xhr.overrideMimeType) {
                                xhr.overrideMimeType(settings.mimeType);
                            }
                            settings.onBeforeSend(xhr, url, i);
                            xhr.onreadystatechange = function() {
                                if (xhr.readyState === 4) {
                                    if (xhr.status === 200 && isValidCss(xhr.responseText)) {
                                        onSuccess(xhr.responseText, i);
                                    } else {
                                        onError(xhr, i);
                                    }
                                }
                            };
                            xhr.send();
                        }
                    });
                }

                /**
                 * Gets CSS data from <style> and <link> nodes (including @imports), then
                 * returns data in order processed by DOM. Allows specifying nodes to
                 * include/exclude and filtering CSS data using RegEx.
                 *
                 * @preserve
                 * @param {object}   [options] The options object
                 * @param {object}   [options.rootElement=document] Root element to traverse for
                 *                   <link> and <style> nodes.
                 * @param {string}   [options.include] CSS selector matching <link> and <style>
                 *                   nodes to include
                 * @param {string}   [options.exclude] CSS selector matching <link> and <style>
                 *                   nodes to exclude
                 * @param {object}   [options.filter] Regular expression used to filter node CSS
                 *                   data. Each block of CSS data is tested against the filter,
                 *                   and only matching data is included.
                 * @param {object}   [options.useCSSOM=false] Determines if CSS data will be
                 *                   collected from a stylesheet's runtime values instead of its
                 *                   text content. This is required to get accurate CSS data
                 *                   when a stylesheet has been modified using the deleteRule()
                 *                   or insertRule() methods because these modifications will
                 *                   not be reflected in the stylesheet's text content.
                 * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes
                 *                   1) the XHR object, 2) source node reference, and 3) the
                 *                   source URL as arguments.
                 * @param {function} [options.onSuccess] Callback on each CSS node read. Passes
                 *                   1) CSS text, 2) source node reference, and 3) the source
                 *                   URL as arguments.
                 * @param {function} [options.onError] Callback on each error. Passes 1) the XHR
                 *                   object for inspection, 2) soure node reference, and 3) the
                 *                   source URL that failed (either a <link> href or an @import)
                 *                   as arguments
                 * @param {function} [options.onComplete] Callback after all nodes have been
                 *                   processed. Passes 1) concatenated CSS text, 2) an array of
                 *                   CSS text in DOM order, and 3) an array of nodes in DOM
                 *                   order as arguments.
                 *
                 * @example
                 *
                 *   getCssData({
                 *     rootElement: document,
                 *     include    : 'style,link[rel="stylesheet"]',
                 *     exclude    : '[href="skip.css"]',
                 *     filter     : /red/,
                 *     useCSSOM   : false,
                 *     onBeforeSend(xhr, node, url) {
                 *       // ...
                 *     }
                 *     onSuccess(cssText, node, url) {
                 *       // ...
                 *     }
                 *     onError(xhr, node, url) {
                 *       // ...
                 *     },
                 *     onComplete(cssText, cssArray, nodeArray) {
                 *       // ...
                 *     }
                 *   });
                 */ function getCssData(options) {
                    var regex = {
                        cssComments: /\/\*[\s\S]+?\*\//g,
                        cssImports: /(?:@import\s*)(?:url\(\s*)?(?:['"])([^'"]*)(?:['"])(?:\s*\))?(?:[^;]*;)/g
                    };
                    var settings = {
                        rootElement: options.rootElement || document,
                        include: options.include || 'style,link[rel="stylesheet"]',
                        exclude: options.exclude || null,
                        filter: options.filter || null,
                        useCSSOM: options.useCSSOM || false,
                        onBeforeSend: options.onBeforeSend || Function.prototype,
                        onSuccess: options.onSuccess || Function.prototype,
                        onError: options.onError || Function.prototype,
                        onComplete: options.onComplete || Function.prototype
                    };
                    var sourceNodes = Array.apply(null, settings.rootElement.querySelectorAll(settings.include)).filter(function(node) {
                        return !matchesSelector(node, settings.exclude);
                    });
                    var cssArray = Array.apply(null, Array(sourceNodes.length)).map(function(x) {
                        return null;
                    });
                    function handleComplete() {
                        var isComplete = cssArray.indexOf(null) === -1;
                        if (isComplete) {
                            var cssText = cssArray.join("");
                            settings.onComplete(cssText, cssArray, sourceNodes);
                        }
                    }
                    function handleSuccess(cssText, cssIndex, node, sourceUrl) {
                        var returnVal = settings.onSuccess(cssText, node, sourceUrl);
                        cssText = returnVal !== undefined && Boolean(returnVal) === false ? "" : returnVal || cssText;
                        resolveImports(cssText, node, sourceUrl, function(resolvedCssText, errorData) {
                            if (cssArray[cssIndex] === null) {
                                errorData.forEach(function(data) {
                                    return settings.onError(data.xhr, node, data.url);
                                });
                                if (!settings.filter || settings.filter.test(resolvedCssText)) {
                                    cssArray[cssIndex] = resolvedCssText;
                                } else {
                                    cssArray[cssIndex] = "";
                                }
                                handleComplete();
                            }
                        });
                    }
                    function parseImportData(cssText, baseUrl) {
                        var ignoreRules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
                        var importData = {};
                        importData.rules = (cssText.replace(regex.cssComments, "").match(regex.cssImports) || []).filter(function(rule) {
                            return ignoreRules.indexOf(rule) === -1;
                        });
                        importData.urls = importData.rules.map(function(rule) {
                            return rule.replace(regex.cssImports, "$1");
                        });
                        importData.absoluteUrls = importData.urls.map(function(url) {
                            return getFullUrl(url, baseUrl);
                        });
                        importData.absoluteRules = importData.rules.map(function(rule, i) {
                            var oldUrl = importData.urls[i];
                            var newUrl = getFullUrl(importData.absoluteUrls[i], baseUrl);
                            return rule.replace(oldUrl, newUrl);
                        });
                        return importData;
                    }
                    function resolveImports(cssText, node, baseUrl, callbackFn) {
                        var __errorData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];
                        var __errorRules = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];
                        var importData = parseImportData(cssText, baseUrl, __errorRules);
                        if (importData.rules.length) {
                            getUrls(importData.absoluteUrls, {
                                onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {
                                    settings.onBeforeSend(xhr, node, url);
                                },
                                onSuccess: function onSuccess(cssText, url, urlIndex) {
                                    var returnVal = settings.onSuccess(cssText, node, url);
                                    cssText = returnVal === false ? "" : returnVal || cssText;
                                    var responseImportData = parseImportData(cssText, url, __errorRules);
                                    responseImportData.rules.forEach(function(rule, i) {
                                        cssText = cssText.replace(rule, responseImportData.absoluteRules[i]);
                                    });
                                    return cssText;
                                },
                                onError: function onError(xhr, url, urlIndex) {
                                    __errorData.push({
                                        xhr: xhr,
                                        url: url
                                    });
                                    __errorRules.push(importData.rules[urlIndex]);
                                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);
                                },
                                onComplete: function onComplete(responseArray) {
                                    responseArray.forEach(function(importText, i) {
                                        cssText = cssText.replace(importData.rules[i], importText);
                                    });
                                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);
                                }
                            });
                        } else {
                            callbackFn(cssText, __errorData);
                        }
                    }
                    if (sourceNodes.length) {
                        sourceNodes.forEach(function(node, i) {
                            var linkHref = node.getAttribute("href");
                            var linkRel = node.getAttribute("rel");
                            var isLink = node.nodeName === "LINK" && linkHref && linkRel && linkRel.toLowerCase() === "stylesheet";
                            var isStyle = node.nodeName === "STYLE";
                            if (isLink) {
                                getUrls(linkHref, {
                                    mimeType: "text/css",
                                    onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {
                                        settings.onBeforeSend(xhr, node, url);
                                    },
                                    onSuccess: function onSuccess(cssText, url, urlIndex) {
                                        var sourceUrl = getFullUrl(linkHref, location.href);
                                        handleSuccess(cssText, i, node, sourceUrl);
                                    },
                                    onError: function onError(xhr, url, urlIndex) {
                                        cssArray[i] = "";
                                        settings.onError(xhr, node, url);
                                        handleComplete();
                                    }
                                });
                            } else if (isStyle) {
                                var cssText = node.textContent;
                                if (settings.useCSSOM) {
                                    cssText = Array.apply(null, node.sheet.cssRules).map(function(rule) {
                                        return rule.cssText;
                                    }).join("");
                                }
                                handleSuccess(cssText, i, node, location.href);
                            } else {
                                cssArray[i] = "";
                                handleComplete();
                            }
                        });
                    } else {
                        settings.onComplete("", []);
                    }
                }

                function getFullUrl(url) {
                    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.href;
                    var d = document.implementation.createHTMLDocument("");
                    var b = d.createElement("base");
                    var a = d.createElement("a");
                    d.head.appendChild(b);
                    d.body.appendChild(a);
                    b.href = base;
                    a.href = url;
                    return a.href;
                }

                function matchesSelector(elm, selector) {
                    var matches = elm.matches || elm.matchesSelector || elm.webkitMatchesSelector || elm.mozMatchesSelector || elm.msMatchesSelector || elm.oMatchesSelector;
                    return matches.call(elm, selector);
                }

                var balancedMatch = balanced;

                function balanced(a, b, str) {
                    if (a instanceof RegExp) a = maybeMatch(a, str);
                    if (b instanceof RegExp) b = maybeMatch(b, str);
                    var r = range(a, b, str);
                    return r && {
                        start: r[0],
                        end: r[1],
                        pre: str.slice(0, r[0]),
                        body: str.slice(r[0] + a.length, r[1]),
                        post: str.slice(r[1] + b.length)
                    };
                }

                function maybeMatch(reg, str) {
                    var m = str.match(reg);
                    return m ? m[0] : null;
                }

                balanced.range = range;

                function range(a, b, str) {
                    var begs, beg, left, right, result;
                    var ai = str.indexOf(a);
                    var bi = str.indexOf(b, ai + 1);
                    var i = ai;
                    if (ai >= 0 && bi > 0) {
                        begs = [];
                        left = str.length;
                        while (i >= 0 && !result) {
                            if (i == ai) {
                                begs.push(i);
                                ai = str.indexOf(a, i + 1);
                            } else if (begs.length == 1) {
                                result = [ begs.pop(), bi ];
                            } else {
                                beg = begs.pop();
                                if (beg < left) {
                                    left = beg;
                                    right = bi;
                                }
                                bi = str.indexOf(b, i + 1);
                            }
                            i = ai < bi && ai >= 0 ? ai : bi;
                        }
                        if (begs.length) {
                            result = [ left, right ];
                        }
                    }
                    return result;
                }

                function parseCss(css) {
                    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                    var defaults = {
                        preserveStatic: true,
                        removeComments: false
                    };
                    var settings = _extends({}, defaults, options);
                    var errors = [];
                    function error(msg) {
                        throw new Error("CSS parse error: ".concat(msg));
                    }
                    function match(re) {
                        var m = re.exec(css);
                        if (m) {
                            css = css.slice(m[0].length);
                            return m;
                        }
                    }
                    function open() {
                        return match(/^{\s*/);
                    }
                    function close() {
                        return match(/^}/);
                    }
                    function whitespace() {
                        match(/^\s*/);
                    }
                    function comment() {
                        whitespace();
                        if (css[0] !== "/" || css[1] !== "*") {
                            return;
                        }
                        var i = 2;
                        while (css[i] && (css[i] !== "*" || css[i + 1] !== "/")) {
                            i++;
                        }
                        if (!css[i]) {
                            return error("end of comment is missing");
                        }
                        var str = css.slice(2, i);
                        css = css.slice(i + 2);
                        return {
                            type: "comment",
                            comment: str
                        };
                    }
                    function comments() {
                        var cmnts = [];
                        var c;
                        while (c = comment()) {
                            cmnts.push(c);
                        }
                        return settings.removeComments ? [] : cmnts;
                    }
                    function selector() {
                        whitespace();
                        while (css[0] === "}") {
                            error("extra closing bracket");
                        }
                        var m = match(/^(("(?:\\"|[^"])*"|'(?:\\'|[^'])*'|[^{])+)/);
                        if (m) {
                            return m[0].trim().replace(/\/\*([^*]|[\r\n]|(\*+([^*\/]|[\r\n])))*\*\/+/g, "").replace(/"(?:\\"|[^"])*"|'(?:\\'|[^'])*'/g, function(m) {
                                return m.replace(/,/g, "‌");
                            }).split(/\s*(?![^(]*\)),\s*/).map(function(s) {
                                return s.replace(/\u200C/g, ",");
                            });
                        }
                    }
                    function declaration() {
                        match(/^([;\s]*)+/);
                        var comment_regexp = /\/\*[^*]*\*+([^\/*][^*]*\*+)*\//g;
                        var prop = match(/^(\*?[-#\/*\\\w]+(\[[0-9a-z_-]+\])?)\s*/);
                        if (!prop) {
                            return;
                        }
                        prop = prop[0].trim();
                        if (!match(/^:\s*/)) {
                            return error("property missing ':'");
                        }
                        var val = match(/^((?:\/\*.*?\*\/|'(?:\\'|.)*?'|"(?:\\"|.)*?"|\((\s*'(?:\\'|.)*?'|"(?:\\"|.)*?"|[^)]*?)\s*\)|[^};])+)/);
                        var ret = {
                            type: "declaration",
                            property: prop.replace(comment_regexp, ""),
                            value: val ? val[0].replace(comment_regexp, "").trim() : ""
                        };
                        match(/^[;\s]*/);
                        return ret;
                    }
                    function declarations() {
                        if (!open()) {
                            return error("missing '{'");
                        }
                        var d;
                        var decls = comments();
                        while (d = declaration()) {
                            decls.push(d);
                            decls = decls.concat(comments());
                        }
                        if (!close()) {
                            return error("missing '}'");
                        }
                        return decls;
                    }
                    function keyframe() {
                        whitespace();
                        var vals = [];
                        var m;
                        while (m = match(/^((\d+\.\d+|\.\d+|\d+)%?|[a-z]+)\s*/)) {
                            vals.push(m[1]);
                            match(/^,\s*/);
                        }
                        if (vals.length) {
                            return {
                                type: "keyframe",
                                values: vals,
                                declarations: declarations()
                            };
                        }
                    }
                    function at_keyframes() {
                        var m = match(/^@([-\w]+)?keyframes\s*/);
                        if (!m) {
                            return;
                        }
                        var vendor = m[1];
                        m = match(/^([-\w]+)\s*/);
                        if (!m) {
                            return error("@keyframes missing name");
                        }
                        var name = m[1];
                        if (!open()) {
                            return error("@keyframes missing '{'");
                        }
                        var frame;
                        var frames = comments();
                        while (frame = keyframe()) {
                            frames.push(frame);
                            frames = frames.concat(comments());
                        }
                        if (!close()) {
                            return error("@keyframes missing '}'");
                        }
                        return {
                            type: "keyframes",
                            name: name,
                            vendor: vendor,
                            keyframes: frames
                        };
                    }
                    function at_page() {
                        var m = match(/^@page */);
                        if (m) {
                            var sel = selector() || [];
                            return {
                                type: "page",
                                selectors: sel,
                                declarations: declarations()
                            };
                        }
                    }
                    function at_fontface() {
                        var m = match(/^@font-face\s*/);
                        if (m) {
                            return {
                                type: "font-face",
                                declarations: declarations()
                            };
                        }
                    }
                    function at_supports() {
                        var m = match(/^@supports *([^{]+)/);
                        if (m) {
                            return {
                                type: "supports",
                                supports: m[1].trim(),
                                rules: rules()
                            };
                        }
                    }
                    function at_host() {
                        var m = match(/^@host\s*/);
                        if (m) {
                            return {
                                type: "host",
                                rules: rules()
                            };
                        }
                    }
                    function at_media() {
                        var m = match(/^@media *([^{]+)/);
                        if (m) {
                            return {
                                type: "media",
                                media: m[1].trim(),
                                rules: rules()
                            };
                        }
                    }
                    function at_custom_m() {
                        var m = match(/^@custom-media\s+(--[^\s]+)\s*([^{;]+);/);
                        if (m) {
                            return {
                                type: "custom-media",
                                name: m[1].trim(),
                                media: m[2].trim()
                            };
                        }
                    }
                    function at_document() {
                        var m = match(/^@([-\w]+)?document *([^{]+)/);
                        if (m) {
                            return {
                                type: "document",
                                document: m[2].trim(),
                                vendor: m[1] ? m[1].trim() : null,
                                rules: rules()
                            };
                        }
                    }
                    function at_x() {
                        var m = match(/^@(import|charset|namespace)\s*([^;]+);/);
                        if (m) {
                            return {
                                type: m[1],
                                name: m[2].trim()
                            };
                        }
                    }
                    function at_rule() {
                        whitespace();
                        if (css[0] === "@") {
                            var ret = at_keyframes() || at_supports() || at_host() || at_media() || at_custom_m() || at_page() || at_document() || at_fontface() || at_x();
                            if (ret && !settings.preserveStatic) {
                                var hasVarFunc = false;
                                if (ret.declarations) {
                                    hasVarFunc = ret.declarations.some(function(decl) {
                                        return /var\(/.test(decl.value);
                                    });
                                } else {
                                    var arr = ret.keyframes || ret.rules || [];
                                    hasVarFunc = arr.some(function(obj) {
                                        return (obj.declarations || []).some(function(decl) {
                                            return /var\(/.test(decl.value);
                                        });
                                    });
                                }
                                return hasVarFunc ? ret : {};
                            }
                            return ret;
                        }
                    }
                    function rule() {
                        if (!settings.preserveStatic) {
                            var balancedMatch$1 = balancedMatch("{", "}", css);
                            if (balancedMatch$1) {
                                var hasVarDecl = balancedMatch$1.pre.indexOf(":root") !== -1 && /--\S*\s*:/.test(balancedMatch$1.body);
                                var hasVarFunc = /var\(/.test(balancedMatch$1.body);
                                if (!hasVarDecl && !hasVarFunc) {
                                    css = css.slice(balancedMatch$1.end + 1);
                                    return {};
                                }
                            }
                        }
                        var sel = selector() || [];
                        var decls = settings.preserveStatic ? declarations() : declarations().filter(function(decl) {
                            var hasVarDecl = sel.some(function(s) {
                                return s.indexOf(":root") !== -1;
                            }) && /^--\S/.test(decl.property);
                            var hasVarFunc = /var\(/.test(decl.value);
                            return hasVarDecl || hasVarFunc;
                        });
                        if (!sel.length) {
                            error("selector missing");
                        }
                        return {
                            type: "rule",
                            selectors: sel,
                            declarations: decls
                        };
                    }
                    function rules(core) {
                        if (!core && !open()) {
                            return error("missing '{'");
                        }
                        var node;
                        var rules = comments();
                        while (css.length && (core || css[0] !== "}") && (node = at_rule() || rule())) {
                            if (node.type) {
                                rules.push(node);
                            }
                            rules = rules.concat(comments());
                        }
                        if (!core && !close()) {
                            return error("missing '}'");
                        }
                        return rules;
                    }
                    return {
                        type: "stylesheet",
                        stylesheet: {
                            rules: rules(true),
                            errors: errors
                        }
                    };
                }

                function parseVars(cssData) {
                    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                    var defaults = {
                        store: {},
                        onWarning: function onWarning() {}
                    };
                    var settings = _extends({}, defaults, options);
                    if (typeof cssData === "string") {
                        cssData = parseCss(cssData, settings);
                    }
                    cssData.stylesheet.rules.forEach(function(rule) {
                        if (rule.type !== "rule") {
                            return;
                        }
                        if (rule.selectors.length !== 1 || rule.selectors[0] !== ":root") {
                            return;
                        }
                        rule.declarations.forEach(function(decl, i) {
                            var prop = decl.property;
                            var value = decl.value;
                            if (prop && prop.indexOf("--") === 0) {
                                settings.store[prop] = value;
                            }
                        });
                    });
                    return settings.store;
                }

                function stringifyCss(tree) {
                    var delim = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
                    var cb = arguments.length > 2 ? arguments[2] : undefined;
                    var renderMethods = {
                        charset: function charset(node) {
                            return "@charset " + node.name + ";";
                        },
                        comment: function comment(node) {
                            return node.comment.indexOf("__CSSVARSPONYFILL") === 0 ? "/*" + node.comment + "*/" : "";
                        },
                        "custom-media": function customMedia(node) {
                            return "@custom-media " + node.name + " " + node.media + ";";
                        },
                        declaration: function declaration(node) {
                            return node.property + ":" + node.value + ";";
                        },
                        document: function document(node) {
                            return "@" + (node.vendor || "") + "document " + node.document + "{" + visit(node.rules) + "}";
                        },
                        "font-face": function fontFace(node) {
                            return "@font-face" + "{" + visit(node.declarations) + "}";
                        },
                        host: function host(node) {
                            return "@host" + "{" + visit(node.rules) + "}";
                        },
                        import: function _import(node) {
                            return "@import " + node.name + ";";
                        },
                        keyframe: function keyframe(node) {
                            return node.values.join(",") + "{" + visit(node.declarations) + "}";
                        },
                        keyframes: function keyframes(node) {
                            return "@" + (node.vendor || "") + "keyframes " + node.name + "{" + visit(node.keyframes) + "}";
                        },
                        media: function media(node) {
                            return "@media " + node.media + "{" + visit(node.rules) + "}";
                        },
                        namespace: function namespace(node) {
                            return "@namespace " + node.name + ";";
                        },
                        page: function page(node) {
                            return "@page " + (node.selectors.length ? node.selectors.join(", ") : "") + "{" + visit(node.declarations) + "}";
                        },
                        rule: function rule(node) {
                            var decls = node.declarations;
                            if (decls.length) {
                                return node.selectors.join(",") + "{" + visit(decls) + "}";
                            }
                        },
                        supports: function supports(node) {
                            return "@supports " + node.supports + "{" + visit(node.rules) + "}";
                        }
                    };
                    function visit(nodes) {
                        var buf = "";
                        for (var i = 0; i < nodes.length; i++) {
                            var n = nodes[i];
                            if (cb) {
                                cb(n);
                            }
                            var txt = renderMethods[n.type](n);
                            if (txt) {
                                buf += txt;
                                if (txt.length && n.selectors) {
                                    buf += delim;
                                }
                            }
                        }
                        return buf;
                    }
                    return visit(tree.stylesheet.rules);
                }

                function walkCss(node, fn) {
                    node.rules.forEach(function(rule) {
                        if (rule.rules) {
                            walkCss(rule, fn);
                            return;
                        }
                        if (rule.keyframes) {
                            rule.keyframes.forEach(function(keyframe) {
                                if (keyframe.type === "keyframe") {
                                    fn(keyframe.declarations, rule);
                                }
                            });
                            return;
                        }
                        if (!rule.declarations) {
                            return;
                        }
                        fn(rule.declarations, node);
                    });
                }

                var VAR_PROP_IDENTIFIER = "--";

                var VAR_FUNC_IDENTIFIER = "var";

                function transformCss(cssData) {
                    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                    var defaults = {
                        preserveStatic: true,
                        preserveVars: false,
                        variables: {},
                        onWarning: function onWarning() {}
                    };
                    var settings = _extends({}, defaults, options);
                    if (typeof cssData === "string") {
                        cssData = parseCss(cssData, settings);
                    }
                    walkCss(cssData.stylesheet, function(declarations, node) {
                        for (var i = 0; i < declarations.length; i++) {
                            var decl = declarations[i];
                            var type = decl.type;
                            var prop = decl.property;
                            var value = decl.value;
                            if (type !== "declaration") {
                                continue;
                            }
                            if (!settings.preserveVars && prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {
                                declarations.splice(i, 1);
                                i--;
                                continue;
                            }
                            if (value.indexOf(VAR_FUNC_IDENTIFIER + "(") !== -1) {
                                var resolvedValue = resolveValue(value, settings);
                                if (resolvedValue !== decl.value) {
                                    resolvedValue = fixNestedCalc(resolvedValue);
                                    if (!settings.preserveVars) {
                                        decl.value = resolvedValue;
                                    } else {
                                        declarations.splice(i, 0, {
                                            type: type,
                                            property: prop,
                                            value: resolvedValue
                                        });
                                        i++;
                                    }
                                }
                            }
                        }
                    });
                    return stringifyCss(cssData);
                }

                function fixNestedCalc(value) {
                    var reCalcVal = /calc\(([^)]+)\)/g;
                    (value.match(reCalcVal) || []).forEach(function(match) {
                        var newVal = "calc".concat(match.split("calc").join(""));
                        value = value.replace(match, newVal);
                    });
                    return value;
                }

                function resolveValue(value) {
                    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                    var __recursiveFallback = arguments.length > 2 ? arguments[2] : undefined;
                    if (value.indexOf("var(") === -1) {
                        return value;
                    }
                    var valueData = balancedMatch("(", ")", value);
                    function resolveFunc(value) {
                        var name = value.split(",")[0].replace(/[\s\n\t]/g, "");
                        var fallback = (value.match(/(?:\s*,\s*){1}(.*)?/) || [])[1];
                        var match = settings.variables.hasOwnProperty(name) ? String(settings.variables[name]) : undefined;
                        var replacement = match || (fallback ? String(fallback) : undefined);
                        var unresolvedFallback = __recursiveFallback || value;
                        if (!match) {
                            settings.onWarning('variable "'.concat(name, '" is undefined'));
                        }
                        if (replacement && replacement !== "undefined" && replacement.length > 0) {
                            return resolveValue(replacement, settings, unresolvedFallback);
                        } else {
                            return "var(".concat(unresolvedFallback, ")");
                        }
                    }
                    if (!valueData) {
                        if (value.indexOf("var(") !== -1) {
                            settings.onWarning('missing closing ")" in the value "'.concat(value, '"'));
                        }
                        return value;
                    } else if (valueData.pre.slice(-3) === "var") {
                        var isEmptyVarFunc = valueData.body.trim().length === 0;
                        if (isEmptyVarFunc) {
                            settings.onWarning("var() must contain a non-whitespace string");
                            return value;
                        } else {
                            return valueData.pre.slice(0, -3) + resolveFunc(valueData.body) + resolveValue(valueData.post, settings);
                        }
                    } else {
                        return valueData.pre + "(".concat(resolveValue(valueData.body, settings), ")") + resolveValue(valueData.post, settings);
                    }
                }

                var isBrowser = typeof window !== "undefined";

                var isNativeSupport = isBrowser && window.CSS && window.CSS.supports && window.CSS.supports("(--a: 0)");

                var counters = {
                    group: 0,
                    job: 0
                };

                var defaults = {
                    rootElement: isBrowser ? document : null,
                    shadowDOM: false,
                    include: "style,link[rel=stylesheet]",
                    exclude: "",
                    variables: {},
                    onlyLegacy: true,
                    preserveStatic: true,
                    preserveVars: false,
                    silent: false,
                    updateDOM: true,
                    updateURLs: true,
                    watch: null,
                    onBeforeSend: function onBeforeSend() {},
                    onWarning: function onWarning() {},
                    onError: function onError() {},
                    onSuccess: function onSuccess() {},
                    onComplete: function onComplete() {}
                };

                var regex = {
                    cssComments: /\/\*[\s\S]+?\*\//g,
                    cssKeyframes: /@(?:-\w*-)?keyframes/,
                    cssMediaQueries: /@media[^{]+\{([\s\S]+?})\s*}/g,
                    cssRootRules: /(?::root\s*{\s*[^}]*})/g,
                    cssUrls: /url\((?!['"]?(?:data|http|\/\/):)['"]?([^'")]*)['"]?\)/g,
                    cssVarDecls: /(?:[\s;]*)(-{2}\w[\w-]*)(?:\s*:\s*)([^;]*);/g,
                    cssVarFunc: /var\(\s*--[\w-]/,
                    cssVars: /(?:(?::root\s*{\s*[^;]*;*\s*)|(?:var\(\s*))(--[^:)]+)(?:\s*[:)])/
                };

                var variableStore = {
                    dom: {},
                    job: {},
                    user: {}
                };

                var cssVarsIsRunning = false;

                var cssVarsObserver = null;

                var cssVarsSrcNodeCount = 0;

                var debounceTimer = null;

                var isShadowDOMReady = false;

                /**
                 * Fetches, parses, and transforms CSS custom properties from specified
                 * <style> and <link> elements into static values, then appends a new <style>
                 * element with static values to the DOM to provide CSS custom property
                 * compatibility for legacy browsers. Also provides a single interface for
                 * live updates of runtime values in both modern and legacy browsers.
                 *
                 * @preserve
                 * @param {object}   [options] Options object
                 * @param {object}   [options.rootElement=document] Root element to traverse for
                 *                   <link> and <style> nodes
                 * @param {boolean}  [options.shadowDOM=false] Determines if shadow DOM <link>
                 *                   and <style> nodes will be processed.
                 * @param {string}   [options.include="style,link[rel=stylesheet]"] CSS selector
                 *                   matching <link re="stylesheet"> and <style> nodes to
                 *                   process
                 * @param {string}   [options.exclude] CSS selector matching <link
                 *                   rel="stylehseet"> and <style> nodes to exclude from those
                 *                   matches by options.include
                 * @param {object}   [options.variables] A map of custom property name/value
                 *                   pairs. Property names can omit or include the leading
                 *                   double-hyphen (—), and values specified will override
                 *                   previous values
                 * @param {boolean}  [options.onlyLegacy=true] Determines if the ponyfill will
                 *                   only generate legacy-compatible CSS in browsers that lack
                 *                   native support (i.e., legacy browsers)
                 * @param {boolean}  [options.preserveStatic=true] Determines if CSS
                 *                   declarations that do not reference a custom property will
                 *                   be preserved in the transformed CSS
                 * @param {boolean}  [options.preserveVars=false] Determines if CSS custom
                 *                   property declarations will be preserved in the transformed
                 *                   CSS
                 * @param {boolean}  [options.silent=false] Determines if warning and error
                 *                   messages will be displayed on the console
                 * @param {boolean}  [options.updateDOM=true] Determines if the ponyfill will
                 *                   update the DOM after processing CSS custom properties
                 * @param {boolean}  [options.updateURLs=true] Determines if the ponyfill will
                 *                   convert relative url() paths to absolute urls
                 * @param {boolean}  [options.watch=false] Determines if a MutationObserver will
                 *                   be created that will execute the ponyfill when a <link> or
                 *                   <style> DOM mutation is observed
                 * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes
                 *                   1) the XHR object, 2) source node reference, and 3) the
                 *                   source URL as arguments
                 * @param {function} [options.onWarning] Callback after each CSS parsing warning
                 *                   has occurred. Passes 1) a warning message as an argument.
                 * @param {function} [options.onError] Callback after a CSS parsing error has
                 *                   occurred or an XHR request has failed. Passes 1) an error
                 *                   message, and 2) source node reference, 3) xhr, and 4 url as
                 *                   arguments.
                 * @param {function} [options.onSuccess] Callback after CSS data has been
                 *                   collected from each node and before CSS custom properties
                 *                   have been transformed. Allows modifying the CSS data before
                 *                   it is transformed by returning any string value (or false
                 *                   to skip). Passes 1) CSS text, 2) source node reference, and
                 *                   3) the source URL as arguments.
                 * @param {function} [options.onComplete] Callback after all CSS has been
                 *                   processed, legacy-compatible CSS has been generated, and
                 *                   (optionally) the DOM has been updated. Passes 1) a CSS
                 *                   string with CSS variable values resolved, 2) an array of
                 *                   output <style> node references that have been appended to
                 *                   the DOM, 3) an object containing all custom properies names
                 *                   and values, and 4) the ponyfill execution time in
                 *                   milliseconds.
                 *
                 * @example
                 *
                 *   cssVars({
                 *     rootElement   : document,
                 *     shadowDOM     : false,
                 *     include       : 'style,link[rel="stylesheet"]',
                 *     exclude       : '',
                 *     variables     : {},
                 *     onlyLegacy    : true,
                 *     preserveStatic: true,
                 *     preserveVars  : false,
                 *     silent        : false,
                 *     updateDOM     : true,
                 *     updateURLs    : true,
                 *     watch         : false,
                 *     onBeforeSend(xhr, node, url) {},
                 *     onWarning(message) {},
                 *     onError(message, node, xhr, url) {},
                 *     onSuccess(cssText, node, url) {},
                 *     onComplete(cssText, styleNode, cssVariables, benchmark) {}
                 *   });
                 */ function cssVars() {
                    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                    var msgPrefix = "cssVars(): ";
                    var settings = _extends({}, defaults, options);
                    function handleError(message, sourceNode, xhr, url) {
                        if (!settings.silent && window.console) {
                            console.error("".concat(msgPrefix).concat(message, "\n"), sourceNode);
                        }
                        settings.onError(message, sourceNode, xhr, url);
                    }
                    function handleWarning(message) {
                        if (!settings.silent && window.console) {
                            console.warn("".concat(msgPrefix).concat(message));
                        }
                        settings.onWarning(message);
                    }
                    if (!isBrowser) {
                        return;
                    }
                    if (settings.watch) {
                        settings.watch = defaults.watch;
                        addMutationObserver(settings);
                        cssVars(settings);
                        return;
                    } else if (settings.watch === false && cssVarsObserver) {
                        cssVarsObserver.disconnect();
                        cssVarsObserver = null;
                    }
                    if (!settings.__benchmark) {
                        if (cssVarsIsRunning === settings.rootElement) {
                            cssVarsDebounced(options);
                            return;
                        }
                        settings.__benchmark = getTimeStamp();
                        settings.exclude = [ cssVarsObserver ? '[data-cssvars]:not([data-cssvars=""])' : '[data-cssvars="out"]', settings.exclude ].filter(function(selector) {
                            return selector;
                        }).join(",");
                        settings.variables = fixVarNames(settings.variables);
                        if (!cssVarsObserver) {
                            var outNodes = Array.apply(null, settings.rootElement.querySelectorAll('[data-cssvars="out"]'));
                            outNodes.forEach(function(outNode) {
                                var dataGroup = outNode.getAttribute("data-cssvars-group");
                                var srcNode = dataGroup ? settings.rootElement.querySelector('[data-cssvars="src"][data-cssvars-group="'.concat(dataGroup, '"]')) : null;
                                if (!srcNode) {
                                    outNode.parentNode.removeChild(outNode);
                                }
                            });
                            if (cssVarsSrcNodeCount) {
                                var srcNodes = settings.rootElement.querySelectorAll('[data-cssvars]:not([data-cssvars="out"])');
                                if (srcNodes.length < cssVarsSrcNodeCount) {
                                    cssVarsSrcNodeCount = srcNodes.length;
                                    variableStore.dom = {};
                                }
                            }
                        }
                    }
                    if (document.readyState !== "loading") {
                        var isShadowElm = settings.shadowDOM || settings.rootElement.shadowRoot || settings.rootElement.host;
                        if (isNativeSupport && settings.onlyLegacy) {
                            if (settings.updateDOM) {
                                var targetElm = settings.rootElement.host || (settings.rootElement === document ? document.documentElement : settings.rootElement);
                                Object.keys(settings.variables).forEach(function(key) {
                                    targetElm.style.setProperty(key, settings.variables[key]);
                                });
                            }
                        } else if (isShadowElm && !isShadowDOMReady) {
                            getCssData({
                                rootElement: defaults.rootElement,
                                include: defaults.include,
                                exclude: settings.exclude,
                                onSuccess: function onSuccess(cssText, node, url) {
                                    cssText = cssText.replace(regex.cssComments, "").replace(regex.cssMediaQueries, "");
                                    cssText = (cssText.match(regex.cssRootRules) || []).join("");
                                    return cssText || false;
                                },
                                onComplete: function onComplete(cssText, cssArray, nodeArray) {
                                    parseVars(cssText, {
                                        store: variableStore.dom,
                                        onWarning: handleWarning
                                    });
                                    isShadowDOMReady = true;
                                    cssVars(settings);
                                }
                            });
                        } else {
                            cssVarsIsRunning = settings.rootElement;
                            getCssData({
                                rootElement: settings.rootElement,
                                include: settings.include,
                                exclude: settings.exclude,
                                onBeforeSend: settings.onBeforeSend,
                                onError: function onError(xhr, node, url) {
                                    var responseUrl = xhr.responseURL || getFullUrl$1(url, location.href);
                                    var statusText = xhr.statusText ? "(".concat(xhr.statusText, ")") : "Unspecified Error" + (xhr.status === 0 ? " (possibly CORS related)" : "");
                                    var errorMsg = "CSS XHR Error: ".concat(responseUrl, " ").concat(xhr.status, " ").concat(statusText);
                                    handleError(errorMsg, node, xhr, responseUrl);
                                },
                                onSuccess: function onSuccess(cssText, node, url) {
                                    var returnVal = settings.onSuccess(cssText, node, url);
                                    cssText = returnVal !== undefined && Boolean(returnVal) === false ? "" : returnVal || cssText;
                                    if (settings.updateURLs) {
                                        cssText = fixRelativeCssUrls(cssText, url);
                                    }
                                    return cssText;
                                },
                                onComplete: function onComplete(cssText, cssArray) {
                                    var nodeArray = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];
                                    var jobVars = {};
                                    var varStore = settings.updateDOM ? variableStore.dom : Object.keys(variableStore.job).length ? variableStore.job : variableStore.job = JSON.parse(JSON.stringify(variableStore.dom));
                                    var hasVarChange = false;
                                    nodeArray.forEach(function(node, i) {
                                        if (regex.cssVars.test(cssArray[i])) {
                                            try {
                                                var cssTree = parseCss(cssArray[i], {
                                                    preserveStatic: settings.preserveStatic,
                                                    removeComments: true
                                                });
                                                parseVars(cssTree, {
                                                    store: jobVars,
                                                    onWarning: handleWarning
                                                });
                                                node.__cssVars = {
                                                    tree: cssTree
                                                };
                                            } catch (err) {
                                                handleError(err.message, node);
                                            }
                                        }
                                    });
                                    if (settings.updateDOM) {
                                        _extends(variableStore.user, settings.variables);
                                    }
                                    _extends(jobVars, settings.variables);
                                    hasVarChange = Boolean((document.querySelector("[data-cssvars]") || Object.keys(variableStore.dom).length) && Object.keys(jobVars).some(function(name) {
                                        return jobVars[name] !== varStore[name];
                                    }));
                                    _extends(varStore, variableStore.user, jobVars);
                                    if (hasVarChange) {
                                        resetCssNodes(settings.rootElement);
                                        cssVars(settings);
                                    } else {
                                        var outCssArray = [];
                                        var outNodeArray = [];
                                        var hasKeyframesWithVars = false;
                                        variableStore.job = {};
                                        if (settings.updateDOM) {
                                            counters.job++;
                                        }
                                        nodeArray.forEach(function(node) {
                                            var isSkip = !node.__cssVars;
                                            if (node.__cssVars) {
                                                try {
                                                    transformCss(node.__cssVars.tree, _extends({}, settings, {
                                                        variables: varStore,
                                                        onWarning: handleWarning
                                                    }));
                                                    var outCss = stringifyCss(node.__cssVars.tree);
                                                    if (settings.updateDOM) {
                                                        if (!node.getAttribute("data-cssvars")) {
                                                            node.setAttribute("data-cssvars", "src");
                                                        }
                                                        if (outCss.length) {
                                                            var dataGroup = node.getAttribute("data-cssvars-group") || ++counters.group;
                                                            var outCssNoSpaces = outCss.replace(/\s/g, "");
                                                            var outNode = settings.rootElement.querySelector('[data-cssvars="out"][data-cssvars-group="'.concat(dataGroup, '"]')) || document.createElement("style");
                                                            hasKeyframesWithVars = hasKeyframesWithVars || regex.cssKeyframes.test(outCss);
                                                            if (!outNode.hasAttribute("data-cssvars")) {
                                                                outNode.setAttribute("data-cssvars", "out");
                                                            }
                                                            if (outCssNoSpaces === node.textContent.replace(/\s/g, "")) {
                                                                isSkip = true;
                                                                if (outNode && outNode.parentNode) {
                                                                    node.removeAttribute("data-cssvars-group");
                                                                    outNode.parentNode.removeChild(outNode);
                                                                }
                                                            } else if (outCssNoSpaces !== outNode.textContent.replace(/\s/g, "")) {
                                                                [ node, outNode ].forEach(function(n) {
                                                                    n.setAttribute("data-cssvars-job", counters.job);
                                                                    n.setAttribute("data-cssvars-group", dataGroup);
                                                                });
                                                                outNode.textContent = outCss;
                                                                outCssArray.push(outCss);
                                                                outNodeArray.push(outNode);
                                                                if (!outNode.parentNode) {
                                                                    node.parentNode.insertBefore(outNode, node.nextSibling);
                                                                }
                                                            }
                                                        }
                                                    } else {
                                                        if (node.textContent.replace(/\s/g, "") !== outCss) {
                                                            outCssArray.push(outCss);
                                                        }
                                                    }
                                                } catch (err) {
                                                    handleError(err.message, node);
                                                }
                                            }
                                            if (isSkip) {
                                                node.setAttribute("data-cssvars", "skip");
                                            }
                                            if (!node.hasAttribute("data-cssvars-job")) {
                                                node.setAttribute("data-cssvars-job", counters.job);
                                            }
                                        });
                                        cssVarsSrcNodeCount = settings.rootElement.querySelectorAll('[data-cssvars]:not([data-cssvars="out"])').length;
                                        if (settings.shadowDOM) {
                                            var elms = [ settings.rootElement ].concat(_toConsumableArray(settings.rootElement.querySelectorAll("*")));
                                            for (var i = 0, elm; elm = elms[i]; ++i) {
                                                if (elm.shadowRoot && elm.shadowRoot.querySelector("style")) {
                                                    var shadowSettings = _extends({}, settings, {
                                                        rootElement: elm.shadowRoot,
                                                        variables: variableStore.dom
                                                    });
                                                    cssVars(shadowSettings);
                                                }
                                            }
                                        }
                                        if (settings.updateDOM && hasKeyframesWithVars) {
                                            fixKeyframes(settings.rootElement);
                                        }
                                        cssVarsIsRunning = false;
                                        settings.onComplete(outCssArray.join(""), outNodeArray, JSON.parse(JSON.stringify(varStore)), getTimeStamp() - settings.__benchmark);
                                    }
                                }
                            });
                        }
                    } else {
                        document.addEventListener("DOMContentLoaded", function init(evt) {
                            cssVars(options);
                            document.removeEventListener("DOMContentLoaded", init);
                        });
                    }
                }

                cssVars.reset = function() {
                    cssVarsIsRunning = false;
                    if (cssVarsObserver) {
                        cssVarsObserver.disconnect();
                        cssVarsObserver = null;
                    }
                    cssVarsSrcNodeCount = 0;
                    debounceTimer = null;
                    isShadowDOMReady = false;
                    for (var prop in variableStore) {
                        variableStore[prop] = {};
                    }
                };

                function addMutationObserver(settings) {
                    function isLink(node) {
                        var isStylesheet = node.tagName === "LINK" && (node.getAttribute("rel") || "").indexOf("stylesheet") !== -1;
                        return isStylesheet && !node.disabled;
                    }
                    function isStyle(node) {
                        return node.tagName === "STYLE" && !node.disabled;
                    }
                    function isValidAddMutation(mutationNodes) {
                        return Array.apply(null, mutationNodes).some(function(node) {
                            var isElm = node.nodeType === 1;
                            var hasAttr = isElm && node.hasAttribute("data-cssvars");
                            var isStyleWithVars = isStyle(node) && regex.cssVars.test(node.textContent);
                            var isValid = !hasAttr && (isLink(node) || isStyleWithVars);
                            return isValid;
                        });
                    }
                    function isValidRemoveMutation(mutationNodes) {
                        return Array.apply(null, mutationNodes).some(function(node) {
                            var isElm = node.nodeType === 1;
                            var isOutNode = isElm && node.getAttribute("data-cssvars") === "out";
                            var isSrcNode = isElm && node.getAttribute("data-cssvars") === "src";
                            var isValid = isSrcNode;
                            if (isSrcNode || isOutNode) {
                                var dataGroup = node.getAttribute("data-cssvars-group");
                                var orphanNode = settings.rootElement.querySelector('[data-cssvars-group="'.concat(dataGroup, '"]'));
                                if (isSrcNode) {
                                    resetCssNodes(settings.rootElement);
                                    variableStore.dom = {};
                                }
                                if (orphanNode) {
                                    orphanNode.parentNode.removeChild(orphanNode);
                                }
                            }
                            return isValid;
                        });
                    }
                    if (!window.MutationObserver) {
                        return;
                    }
                    if (cssVarsObserver) {
                        cssVarsObserver.disconnect();
                        cssVarsObserver = null;
                    }
                    cssVarsObserver = new MutationObserver(function(mutations) {
                        var hasValidMutation = mutations.some(function(mutation) {
                            var isValid = false;
                            if (mutation.type === "attributes") {
                                isValid = isLink(mutation.target);
                            } else if (mutation.type === "childList") {
                                isValid = isValidAddMutation(mutation.addedNodes) || isValidRemoveMutation(mutation.removedNodes);
                            }
                            return isValid;
                        });
                        if (hasValidMutation) {
                            cssVars(settings);
                        }
                    });
                    cssVarsObserver.observe(document.documentElement, {
                        attributes: true,
                        attributeFilter: [ "disabled", "href" ],
                        childList: true,
                        subtree: true
                    });
                }

                function cssVarsDebounced(settings) {
                    var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100;
                    clearTimeout(debounceTimer);
                    debounceTimer = setTimeout(function() {
                        settings.__benchmark = null;
                        cssVars(settings);
                    }, delay);
                }

                function fixKeyframes(rootElement) {
                    var animationNameProp = [ "animation-name", "-moz-animation-name", "-webkit-animation-name" ].filter(function(prop) {
                        return getComputedStyle(document.body)[prop];
                    })[0];
                    if (animationNameProp) {
                        var allNodes = rootElement.getElementsByTagName("*");
                        var keyframeNodes = [];
                        var nameMarker = "__CSSVARSPONYFILL-KEYFRAMES__";
                        for (var i = 0, len = allNodes.length; i < len; i++) {
                            var node = allNodes[i];
                            var animationName = getComputedStyle(node)[animationNameProp];
                            if (animationName !== "none") {
                                node.style[animationNameProp] += nameMarker;
                                keyframeNodes.push(node);
                            }
                        }
                        void document.body.offsetHeight;
                        for (var _i = 0, _len = keyframeNodes.length; _i < _len; _i++) {
                            var nodeStyle = keyframeNodes[_i].style;
                            nodeStyle[animationNameProp] = nodeStyle[animationNameProp].replace(nameMarker, "");
                        }
                    }
                }

                function fixRelativeCssUrls(cssText, baseUrl) {
                    var cssUrls = cssText.replace(regex.cssComments, "").match(regex.cssUrls) || [];
                    cssUrls.forEach(function(cssUrl) {
                        var oldUrl = cssUrl.replace(regex.cssUrls, "$1");
                        var newUrl = getFullUrl$1(oldUrl, baseUrl);
                        cssText = cssText.replace(cssUrl, cssUrl.replace(oldUrl, newUrl));
                    });
                    return cssText;
                }

                function fixVarNames() {
                    var varObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
                    var reLeadingHyphens = /^-{2}/;
                    return Object.keys(varObj).reduce(function(obj, value) {
                        var key = reLeadingHyphens.test(value) ? value : "--".concat(value.replace(/^-+/, ""));
                        obj[key] = varObj[value];
                        return obj;
                    }, {});
                }

                function getFullUrl$1(url) {
                    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.href;
                    var d = document.implementation.createHTMLDocument("");
                    var b = d.createElement("base");
                    var a = d.createElement("a");
                    d.head.appendChild(b);
                    d.body.appendChild(a);
                    b.href = base;
                    a.href = url;
                    return a.href;
                }

                function getTimeStamp() {
                    return isBrowser && (window.performance || {}).now ? window.performance.now() : new Date().getTime();
                }

                function resetCssNodes(rootElement) {
                    var resetNodes = Array.apply(null, rootElement.querySelectorAll('[data-cssvars="skip"],[data-cssvars="src"]'));
                    resetNodes.forEach(function(node) {
                        return node.setAttribute("data-cssvars", "");
                    });
                }

                /* harmony default export */ __webpack_exports__["default"] = (cssVars);
//# sourceMappingURL=css-vars-ponyfill.esm.js.map


                /***/ })
            /******/ ]);
});
//# sourceMappingURL=checkout.js.map
